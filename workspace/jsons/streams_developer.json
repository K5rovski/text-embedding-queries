[
{
"h1": {
"urllink": "#introduction",
"text": "What Is Amazon Kinesis Data Streams?"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#introduction",
"main_header": "What Is Amazon Kinesis Data Streams?",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#introduction",
"text": "What Is Amazon Kinesis Data Streams?"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#use-service-for-what",
"title": "What Can I Do with Kinesis Data Streams?"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#using-the-service",
"title": "Benefits of Using Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#related-services",
"title": "Related Services"
}
],
"text": "TopicsWhat Can I Do with Kinesis Data Streams?Benefits of Using Kinesis Data StreamsRelated Services",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#introduction",
"main_header": "What Is Amazon Kinesis Data Streams?",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#introduction",
"text": "What Is Amazon Kinesis Data Streams?"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#introduction",
"main_header": "What Is Amazon Kinesis Data Streams?",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#introduction",
"text": "What Is Amazon Kinesis Data Streams?"
},
"h2": {
"urllink": "#use-service-for-what",
"text": "What Can I Do with Kinesis Data Streams?"
},
"links": [],
"text": "Accelerated log and data feed intake and processing\n\nYou can have producers push data directly into a stream. For example, push system and application logs and they are available for processing in seconds. This prevents the log data from being lost if the front end or application server fails. Kinesis Data Streams provides accelerated data feed intake because you don't batch the data on the servers before you submit it for intake.\n\nReal-time metrics and reporting\n\nYou can use data collected into Kinesis Data Streams for simple data analysis and reporting in real time. For example, your data-processing application can work on metrics and reporting for system and application logs as the data is streaming in, rather than wait to receive batches of data.\n\nReal-time data analytics\n\nThis combines the power of parallel processing with the value of real-time data. For example, process website clickstreams in real time, and then analyze site usability engagement using multiple different Kinesis Data Streams applications running in parallel.\n\nComplex stream processing\n\nYou can create Directed Acyclic Graphs (DAGs) of Kinesis Data Streams applications and data streams. This typically involves putting data from multiple Kinesis Data Streams applications into another stream for downstream processing by a different Kinesis Data Streams application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#use-service-for-what",
"main_header": "What Can I Do with Kinesis Data Streams?",
"images": [],
"container_type": "div",
"children_tags": [
"dl"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#key-concepts",
"main_header": "Amazon Kinesis Data Streams Terminology and Concepts",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#high-level-architecture",
"title": "Kinesis Data Streams High-Level Architecture"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#terminology",
"title": "Kinesis Data Streams Terminology"
}
],
"text": "TopicsKinesis Data Streams High-Level ArchitectureKinesis Data Streams Terminology",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#key-concepts",
"main_header": "Amazon Kinesis Data Streams Terminology and Concepts",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#key-concepts",
"main_header": "Amazon Kinesis Data Streams Terminology and Concepts",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#high-level-architecture",
"text": "Kinesis Data Streams High-Level Architecture"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#high-level-architecture",
"main_header": "Kinesis Data Streams High-Level Architecture",
"images": [
{
"src": "https://docs.aws.amazon.com/streams/latest/dev/images/architecture.png",
"alt": "\n                Kinesis Data Streams high-level architecture diagram\n            "
}
],
"container_type": "div",
"children_tags": [
"img"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#sequence-number",
"text": "Sequence Number"
},
"links": [],
"text": "NoteSequence numbers cannot be used as indexes to sets of data within the same stream. To logically separate sets of data, use partition keys or create a separate stream for each dataset.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#sequence-number",
"main_header": "Sequence Number",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#sequence-number",
"text": "Sequence Number"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#sequence-number",
"main_header": "Sequence Number",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#sequence-number",
"text": "Sequence Number"
},
"links": [],
"text": "Sequence numbers cannot be used as indexes to sets of data within the same stream. To logically separate sets of data, use partition keys or create a separate stream for each dataset.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#sequence-number",
"main_header": "Sequence Number",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#sequence-number",
"text": "Sequence Number"
},
"links": [],
"text": "Sequence numbers cannot be used as indexes to sets of data within the same stream. To logically separate sets of data, use partition keys or create a separate stream for each dataset.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#sequence-number",
"main_header": "Sequence Number",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#server-side-encryption-concept",
"text": "Server-Side Encryption"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"title": "Permissions to Use User-Generated KMS Master Keys"
}
],
"text": "NoteTo read from or write to an encrypted stream, producer and consumer applications must have permission to access the master key. For information about granting permissions to producer and consumer applications, see Permissions to Use User-Generated KMS Master Keys.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#server-side-encryption-concept",
"main_header": "Server-Side Encryption",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#server-side-encryption-concept",
"text": "Server-Side Encryption"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#server-side-encryption-concept",
"main_header": "Server-Side Encryption",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#server-side-encryption-concept",
"text": "Server-Side Encryption"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"title": "Permissions to Use User-Generated KMS Master Keys"
}
],
"text": "To read from or write to an encrypted stream, producer and consumer applications must have permission to access the master key. For information about granting permissions to producer and consumer applications, see Permissions to Use User-Generated KMS Master Keys.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#server-side-encryption-concept",
"main_header": "Server-Side Encryption",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#server-side-encryption-concept",
"text": "Server-Side Encryption"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"title": "Permissions to Use User-Generated KMS Master Keys"
}
],
"text": "To read from or write to an encrypted stream, producer and consumer applications must have permission to access the master key. For information about granting permissions to producer and consumer applications, see Permissions to Use User-Generated KMS Master Keys.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#server-side-encryption-concept",
"main_header": "Server-Side Encryption",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#server-side-encryption-concept",
"text": "Server-Side Encryption"
},
"links": [
{
"url": "http://aws.amazon.com/kms/pricing",
"title": "AWS Key Management Service Pricing"
}
],
"text": "NoteUsing server-side encryption incurs AWS Key Management Service (AWS KMS) costs. For more information, see AWS Key Management Service Pricing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#server-side-encryption-concept",
"main_header": "Server-Side Encryption",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#server-side-encryption-concept",
"text": "Server-Side Encryption"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#server-side-encryption-concept",
"main_header": "Server-Side Encryption",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#server-side-encryption-concept",
"text": "Server-Side Encryption"
},
"links": [
{
"url": "http://aws.amazon.com/kms/pricing",
"title": "AWS Key Management Service Pricing"
}
],
"text": "Using server-side encryption incurs AWS Key Management Service (AWS KMS) costs. For more information, see AWS Key Management Service Pricing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#server-side-encryption-concept",
"main_header": "Server-Side Encryption",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#server-side-encryption-concept",
"text": "Server-Side Encryption"
},
"links": [
{
"url": "http://aws.amazon.com/kms/pricing",
"title": "AWS Key Management Service Pricing"
}
],
"text": "Using server-side encryption incurs AWS Key Management Service (AWS KMS) costs. For more information, see AWS Key Management Service Pricing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#server-side-encryption-concept",
"main_header": "Server-Side Encryption",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#service-sizes-and-limits",
"text": "Quotas and Limits"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html#service-sizes-and-limits",
"main_header": "Quotas and Limits",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#service-sizes-and-limits",
"text": "Quotas and Limits"
},
"links": [
{
"url": "https://docs.aws.amazon.com/servicequotas/latest/userguide/request-quota-increase.html",
"title": "Requesting a Quota Increase"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_UpdateShardCount.html",
"title": "UpdateShardCount"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetRecords.html",
"title": "GetRecords"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetRecords.html",
"title": "GetRecords"
}
],
"text": "There is no upper quota on the number of streams with the provisioned mode that you can have in an account.\n\nWithin your AWS account, by default, you can create up to 50 data streams with the on-demand capacity mode. If you require an increase of this quota, contact AWS support. The default shard quota is 500 shards per AWS account for the following AWS regions: US East (N. Virginia), US West (Oregon), and Europe (Ireland). For all other regions, the default shard quota is 200 shards per AWS account. This limit is only applicable for data streams with the provisioned capacity mode.\nTo request the shards per data stream quota increase, follow the procedure outlined in Requesting a Quota Increase.\n\nA single shard can ingest up to 1 MB of data per second (including partition keys) or 1,000 records per second for writes. Similarly, if you scale your stream to 5,000 shards, the stream can ingest up to 5 GB per second or 5 million records per second. If you need more ingest capacity, you can easily scale up the number of shards in the stream using the AWS Management Console or the UpdateShardCount API.\n\nThe maximum size of the data payload of a record before base64-encoding is up to 1 MB.\n\nGetRecords can retrieve up to 10 MB of data per call from a single shard, and up to 10,000 records per call. Each call to GetRecords is counted as one read transaction.\n\nEach shard can support up to five read transactions per second. Each read transaction can provide up to 10,000 records with an upper quota of 10 MB per transaction.\n\nEach shard can support up to a maximum total data read rate of 2 MB per second via GetRecords. If a call to GetRecords returns 10 MB, subsequent calls made within the next 5 seconds throw an exception.\n\nBy default, new data streams created with the on-demand capacity mode have 4 MB/s of 'write' and 8 MB/s of 'read' throughput. As the traffic increases, data streams with the on-demand capacity mode scale up to 200 MB/s of 'write' and 400 MB/s 'read' throughput. If you require additional throughput, contact AWS support.\n\nWithin your AWS account, by default, you can create up to 50 data streams with the on-demand capacity mode. If you require an increase of this quota, contact AWS support. You can create 5 registered consumers for each data stream with the on-demand capacity mode. If you require an increase of this quota, contact AWS support. For each data stream in your AWS account, you can switch between the on-demand and provisioned capacity modes twice within 24 hours.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html#service-sizes-and-limits",
"main_header": "Quotas and Limits",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#service-sizes-and-limits",
"text": "Quotas and Limits"
},
"h2": {
"urllink": "#kds-api-limits",
"text": "API Limits"
},
"h3": {
"urllink": "#kds-api-limits-control",
"text": "KDS Control Plane API Limits"
},
"links": [],
"text": "Control Plane API Limits\n\nAPI\nAPI call limit\nStream-level limit\nAdditional details AddTagsToStream\n5 transactions per second (TPS)\n50 tags per data stream per account per region CreateStream\n5 TPS\nThere is no upper quota on the number of streams you can have in an account. \nYou receive a LimitExceededException when making a CreateStream request when you try to do one of the following: Have more than five streams in the CREATING state at any point in time. Create more shards than are authorized for your account. DecreaseStreamRetentionPeriod\n5 TPS\nThe minimum value of a data stream's retention period is 24 hours. DeleteStream\n5 TPS\nN/A DeregisterStreamConsumer\n5 TPS\nN/A DescribeLimits\n1 TPS DescribeStream\n10 TPS\nN/A DescribeStreamConsumer\n20 TPS\nN/A DescribeStreamSummary\n20 TPS\nN/A DisableEnhancedMonitoring\n5 TPS\nN/A EnableEnhancedMonitoring\n5 TPS\nN/A IncreaseStreamRetentionPeriod\n5 TPS\nThe maximum value of a stream's retention period is 8760 hours (365 days). ListShards\n100 TPS\nN/A ListStreamConsumers\n5 TPS\nN/A ListStreams\n5 TPS\nN/A ListTagsForStream\n5 TPS\nN/A MergeShards\n5 TPS\nN/A RegisterStreamConsumer\n5 TPS\nYou can register up to 20 consumers per data stream. A given consumer can only be registered with one data stream at a time. Only 5 consumers can be created simultaneously. In other words, you cannot have more than 5 consumers in a CREATING status at the same time. Registering a 6th consumer while there are 5 in a CREATING status results in a LimitExceededException. RemoveTagsFromStream\n5 TPS\nN/A SplitShard\n5 TPS\nN/A StartStreamEncryption You can successfully apply a new AWS KMS key for server-side encryption 25 times in a rolling 24-hour period. StopStreamEncryption You can successfully disable server-side encryption 25 times in a rolling 24-hour period. UpdateShardCount Scale more than ten times per rolling 24-hour period per stream\n\nScale up to more than double your current shard count for a stream\n\nScale down below half your current shard count for a stream\n\nScale up to more than 10000 shards in a stream\n\nScale a stream with more than 10000 shards down unless the result is less than 10000 shards\n\nScale up to more than the shard limit for your account UpdateStreamMode For each data stream in your AWS account, you can switch between the on-demand and provisioned capacity modes twice within 24 hours.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html#kds-api-limits-control",
"main_header": "KDS Control Plane API Limits",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#service-sizes-and-limits",
"text": "Quotas and Limits"
},
"h2": {
"urllink": "#kds-api-limits",
"text": "API Limits"
},
"h3": {
"urllink": "#kds-api-limits-control",
"text": "KDS Control Plane API Limits"
},
"links": [],
"text": "Control Plane API Limits\n\nAPI\nAPI call limit\nStream-level limit\nAdditional details AddTagsToStream\n5 transactions per second (TPS)\n50 tags per data stream per account per region CreateStream\n5 TPS\nThere is no upper quota on the number of streams you can have in an account. \nYou receive a LimitExceededException when making a CreateStream request when you try to do one of the following: Have more than five streams in the CREATING state at any point in time. Create more shards than are authorized for your account. DecreaseStreamRetentionPeriod\n5 TPS\nThe minimum value of a data stream's retention period is 24 hours. DeleteStream\n5 TPS\nN/A DeregisterStreamConsumer\n5 TPS\nN/A DescribeLimits\n1 TPS DescribeStream\n10 TPS\nN/A DescribeStreamConsumer\n20 TPS\nN/A DescribeStreamSummary\n20 TPS\nN/A DisableEnhancedMonitoring\n5 TPS\nN/A EnableEnhancedMonitoring\n5 TPS\nN/A IncreaseStreamRetentionPeriod\n5 TPS\nThe maximum value of a stream's retention period is 8760 hours (365 days). ListShards\n100 TPS\nN/A ListStreamConsumers\n5 TPS\nN/A ListStreams\n5 TPS\nN/A ListTagsForStream\n5 TPS\nN/A MergeShards\n5 TPS\nN/A RegisterStreamConsumer\n5 TPS\nYou can register up to 20 consumers per data stream. A given consumer can only be registered with one data stream at a time. Only 5 consumers can be created simultaneously. In other words, you cannot have more than 5 consumers in a CREATING status at the same time. Registering a 6th consumer while there are 5 in a CREATING status results in a LimitExceededException. RemoveTagsFromStream\n5 TPS\nN/A SplitShard\n5 TPS\nN/A StartStreamEncryption You can successfully apply a new AWS KMS key for server-side encryption 25 times in a rolling 24-hour period. StopStreamEncryption You can successfully disable server-side encryption 25 times in a rolling 24-hour period. UpdateShardCount Scale more than ten times per rolling 24-hour period per stream\n\nScale up to more than double your current shard count for a stream\n\nScale down below half your current shard count for a stream\n\nScale up to more than 10000 shards in a stream\n\nScale a stream with more than 10000 shards down unless the result is less than 10000 shards\n\nScale up to more than the shard limit for your account UpdateStreamMode For each data stream in your AWS account, you can switch between the on-demand and provisioned capacity modes twice within 24 hours.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html#kds-api-limits-control",
"main_header": "KDS Control Plane API Limits",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#service-sizes-and-limits",
"text": "Quotas and Limits"
},
"h2": {
"urllink": "#kds-api-limits",
"text": "API Limits"
},
"h3": {
"urllink": "#kds-api-limits-data",
"text": "KDS Data Plane API Limits"
},
"links": [],
"text": "Data Plane API limits\n\nAPI\nAPI call limit\nPayload limit\nAdditional details GetRecords\n5 TPS\nThe maximum number of records that can be returned per call is 10,000. The maximum size of data that GetRecords can return is 10 MB. \nIf a call returns this amount of data, subsequent calls made within the next 5 seconds throw ProvisionedThroughputExceededException. If there is insufficient provisioned throughput on the stream, subsequent calls made within the next 1 second throw ProvisionedThroughputExceededException. GetShardIterator\n5 TPS\n\nA shard iterator expires 5 minutes after it is returned to the requester. If a GetShardIterator request is made too often, you receive a ProvisionedThroughputExceededException. PutRecord\n1000 TPS\nEach shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second. PutRecords\n\nEach PutRecords request can support up to 500 records. Each record in the request can be as large as 1 MB, up to a limit of 5 MB for the entire request, including partition keys. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second. SubscribeToShard\nYou can make one call to SubscribeToShard per second per registered consumer per shard. If you call SubscribeToShard again with the same ConsumerARN and ShardId within 5 seconds of a successful call, you'll get a ResourceInUseException.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html#kds-api-limits-data",
"main_header": "KDS Data Plane API Limits",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#service-sizes-and-limits",
"text": "Quotas and Limits"
},
"h2": {
"urllink": "#kds-api-limits",
"text": "API Limits"
},
"h3": {
"urllink": "#kds-api-limits-data",
"text": "KDS Data Plane API Limits"
},
"links": [],
"text": "Data Plane API limits\n\nAPI\nAPI call limit\nPayload limit\nAdditional details GetRecords\n5 TPS\nThe maximum number of records that can be returned per call is 10,000. The maximum size of data that GetRecords can return is 10 MB. \nIf a call returns this amount of data, subsequent calls made within the next 5 seconds throw ProvisionedThroughputExceededException. If there is insufficient provisioned throughput on the stream, subsequent calls made within the next 1 second throw ProvisionedThroughputExceededException. GetShardIterator\n5 TPS\n\nA shard iterator expires 5 minutes after it is returned to the requester. If a GetShardIterator request is made too often, you receive a ProvisionedThroughputExceededException. PutRecord\n1000 TPS\nEach shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second. PutRecords\n\nEach PutRecords request can support up to 500 records. Each record in the request can be as large as 1 MB, up to a limit of 5 MB for the entire request, including partition keys. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second. SubscribeToShard\nYou can make one call to SubscribeToShard per second per registered consumer per shard. If you call SubscribeToShard again with the same ConsumerARN and ShardId within 5 seconds of a successful call, you'll get a ResourceInUseException.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html#kds-api-limits-data",
"main_header": "KDS Data Plane API Limits",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#before-you-begin",
"text": "Setting Up for Amazon Kinesis Data Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#before-you-begin",
"main_header": "Setting Up for Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#before-you-begin",
"text": "Setting Up for Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#setting-up-sign-up-for-aws",
"title": "Sign Up for AWS"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#setting-up-downloads",
"title": "Download Libraries and Tools"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#setting-up-requirements",
"title": "Configure Your Development Environment"
}
],
"text": "TasksSign Up for AWSDownload Libraries and ToolsConfigure Your Development Environment",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#before-you-begin",
"main_header": "Setting Up for Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#before-you-begin",
"text": "Setting Up for Amazon Kinesis Data Streams"
},
"links": [],
"text": "Tasks",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#before-you-begin",
"main_header": "Setting Up for Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#before-you-begin",
"text": "Setting Up for Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#setting-up-sign-up-for-aws",
"text": "Sign Up for AWS"
},
"links": [
{
"url": "https://portal.aws.amazon.com/billing/signup",
"title": "https://portal.aws.amazon.com/billing/signup"
}
],
"text": "To sign up for an AWS accountOpen https://portal.aws.amazon.com/billing/signup.\nFollow the online instructions.\nPart of the sign-up procedure involves receiving a phone call and entering a verification code on the phone keypad.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#setting-up-sign-up-for-aws",
"main_header": "Sign Up for AWS",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#before-you-begin",
"text": "Setting Up for Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#setting-up-sign-up-for-aws",
"text": "Sign Up for AWS"
},
"links": [],
"text": "To sign up for an AWS account",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#setting-up-sign-up-for-aws",
"main_header": "Sign Up for AWS",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#before-you-begin",
"text": "Setting Up for Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#setting-up-downloads",
"text": "Download Libraries and Tools"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/",
"title": "Amazon Kinesis API Reference"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"title": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"title": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/sdk-for-go/api/service/kinesis/",
"title": "Go"
},
{
"url": "https://aws.amazon.com/developers/getting-started/java/",
"title": "Java"
},
{
"url": "https://aws.amazon.com/sdkforbrowser/",
"title": "JavaScript"
},
{
"url": "https://aws.amazon.com/developers/getting-started/net/",
"title": ".NET"
},
{
"url": "https://aws.amazon.com/developers/getting-started/nodejs/",
"title": "Node.js"
},
{
"url": "https://aws.amazon.com/developers/getting-started/php/",
"title": "PHP"
},
{
"url": "https://github.com/boto/boto",
"title": "Python"
},
{
"url": "https://aws.amazon.com/developers/getting-started/ruby/",
"title": "Ruby"
},
{
"url": "https://github.com/aws/aws-sdk-java/tree/master/src/samples",
"title": "GitHub"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Streams"
},
{
"url": "https://docs.aws.amazon.com/cli/latest/userguide/",
"title": "AWS Command Line Interface"
}
],
"text": "The Amazon Kinesis API Reference is the basic set of operations that Kinesis Data Streams supports. For more information about performing basic operations using Java code, see the following: Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java\n\nDeveloping Custom Consumers with Shared Throughput Using the AWS SDK for Java\n\nCreating and Managing Streams The AWS SDKs for Go, Java, JavaScript, .NET, Node.js, PHP, Python, and Ruby include Kinesis Data Streams support and samples. If your version of the AWS SDK for Java does not include samples for Kinesis Data Streams, you can also download them from GitHub.\n\nThe Kinesis Client Library (KCL) provides an easy-to-use programming model for processing data. The KCL can help you get started quickly with Kinesis Data Streams in Java, Node.js, .NET, Python, and Ruby. For more information see Reading Data from Streams.\n\nThe AWS Command Line Interface supports Kinesis Data Streams. The AWS CLI enables you to control multiple AWS services from the command line and automate them through scripts.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#setting-up-downloads",
"main_header": "Download Libraries and Tools",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#before-you-begin",
"text": "Setting Up for Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#setting-up-requirements",
"text": "Configure Your Development Environment"
},
"links": [
{
"url": "http://www.oracle.com/technetwork/java/javase/downloads/index.html",
"title": "Java SE Downloads"
}
],
"text": "Java 1.7 (Java SE 7 JDK) or later. You can download the latest Java software from Java SE Downloads on the Oracle website.\n\nApache Commons package (Code, HTTP Client, and Logging)\n\nJackson JSON processor",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#setting-up-requirements",
"main_header": "Configure Your Development Environment",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#getting-started",
"text": "Getting Started with Amazon Kinesis Data Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html#getting-started",
"main_header": "Getting Started with Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#kinesis-tutorial-cli-installation",
"text": "Install and Configure the AWS CLI"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html#kinesis-tutorial-cli-installation",
"main_header": "Install and Configure the AWS CLI",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#fundamental-stream",
"main_header": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#clean-up",
"title": "Step 4: Clean Up"
}
],
"text": "NoteAfter you create a stream, your account incurs nominal charges for Kinesis Data Streams usage because Kinesis Data Streams is not eligible for the AWS free tier. When you are finished with this tutorial, delete your AWS resources to stop incurring charges. For more information, see Step 4: Clean Up.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#fundamental-stream",
"main_header": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#fundamental-stream",
"main_header": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#clean-up",
"title": "Step 4: Clean Up"
}
],
"text": "After you create a stream, your account incurs nominal charges for Kinesis Data Streams usage because Kinesis Data Streams is not eligible for the AWS free tier. When you are finished with this tutorial, delete your AWS resources to stop incurring charges. For more information, see Step 4: Clean Up.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#fundamental-stream",
"main_header": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#clean-up",
"title": "Step 4: Clean Up"
}
],
"text": "After you create a stream, your account incurs nominal charges for Kinesis Data Streams usage because Kinesis Data Streams is not eligible for the AWS free tier. When you are finished with this tutorial, delete your AWS resources to stop incurring charges. For more information, see Step 4: Clean Up.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#fundamental-stream",
"main_header": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#create-stream",
"title": "Step 1: Create a Stream"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#put-record",
"title": "Step 2: Put a Record"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"title": "Step 3: Get the Record"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#clean-up",
"title": "Step 4: Clean Up"
}
],
"text": "TopicsStep 1: Create a StreamStep 2: Put a RecordStep 3: Get the RecordStep 4: Clean Up",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#fundamental-stream",
"main_header": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#fundamental-stream",
"main_header": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#examples",
"text": "Example Tutorials for Amazon Kinesis Data Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html#examples",
"main_header": "Example Tutorials for Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html#tutorial-stock-data-kplkcl2",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html",
"title": "Step 7: Finishing Up"
}
],
"text": "ImportantAfter you create a stream, your account incurs nominal charges for Kinesis Data Streams usage because Kinesis Data Streams is not eligible for the AWS Free Tier. After the consumer application starts, it also incurs nominal charges for Amazon DynamoDB usage. The consumer application uses DynamoDB to track processing state. When you are finished with this application, delete your AWS resources to stop incurring charges. For more information, see Step 7: Finishing Up.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html#tutorial-stock-data-kplkcl2",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html#tutorial-stock-data-kplkcl2",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html",
"title": "Step 7: Finishing Up"
}
],
"text": "After you create a stream, your account incurs nominal charges for Kinesis Data Streams usage because Kinesis Data Streams is not eligible for the AWS Free Tier. After the consumer application starts, it also incurs nominal charges for Amazon DynamoDB usage. The consumer application uses DynamoDB to track processing state. When you are finished with this application, delete your AWS resources to stop incurring charges. For more information, see Step 7: Finishing Up.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html#tutorial-stock-data-kplkcl2",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html",
"title": "Step 7: Finishing Up"
}
],
"text": "After you create a stream, your account incurs nominal charges for Kinesis Data Streams usage because Kinesis Data Streams is not eligible for the AWS Free Tier. After the consumer application starts, it also incurs nominal charges for Amazon DynamoDB usage. The consumer application uses DynamoDB to track processing state. When you are finished with this application, delete your AWS resources to stop incurring charges. For more information, see Step 7: Finishing Up.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html#tutorial-stock-data-kplkcl2",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-begin",
"text": "Prerequisites"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html#tutorial-stock-data-kplkcl2-begin",
"main_header": "Prerequisites",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-create-stream",
"text": "Step 1: Create a Data Stream"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html#tutorial-stock-data-kplkcl2-create-stream",
"main_header": "Step 1: Create a Data Stream",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-create-stream",
"text": "Step 1: Create a Data Stream"
},
"links": [
{
"url": "https://console.aws.amazon.com/kinesis",
"title": "https://console.aws.amazon.com/kinesis"
}
],
"text": "To create a streamSign in to the AWS Management Console and open the Kinesis console at https://console.aws.amazon.com/kinesis.\nChoose Data Streams in the navigation pane.\n\nIn the navigation bar, expand the region selector and choose a region.\n\nChoose Create Kinesis stream.\n\nEnter a name for your data stream (for example, StockTradeStream).\n\nEnter 1 for the number of shards, but leave Estimate the number of shards you'll need collapsed.\n\nChoose Create Kinesis stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html#tutorial-stock-data-kplkcl2-create-stream",
"main_header": "Step 1: Create a Data Stream",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-create-stream",
"text": "Step 1: Create a Data Stream"
},
"links": [],
"text": "To create a stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html#tutorial-stock-data-kplkcl2-create-stream",
"main_header": "Step 1: Create a Data Stream",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "Producer\n\nActions\nResource\nPurpose DescribeStream, DescribeStreamSummary, DescribeStreamConsumer\nKinesis data stream\nBefore attempting to read records, the consumer checks if the data stream exists, if it's active, and if the shards are contained in the data stream. SubscribeToShard, RegisterStreamConsumer\nKinesis data stream\nSubscribes and registers consumers to a shard. PutRecord, PutRecords\nKinesis data stream\nWrites records to Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "Producer\n\nActions\nResource\nPurpose DescribeStream, DescribeStreamSummary, DescribeStreamConsumer\nKinesis data stream\nBefore attempting to read records, the consumer checks if the data stream exists, if it's active, and if the shards are contained in the data stream. SubscribeToShard, RegisterStreamConsumer\nKinesis data stream\nSubscribes and registers consumers to a shard. PutRecord, PutRecords\nKinesis data stream\nWrites records to Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "Consumer\n\nActions\nResource\nPurpose DescribeStream\nKinesis data stream\nBefore attempting to read records, the consumer checks if the data stream exists, if it's active, and if the shards are contained in the data stream. GetRecords, GetShardIterator\n\nKinesis data stream\nReads records from a shard. CreateTable, DescribeTable, GetItem, PutItem, Scan, UpdateItem\nAmazon DynamoDB table\nIf the consumer is developed using the Kinesis Client Library (KCL) (either version 1.x or 2.x), it needs permissions to a DynamoDB table to track the processing state of the application. DeleteItem\nAmazon DynamoDB table\nFor when the consumer performs split/merge operations on Kinesis Data Streams shards. PutMetricData\nAmazon CloudWatch log\nThe KCL also uploads metrics to CloudWatch, which are useful for monitoring the application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "Consumer\n\nActions\nResource\nPurpose DescribeStream\nKinesis data stream\nBefore attempting to read records, the consumer checks if the data stream exists, if it's active, and if the shards are contained in the data stream. GetRecords, GetShardIterator\n\nKinesis data stream\nReads records from a shard. CreateTable, DescribeTable, GetItem, PutItem, Scan, UpdateItem\nAmazon DynamoDB table\nIf the consumer is developed using the Kinesis Client Library (KCL) (either version 1.x or 2.x), it needs permissions to a DynamoDB table to track the processing state of the application. DeleteItem\nAmazon DynamoDB table\nFor when the consumer performs split/merge operations on Kinesis Data Streams shards. PutMetricData\nAmazon CloudWatch log\nThe KCL also uploads metrics to CloudWatch, which are useful for monitoring the application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [
{
"url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-regions-availability-zones",
"title": "Region and Availability Zone Concepts"
},
{
"url": "https://console.aws.amazon.com/billing/home#/account",
"title": "Account Settings"
},
{
"url": "https://console.aws.amazon.com/iam/home#policies",
"title": "https://console.aws.amazon.com/iam/home#policies"
}
],
"text": "To create an IAM policy\nLocate the Amazon Resource Name (ARN) for the new data stream that you created in the step above. You can find this ARN listed as Stream ARN at the top of the Details tab. The ARN format is as follows:\narn:aws:kinesis:region:account:stream/name region\n\nThe AWS region code; for example, us-west-2. For more information, see Region and Availability Zone Concepts.\n\naccount\n\nThe AWS account ID, as shown in Account Settings.\n\nname\n\nThe name of the data stream that you created in the step above, which is StockTradeStream. Determine the ARN for the DynamoDB table to be used by the consumer (and to be created by the first consumer instance). It must be in the following format:\narn:aws:dynamodb:region:account:table/name\nThe region and account ID are identical to the values in the ARN of the data stream that you're using for this tutorial, but the name is the name of the DynamoDB table created and used by the consumer application. KCL uses the application name as the table name. In this step, use StockTradesProcessor for the DynamoDB table name, because that is the application name used in later steps in this tutorial.\n\nIn the IAM console, in Policies (https://console.aws.amazon.com/iam/home#policies), choose Create policy. If this is the first time that you have worked with IAM policies, choose Get Started, Create Policy.\n\nChoose Select next to Policy Generator.\n\nChoose Amazon Kinesis as the AWS service.\n\nSelect DescribeStream, GetShardIterator, GetRecords, PutRecord, and PutRecords as the allowed actions.\n\nEnter the ARN of the data stream that you're using in this tutorial.\n\nUse Add Statement for each of the following: AWS Service\nActions\nARN Amazon DynamoDB\nCreateTable, DeleteItem, DescribeTable, GetItem, PutItem, Scan, UpdateItem\nThe ARN of the DynamoDB table that you created in Step 2 of this procedure. Amazon CloudWatch\nPutMetricData\n* The asterisk (*) that is used when specifying an ARN is not required. In this case, it's because there is no specific resource in CloudWatch on which the PutMetricData action is invoked.\n\nChoose Next Step.\n\nChange Policy Name to StockTradeStreamPolicy, review the code, and choose Create Policy.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "To create an IAM policy",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [
{
"url": "https://console.aws.amazon.com/iam/",
"title": "https://console.aws.amazon.com/iam/"
}
],
"text": "To create an IAM userOpen the IAM console at https://console.aws.amazon.com/iam/.\nOn the Users page, choose Add user.\n\nFor User name, type StockTradeStreamUser.\n\nFor Access type, choose Programmatic access, and then choose Next: Permissions.\n\nChoose Attach existing policies directly.\n\nSearch by name for the policy that you created in the procedure above (StockTradeStreamPolicy. Select the box to the left of the policy name, and then choose Next: Review.\n\nReview the details and summary, and then choose Create user.\n\nCopy the Access key ID, and save it privately. Under Secret access key, choose Show, and save that key privately also.\n\nPaste the access and secret keys to a local file in a safe place that only you can access. For this application, create a file named ~/.aws/credentials (with strict permissions). The file should be in the following format:\n[default]\naws_access_key_id=access key\naws_secret_access_key=secret access key",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "To create an IAM user",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [
{
"url": "https://console.aws.amazon.com/iam/home#policies",
"title": "Policies"
}
],
"text": "To attach an IAM policy to a user\nIn the IAM console, open Policies and choose Policy Actions. Choose StockTradeStreamPolicy and Attach.\n\nChoose StockTradeStreamUser and Attach Policy.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "To attach an IAM policy to a user",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-download",
"text": "Step 3: Download and Build the Code"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-download.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-download.html#tutorial-stock-data-kplkcl2-download",
"main_header": "Step 3: Download and Build the Code",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-download",
"text": "Step 3: Download and Build the Code"
},
"links": [
{
"url": "https://github.com/aws-samples/amazon-kinesis-learning",
"title": "https://github.com/aws-samples/amazon-kinesis-learning"
}
],
"text": "To download and build the code\nDownload the source code from the https://github.com/aws-samples/amazon-kinesis-learning GitHub repo to your computer.\n\nCreate a project in your IDE with the source code, adhering to the provided directory structure.\n\nAdd the following libraries to the project: Amazon Kinesis Client Library (KCL)\n\nAWS SDK\n\nApache HttpCore\n\nApache HttpClient\n\nApache Commons Lang\n\nApache Commons Logging\n\nGuava (Google Core Libraries For Java)\n\nJackson Annotations\n\nJackson Core\n\nJackson Databind\n\nJackson Dataformat: CBOR\n\nJoda Time Depending on your IDE, the project might be built automatically. If not, build the project using the appropriate steps for your IDE.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-download.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-download.html#tutorial-stock-data-kplkcl2-download",
"main_header": "Step 3: Download and Build the Code",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-download",
"text": "Step 3: Download and Build the Code"
},
"links": [],
"text": "To download and build the code",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-download.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-download.html#tutorial-stock-data-kplkcl2-download",
"main_header": "Step 3: Download and Build the Code",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-producer",
"text": "Step 4: Implement the Producer"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html#tutorial-stock-data-kplkcl2-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-producer",
"text": "Step 4: Implement the Producer"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
],
"text": "StockTrade class\n\nAn individual stock trade is represented by an instance of the StockTrade class. This instance contains attributes such as the ticker symbol, price, number of shares, the type of the trade (buy or sell), and an ID uniquely identifying the trade. This class is implemented for you. Stream record\n\nA stream is a sequence of records. A record is a serialization of a StockTrade instance in JSON format. For example: { \"tickerSymbol\": \"AMZN\", \"tradeType\": \"BUY\", \"price\": 395.87, \"quantity\": 16, \"id\": 3567129045\n} StockTradeGenerator class\n\nStockTradeGenerator has a method called getRandomTrade() that returns a new randomly generated stock trade every time it is invoked. This class is implemented for you.\n\nStockTradesWriter class\n\nThe main method of the producer, StockTradesWriter continuously retrieves a random trade and then sends it to Kinesis Data Streams by performing the following tasks: Reads the data stream name and region name as input.\n\nUses the KinesisAsyncClientBuilder to set the region, credentials, and client configuration. Checks that the stream exists and is active (if not, it exits with an error). In a continuous loop, calls the StockTradeGenerator.getRandomTrade() method and then the sendStockTrade method to send the trade to the stream every 100 milliseconds. The sendStockTrade method of the StockTradesWriter class has the following code: private static void sendStockTrade(StockTrade trade, KinesisAsyncClient kinesisClient, String streamName) { byte[] bytes = trade.toJsonAsBytes(); // The bytes could be null if there is an issue with the JSON serialization by the Jackson JSON library. if (bytes == null) { LOG.warn(\"Could not get JSON bytes for stock trade\"); return; } LOG.info(\"Putting trade: \" + trade.toString()); PutRecordRequest request = PutRecordRequest.builder() .partitionKey(trade.getTickerSymbol()) // We use the ticker symbol as the partition key, explained in the Supplemental Information section below. .streamName(streamName) .data(SdkBytes.fromByteArray(bytes)) .build(); try { kinesisClient.putRecord(request).get(); } catch (InterruptedException e) { LOG.info(\"Interrupted, assuming shutdown.\"); } catch (ExecutionException e) { LOG.error(\"Exception while sending data to Kinesis. Will try again next cycle.\", e); } } Refer to the following code breakdown:\n\nThe PutRecord API expects a byte array, and you need to convert trade to JSON format. This single line of code performs that operation: byte[] bytes = trade.toJsonAsBytes(); Before you can send the trade, you create a new PutRecordRequest instance (called request in this case). Each request requires the stream name, partition key, and a data blob. PutPutRecordRequest request = PutRecordRequest.builder() .partitionKey(trade.getTickerSymbol()) // We use the ticker symbol as the partition key, explained in the Supplemental Information section below. .streamName(streamName) .data(SdkBytes.fromByteArray(bytes)) .build(); The example uses a stock ticket as a partition key, which maps the record to a specific shard. In practice, you should have hundreds or thousands of partition keys per shard such that records are evenly dispersed across your stream. For more information about how to add data to a stream, see Writing Data to Amazon Kinesis Data Streams.\nNow request is ready to send to the client (the put operation): kinesisClient.putRecord(request).get(); Error checking and logging are always useful additions. This code logs error conditions: if (bytes == null) { LOG.warn(\"Could not get JSON bytes for stock trade\"); return;\n}\n\nAdd the try/catch block around the put operation: try { kinesisClient.putRecord(request).get();\n} catch (InterruptedException e) { LOG.info(\"Interrupted, assuming shutdown.\");\n} catch (ExecutionException e) { LOG.error(\"Exception while sending data to Kinesis. Will try again next cycle.\", e);\n} This is because a Kinesis Data Streams put operation can fail because of a network error, or due to the data stream reaching its throughput limits and getting throttled. It is recommended that you carefully consider your retry policy for put operations to avoid data loss, such using as a simple retry. Status logging is helpful but optional:\n\nLOG.info(\"Putting trade: \" + trade.toString()); The producer shown here uses the Kinesis Data Streams API single record functionality, PutRecord. In practice, if an individual producer generates many records, it is often more efficient to use the multiple records functionality of PutRecords and send batches of records at a time. For more information, see Writing Data to Amazon Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html#tutorial-stock-data-kplkcl2-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "div",
"children_tags": [
"dl"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-producer",
"text": "Step 4: Implement the Producer"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"title": "Step 2: Create an IAM Policy and User"
}
],
"text": "To run the producer\nVerify that the access key and secret key pair retrieved in Step 2: Create an IAM Policy and User are saved in the file ~/.aws/credentials. Run the StockTradeWriter class with the following arguments:\n\nStockTradeStream us-west-2 If you created your stream in a region other than us-west-2, you have to specify that region here instead.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html#tutorial-stock-data-kplkcl2-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-producer",
"text": "Step 4: Implement the Producer"
},
"links": [],
"text": "To run the producer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html#tutorial-stock-data-kplkcl2-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html#tutorial-stock-data-kplkcl2-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"title": "Using the Kinesis Client Library"
}
],
"text": "StockTradesProcessor class\n\nMain class of the consumer, provided for you, which performs the following tasks: Reads the application, data stream, and region names, passed in as arguments.\n\nCreates a KinesisAsyncClient instance with the region name.\n\nCreates a StockTradeRecordProcessorFactory instance that serves instances of ShardRecordProcessor, implemented by a StockTradeRecordProcessor instance. Creates a ConfigsBuilder instance with the KinesisAsyncClient, StreamName, ApplicationName and StockTradeRecordProcessorFactory instance. This is useful for creating all configurations with default values.\n\nCreates a KCL scheduler (previously, in KCL versions 1.x it was known as the KCL worker) with the ConfigsBuilder instance. The scheduler creates a new thread for each shard (assigned to this consumer instance), which continuously loops to read records from the data stream. It then invokes the StockTradeRecordProcessor instance to process each batch of records received. StockTradeRecordProcessor class\n\nImplementation of the StockTradeRecordProcessor instance, which in turn implements five required methods: initialize, processRecords, leaseLost, shardEnded, and shutdownRequested. \nThe initialize and shutdownRequested methods are used by the KCL to let the record processor know when it should be ready to start receiving records and when it should expect to stop receiving records, respectively, so it can perform any application-specific setup and termination tasks. leaseLost and shardEnded are used to implement any logic for what to do when a lease is lost or a processing has reached the end of a shard. In this example, we simply log messages indicating these events. \nThe code for these methods is provided for you. The main processing happens in the processRecords method, which in turn uses processRecord for each record. This latter method is provided as the mostly empty skeleton code for you to implement in the next step, where it is explained in greater detail. \nAlso of note is the implementation of the support methods for processRecord: reportStats, and resetStats, which are empty in the original source code. \nThe processRecords method is implemented for you, and performs the following steps: For each record passed in, it calls processRecord on it. If at least 1 minute has elapsed since the last report, calls reportStats(), which prints out the latest stats, and then resetStats() which clears the stats so that the next interval includes only new records.\n\nSets the next reporting time.\n\nIf at least 1 minute has elapsed since the last checkpoint, calls checkpoint(). Sets the next checkpointing time.\n\nThis method uses 60-second intervals for the reporting and checkpointing rate. For more information about checkpointing, see Using the Kinesis Client Library. StockStats class\n\nThis class provides data retention and statistics tracking for the most popular stocks over time. This code is provided for you and contains the following methods: addStockTrade(StockTrade): injects the given StockTrade into the running statistics.\n\ntoString(): returns the statistics in a formatted string.\n\nThis class keeps track of the most popular stock by keeping a running count of the total number of trades for each stock and the maximum count. It updates these counts whenever a stock trade arrives.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html#tutorial-stock-data-kplkcl2-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "div",
"children_tags": [
"dl"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [],
"text": "To implement the consumer\nImplement the processRecord method by instantiating a correctly sized StockTrade object and adding the record data to it, logging a warning if there's a problem. byte[] arr = new byte[record.data().remaining()];\nrecord.data().get(arr);\nStockTrade trade = StockTrade.fromJsonAsBytes(arr); if (trade == null) { log.warn(\"Skipping record. Unable to parse record into StockTrade. Partition Key: \" + record.partitionKey()); return; }\nstockStats.addStockTrade(trade); Implement a simple reportStats method. Feel free to modify the output format to suit your preferences. System.out.println(\"****** Shard \" + kinesisShardId + \" stats for last 1 minute ******\\n\" +\nstockStats + \"\\n\" +\n\"****************************************************************\\n\"); Implement the resetStats method, which creates a new stockStats instance. stockStats = new StockStats(); Implement the following methods required by ShardRecordProcessor interface\n\n@Override\npublic void leaseLost(LeaseLostInput leaseLostInput) { log.info(\"Lost lease, so terminating.\");\n}\n\n@Override\npublic void shardEnded(ShardEndedInput shardEndedInput) { try { log.info(\"Reached shard end checkpointing.\"); shardEndedInput.checkpointer().checkpoint(); } catch (ShutdownException | InvalidStateException e) { log.error(\"Exception while checkpointing at shard end. Giving up.\", e); }\n}\n\n@Override\npublic void shutdownRequested(ShutdownRequestedInput shutdownRequestedInput) { log.info(\"Scheduler is shutting down, checkpointing.\"); checkpoint(shutdownRequestedInput.checkpointer());\n}\n\nprivate void checkpoint(RecordProcessorCheckpointer checkpointer) { log.info(\"Checkpointing shard \" + kinesisShardId); try { checkpointer.checkpoint(); } catch (ShutdownException se) { // Ignore checkpoint if the processor instance has been shutdown (fail over). log.info(\"Caught shutdown exception, skipping checkpoint.\", se); } catch (ThrottlingException e) { // Skip checkpoint when throttled. In practice, consider a backoff and retry policy. log.error(\"Caught throttling exception, skipping checkpoint.\", e); } catch (InvalidStateException e) { // This indicates an issue with the DynamoDB table (check for table, provisioned IOPS). log.error(\"Cannot save checkpoint to the DynamoDB table used by the Amazon Kinesis Client Library.\", e); }\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html#tutorial-stock-data-kplkcl2-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [],
"text": "To implement the consumer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html#tutorial-stock-data-kplkcl2-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html",
"title": "Step 4: Implement the Producer"
}
],
"text": "To run the consumer\nRun the producer that you wrote in Step 4: Implement the Producer to inject simulated stock trade records into your stream.\n\nVerify that the access key and secret key pair retrieved earlier (when creating the IAM user) are saved in the file ~/.aws/credentials. Run the StockTradesProcessor class with the following arguments:\nStockTradesProcessor StockTradeStream us-west-2\nNote that if you created your stream in a region other than us-west-2, you have to specify that region here instead.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html#tutorial-stock-data-kplkcl2-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [],
"text": "To run the consumer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html#tutorial-stock-data-kplkcl2-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer-extension",
"text": "Step 6: (Optional) Extending the Consumer"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html#tutorial-stock-data-kplkcl2-consumer-extension",
"main_header": "Step 6: (Optional) Extending the Consumer",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer-extension",
"text": "Step 6: (Optional) Extending the Consumer"
},
"links": [],
"text": "To extend the consumer\nAdd new instance variables: // Ticker symbol of the stock that had the largest quantity of shares sold private String largestSellOrderStock;\n // Quantity of shares for the largest sell order trade\n private long largestSellOrderQuantity; Add the following code to addStockTrade:\n\nif (type == TradeType.SELL) { if (largestSellOrderStock == null || trade.getQuantity() > largestSellOrderQuantity) { largestSellOrderStock = trade.getTickerSymbol(); largestSellOrderQuantity = trade.getQuantity(); }\n } Modify the toString method to print the additional information: public String toString() { return String.format( \"Most popular stock being bought: %s, %d buys.%n\" + \"Most popular stock being sold: %s, %d sells.%n\" + \"Largest sell order: %d shares of %s.\", getMostPopularStock(TradeType.BUY), getMostPopularStockCount(TradeType.BUY), getMostPopularStock(TradeType.SELL), getMostPopularStockCount(TradeType.SELL), largestSellOrderQuantity, largestSellOrderStock);\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html#tutorial-stock-data-kplkcl2-consumer-extension",
"main_header": "Step 6: (Optional) Extending the Consumer",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer-extension",
"text": "Step 6: (Optional) Extending the Consumer"
},
"links": [],
"text": "To extend the consumer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html#tutorial-stock-data-kplkcl2-consumer-extension",
"main_header": "Step 6: (Optional) Extending the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-finish",
"text": "Step 7: Finishing Up"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html#tutorial-stock-data-kplkcl2-finish",
"main_header": "Step 7: Finishing Up",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-finish",
"text": "Step 7: Finishing Up"
},
"links": [
{
"url": "https://console.aws.amazon.com/kinesis",
"title": "https://console.aws.amazon.com/kinesis"
},
{
"url": "https://console.aws.amazon.com/dynamodb/",
"title": "https://console.aws.amazon.com/dynamodb/"
}
],
"text": "To delete the stream and table\nShut down any producers and consumers that you may still have running.\nOpen the Kinesis console at https://console.aws.amazon.com/kinesis.\nChoose the stream that you created for this application (StockTradeStream).\n\nChoose Delete Stream.\nOpen the DynamoDB console at https://console.aws.amazon.com/dynamodb/.\nDelete the StockTradesProcessor table.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html#tutorial-stock-data-kplkcl2-finish",
"main_header": "Step 7: Finishing Up",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-finish",
"text": "Step 7: Finishing Up"
},
"links": [],
"text": "To delete the stream and table",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html#tutorial-stock-data-kplkcl2-finish",
"main_header": "Step 7: Finishing Up",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-finish",
"text": "Step 7: Finishing Up"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-summary",
"text": "Summary"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-connectors",
"title": "connectors"
}
],
"text": "Aggregate across all shards\n\nCurrently, you get stats resulting from aggregation of the data records received by a single worker from a single shard. (A shard cannot be processed by more than one worker in a single application at the same time.) Of course, when you scale and have more than one shard, you might want to aggregate across all shards. You can do this by having a pipeline architecture where the output of each worker is fed into another stream with a single shard, which is processed by a worker that aggregates the outputs of the first stage. Because the data from the first stage is limited (one sample per minute per shard), it would easily be handled by one shard.\n\nScale processing\n\nWhen the stream scales up to have many shards (because many producers are sending data), the way to scale the processing is to add more workers. You can run the workers in Amazon EC2 instances and use Auto Scaling groups.\n\nUse connectors to Amazon S3/DynamoDB/Amazon Redshift/Storm\n\nAs a stream is continuously processed, its output can be sent to other destinations. AWS provides connectors to integrate Kinesis Data Streams with other AWS services and third-party tools.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html#tutorial-stock-data-kplkcl2-summary",
"main_header": "Summary",
"images": [],
"container_type": "div",
"children_tags": [
"dl"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html#tutorial-stock-data-kplkcl",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html",
"title": "Step 7: Finishing Up"
}
],
"text": "ImportantAfter you create a stream, your account incurs nominal charges for Kinesis Data Streams usage because Kinesis Data Streams is not eligible for the AWS Free Tier. After the consumer application starts, it also incurs nominal charges for Amazon DynamoDB usage. The consumer application uses DynamoDB to track processing state. When you are finished with this application, delete your AWS resources to stop incurring charges. For more information, see Step 7: Finishing Up.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html#tutorial-stock-data-kplkcl",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html#tutorial-stock-data-kplkcl",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html",
"title": "Step 7: Finishing Up"
}
],
"text": "After you create a stream, your account incurs nominal charges for Kinesis Data Streams usage because Kinesis Data Streams is not eligible for the AWS Free Tier. After the consumer application starts, it also incurs nominal charges for Amazon DynamoDB usage. The consumer application uses DynamoDB to track processing state. When you are finished with this application, delete your AWS resources to stop incurring charges. For more information, see Step 7: Finishing Up.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html#tutorial-stock-data-kplkcl",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html",
"title": "Step 7: Finishing Up"
}
],
"text": "After you create a stream, your account incurs nominal charges for Kinesis Data Streams usage because Kinesis Data Streams is not eligible for the AWS Free Tier. After the consumer application starts, it also incurs nominal charges for Amazon DynamoDB usage. The consumer application uses DynamoDB to track processing state. When you are finished with this application, delete your AWS resources to stop incurring charges. For more information, see Step 7: Finishing Up.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html#tutorial-stock-data-kplkcl",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-begin",
"text": "Prerequisites"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html#tutorial-stock-data-kplkcl-begin",
"main_header": "Prerequisites",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream",
"text": "Step 1: Create a Data Stream"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html#tutorial-stock-data-kplkcl-create-stream",
"main_header": "Step 1: Create a Data Stream",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream",
"text": "Step 1: Create a Data Stream"
},
"links": [
{
"url": "https://console.aws.amazon.com/kinesis",
"title": "https://console.aws.amazon.com/kinesis"
}
],
"text": "To create a streamSign in to the AWS Management Console and open the Kinesis console at https://console.aws.amazon.com/kinesis.\nChoose Data Streams in the navigation pane.\n\nIn the navigation bar, expand the Region selector and choose a Region.\n\nChoose Create Kinesis stream.\n\nEnter a name for your stream (for example, StockTradeStream).\n\nEnter 1 for the number of shards, but leave Estimate the number of shards you'll need collapsed.\n\nChoose Create Kinesis stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html#tutorial-stock-data-kplkcl-create-stream",
"main_header": "Step 1: Create a Data Stream",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream",
"text": "Step 1: Create a Data Stream"
},
"links": [],
"text": "To create a stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html#tutorial-stock-data-kplkcl-create-stream",
"main_header": "Step 1: Create a Data Stream",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream",
"text": "Step 1: Create a Data Stream"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream-info",
"text": "Additional Information About Shards"
},
"links": [],
"text": "Average record size\n\nAn estimate of the calculated average size of your records. If you don't know this value, use the estimated maximum record size for this value.\n\nMax records written\n\nTake into account the number of entities providing data and the approximate number of records per second produced by each. For example, if you are getting stock trade data from 20 trading servers and each generates 250 trades per second, the total number of trades (records) per second is 5000/second. Number of consuming applications\n\nThe number of applications that independently read from the stream to process the stream in a different way and produce different output. Each application can have multiple instances running on different machines (that is, run in a cluster) so that it can keep up with a high volume stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html#tutorial-stock-data-kplkcl-create-stream-info",
"main_header": "Additional Information About Shards",
"images": [],
"container_type": "div",
"children_tags": [
"dl"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "Producer\n\nActions\nResource\nPurpose DescribeStream, DescribeStreamSummary, DescribeStreamConsumer\nKinesis data stream\nBefore attempting to write records, the producer checks if the stream exists and is active, and if the shards are contained in the stream, and if the stream has a consumer. SubscribeToShard, RegisterStreamConsumer\nKinesis data stream\nSubscribes and register a consumers to a Kinesis Data Stream shard. PutRecord, PutRecords\nKinesis data stream\nWrite records to Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "Producer\n\nActions\nResource\nPurpose DescribeStream, DescribeStreamSummary, DescribeStreamConsumer\nKinesis data stream\nBefore attempting to write records, the producer checks if the stream exists and is active, and if the shards are contained in the stream, and if the stream has a consumer. SubscribeToShard, RegisterStreamConsumer\nKinesis data stream\nSubscribes and register a consumers to a Kinesis Data Stream shard. PutRecord, PutRecords\nKinesis data stream\nWrite records to Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "Consumer\n\nActions\nResource\nPurpose DescribeStream\nKinesis data stream\nBefore attempting to read records, the consumer checks if the stream exists and is active, and if the shards are contained in the stream. GetRecords, GetShardIterator\n\nKinesis data stream\nRead records from a Kinesis Data Streams shard. CreateTable, DescribeTable, GetItem, PutItem, Scan, UpdateItem\nAmazon DynamoDB table\nIf the consumer is developed using the Kinesis Client Library (KCL), it needs permissions to a DynamoDB table to track the processing state of the application. The first consumer started creates the table. DeleteItem\nAmazon DynamoDB table\nFor when the consumer performs split/merge operations on Kinesis Data Streams shards. PutMetricData\nAmazon CloudWatch log\nThe KCL also uploads metrics to CloudWatch, which are useful for monitoring the application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "Consumer\n\nActions\nResource\nPurpose DescribeStream\nKinesis data stream\nBefore attempting to read records, the consumer checks if the stream exists and is active, and if the shards are contained in the stream. GetRecords, GetShardIterator\n\nKinesis data stream\nRead records from a Kinesis Data Streams shard. CreateTable, DescribeTable, GetItem, PutItem, Scan, UpdateItem\nAmazon DynamoDB table\nIf the consumer is developed using the Kinesis Client Library (KCL), it needs permissions to a DynamoDB table to track the processing state of the application. The first consumer started creates the table. DeleteItem\nAmazon DynamoDB table\nFor when the consumer performs split/merge operations on Kinesis Data Streams shards. PutMetricData\nAmazon CloudWatch log\nThe KCL also uploads metrics to CloudWatch, which are useful for monitoring the application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [
{
"url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-regions-availability-zones",
"title": "Region and Availability Zone Concepts"
},
{
"url": "https://console.aws.amazon.com/billing/home#/account",
"title": "Account Settings"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html",
"title": "Step 1: Create a Data Stream"
},
{
"url": "https://console.aws.amazon.com/iam/home#policies",
"title": "https://console.aws.amazon.com/iam/home#policies"
}
],
"text": "To create an IAM policy\nLocate the Amazon Resource Name (ARN) for the new stream. You can find this ARN listed as Stream ARN at the top of the Details tab. The ARN format is as follows:\narn:aws:kinesis:region:account:stream/name region\n\nThe Region code; for example, us-west-2. For more information, see Region and Availability Zone Concepts.\n\naccount\n\nThe AWS account ID, as shown in Account Settings.\n\nname\n\nThe name of the stream from Step 1: Create a Data Stream, which is StockTradeStream. Determine the ARN for the DynamoDB table to be used by the consumer (and created by the first consumer instance). It must be in the following format:\narn:aws:dynamodb:region:account:table/name\nThe Region and account are from the same place as the previous step, but this time name is the name of the table created and used by the consumer application. The KCL used by the consumer uses the application name as the table name. Use StockTradesProcessor, which is the application name used later.\n\nIn the IAM console, in Policies (https://console.aws.amazon.com/iam/home#policies), choose Create policy. If this is the first time that you have worked with IAM policies, choose Get Started, Create Policy.\n\nChoose Select next to Policy Generator.\n\nChoose Amazon Kinesis as the AWS service.\n\nSelect DescribeStream, GetShardIterator, GetRecords, PutRecord, and PutRecords as the allowed actions.\n\nEnter the ARN that you created in Step 1.\n\nUse Add Statement for each of the following: AWS Service\nActions\nARN Amazon DynamoDB\nCreateTable, DeleteItem, DescribeTable, GetItem, PutItem, Scan, UpdateItem\nThe ARN you created in Step 2 Amazon CloudWatch\nPutMetricData\n* The asterisk (*) that is used when specifying an ARN is not required. In this case, it's because there is no specific resource in CloudWatch on which the PutMetricData action is invoked.\n\nChoose Next Step.\n\nChange Policy Name to StockTradeStreamPolicy, review the code, and choose Create Policy.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "To create an IAM policy",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [
{
"url": "https://console.aws.amazon.com/iam/",
"title": "https://console.aws.amazon.com/iam/"
}
],
"text": "To create an IAM userOpen the IAM console at https://console.aws.amazon.com/iam/.\nOn the Users page, choose Add user.\n\nFor User name, type StockTradeStreamUser.\n\nFor Access type, choose Programmatic access, and then choose Next: Permissions.\n\nChoose Attach existing policies directly.\n\nSearch by name for the policy that you created. Select the box to the left of the policy name, and then choose Next: Review.\n\nReview the details and summary, and then choose Create user.\n\nCopy the Access key ID, and save it privately. Under Secret access key, choose Show, and save that key privately also.\n\nPaste the access and secret keys to a local file in a safe place that only you can access. For this application, create a file named ~/.aws/credentials (with strict permissions). The file should be in the following format:\n[default]\naws_access_key_id=access key\naws_secret_access_key=secret access key",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "To create an IAM user",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [
{
"url": "https://console.aws.amazon.com/iam/home#policies",
"title": "Policies"
}
],
"text": "To attach an IAM policy to a user\nIn the IAM console, open Policies and choose Policy Actions. Choose StockTradeStreamPolicy and Attach.\n\nChoose StockTradeStreamUser and Attach Policy.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "To attach an IAM policy to a user",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-download",
"text": "Step 3: Download and Build the Implementation Code"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-download.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-download.html#tutorial-stock-data-kplkcl-download",
"main_header": "Step 3: Download and Build the Implementation Code",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-download",
"text": "Step 3: Download and Build the Implementation Code"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-learning/tree/learning-module-1",
"title": "source code"
}
],
"text": "To download and build the implementation code\nDownload the source code to your computer.\n\nCreate a project in your favorite IDE with the source code, adhering to the provided directory structure.\n\nAdd the following libraries to the project: Amazon Kinesis Client Library (KCL)\n\nAWS SDK\n\nApache HttpCore\n\nApache HttpClient\n\nApache Commons Lang\n\nApache Commons Logging\n\nGuava (Google Core Libraries For Java)\n\nJackson Annotations\n\nJackson Core\n\nJackson Databind\n\nJackson Dataformat: CBOR\n\nJoda Time Depending on your IDE, the project might be built automatically. If not, build the project using the appropriate steps for your IDE.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-download.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-download.html#tutorial-stock-data-kplkcl-download",
"main_header": "Step 3: Download and Build the Implementation Code",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-download",
"text": "Step 3: Download and Build the Implementation Code"
},
"links": [],
"text": "To download and build the implementation code",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-download.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-download.html#tutorial-stock-data-kplkcl-download",
"main_header": "Step 3: Download and Build the Implementation Code",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-producer",
"text": "Step 4: Implement the Producer"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html#tutorial-stock-data-kplkcl-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-producer",
"text": "Step 4: Implement the Producer"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream",
"title": "Adding Data to a Stream"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream",
"title": "Adding Data to a Stream"
}
],
"text": "StockTrade class\n\nAn individual stock trade is represented by an instance of the StockTrade class. This instance contains attributes such as the ticker symbol, price, number of shares, the type of the trade (buy or sell), and an ID uniquely identifying the trade. This class is implemented for you.\n\nStream record\n\nA stream is a sequence of records. A record is a serialization of a StockTrade instance in JSON format. For example: \n{ \"tickerSymbol\": \"AMZN\", \"tradeType\": \"BUY\", \"price\": 395.87, \"quantity\": 16, \"id\": 3567129045\n}\n\nStockTradeGenerator class\n\nStockTradeGenerator has a method called getRandomTrade() that returns a new randomly generated stock trade every time it is invoked. This class is implemented for you.\n\nStockTradesWriter class\n\nThe main method of the producer, StockTradesWriter continuously retrieves a random trade and then sends it to Kinesis Data Streams by performing the following tasks: Reads the stream name and Region name as input.\n\nCreates an AmazonKinesisClientBuilder.\n\nUses the client builder to set the Region, credentials, and client configuration.\n\nBuilds an AmazonKinesis client using the client builder.\n\nChecks that the stream exists and is active (if not, it exits with an error).\n\nIn a continuous loop, calls the StockTradeGenerator.getRandomTrade() method and then the sendStockTrade method to send the trade to the stream every 100 milliseconds.\n\nThe sendStockTrade method of the StockTradesWriter class has the following code:\nprivate static void sendStockTrade(StockTrade trade, AmazonKinesis kinesisClient, String streamName) { byte[] bytes = trade.toJsonAsBytes(); // The bytes could be null if there is an issue with the JSON serialization by the Jackson JSON library. if (bytes == null) { LOG.warn(\"Could not get JSON bytes for stock trade\"); return; } LOG.info(\"Putting trade: \" + trade.toString()); PutRecordRequest putRecord = new PutRecordRequest(); putRecord.setStreamName(streamName); // We use the ticker symbol as the partition key, explained in the Supplemental Information section below. putRecord.setPartitionKey(trade.getTickerSymbol()); putRecord.setData(ByteBuffer.wrap(bytes)); try { kinesisClient.putRecord(putRecord); } catch (AmazonClientException ex) { LOG.warn(\"Error sending record to Amazon Kinesis.\", ex); }\n}\n\nRefer to the following code breakdown:\n\nThe PutRecord API expects a byte array, and you need to convert trade to JSON format. This single line of code performs that operation:\nbyte[] bytes = trade.toJsonAsBytes();\n\nBefore you can send the trade, you create a new PutRecordRequest instance (called putRecord in this case):\nPutRecordRequest putRecord = new PutRecordRequest();\nEach PutRecord call requires the stream name, partition key, and data blob. The following code populates these fields in the putRecord object using its setXxxx() methods:\nputRecord.setStreamName(streamName);\nputRecord.setPartitionKey(trade.getTickerSymbol());\nputRecord.setData(ByteBuffer.wrap(bytes));\nThe example uses a stock ticket as a partition key, which maps the record to a specific shard. In practice, you should have hundreds or thousands of partition keys per shard such that records are evenly dispersed across your stream. For more information about how to add data to a stream, see Adding Data to a Stream.\nNow putRecord is ready to send to the client (the put operation):\nkinesisClient.putRecord(putRecord);\n\nError checking and logging are always useful additions. This code logs error conditions:\nif (bytes == null) { LOG.warn(\"Could not get JSON bytes for stock trade\"); return;\n}\nAdd the try/catch block around the put operation:\ntry { kinesisClient.putRecord(putRecord);\n} catch (AmazonClientException ex) { LOG.warn(\"Error sending record to Amazon Kinesis.\", ex);\n}\nThis is because a Kinesis Data Streams put operation can fail because of a network error, or due to the stream reaching its throughput limits and getting throttled. We recommend carefully considering your retry policy for put operations to avoid data loss, such using as a simple retry. Status logging is helpful but optional:\nLOG.info(\"Putting trade: \" + trade.toString());\n\nThe producer shown here uses the Kinesis Data Streams API single record functionality, PutRecord. In practice, if an individual producer generates many records, it is often more efficient to use the multiple records functionality of PutRecords and send batches of records at a time. For more information, see Adding Data to a Stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html#tutorial-stock-data-kplkcl-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "div",
"children_tags": [
"dl"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-producer",
"text": "Step 4: Implement the Producer"
},
"links": [],
"text": "To run the producer\nVerify that the access key and secret key pair retrieved earlier (when creating the IAM user) are saved in the file ~/.aws/credentials. Run the StockTradeWriter class with the following arguments:\nStockTradeStream us-west-2\nIf you created your stream in a Region other than us-west-2, you have to specify that Region here instead.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html#tutorial-stock-data-kplkcl-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-producer",
"text": "Step 4: Implement the Producer"
},
"links": [],
"text": "To run the producer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html#tutorial-stock-data-kplkcl-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer-supplement",
"title": "Additional Information About the Consumer"
}
],
"text": "StockTradesProcessor class\n\nMain class of the consumer, provided for you, which performs the following tasks: Reads the application, stream, and Region names, passed in as arguments.\n\nReads credentials from ~/.aws/credentials.\n\nCreates a RecordProcessorFactory instance that serves instances of RecordProcessor, implemented by a StockTradeRecordProcessor instance.\n\nCreates a KCL worker with the RecordProcessorFactory instance and a standard configuration including the stream name, credentials, and application name. The worker creates a new thread for each shard (assigned to this consumer instance), which continuously loops to read records from Kinesis Data Streams. It then invokes the RecordProcessor instance to process each batch of records received. StockTradeRecordProcessor class\n\nImplementation of the RecordProcessor instance, which in turn implements three required methods: initialize, processRecords, and shutdown.\nAs the names suggest, initialize and shutdown are used by the Kinesis Client Library to let the record processor know when it should be ready to start receiving records and when it should expect to stop receiving records, respectively, so it can do any application-specific setup and termination tasks. The code for these is provided for you. The main processing happens in the processRecords method, which in turn uses processRecord for each record. This latter method is provided as mostly empty skeleton code for you to implement in the next step, where it is explained further.\nAlso of note is the implementation of support methods for processRecord: reportStats, and resetStats, which are empty in the original source code.\nThe processRecords method is implemented for you, and performs the following steps: For each record passed in, calls processRecord on it.\n\nIf at least 1 minute has elapsed since the last report, calls reportStats(), which prints out the latest stats, and then resetStats() which clears the stats so that the next interval includes only new records.\n\nSets the next reporting time.\n\nIf at least 1 minute has elapsed since the last checkpoint, calls checkpoint(). Sets the next checkpointing time.\n\nThis method uses 60-second intervals for the reporting and checkpointing rate. For more information about checkpointing, see Additional Information About the Consumer.\n\nStockStats class\n\nThis class provides data retention and statistics tracking for the most popular stocks over time. This code is provided for you and contains the following methods: addStockTrade(StockTrade): Injects the given StockTrade into the running statistics.\n\ntoString(): Returns the statistics in a formatted string.\n\nThis class keeps track of the most popular stock by keeping a running count of the total number of trades for each stock and the maximum count. It updates these counts whenever a stock trade arrives.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "div",
"children_tags": [
"dl"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [],
"text": "To implement the consumer\nImplement the processRecord method by instantiating a correctly sized StockTrade object and adding the record data to it, logging a warning if there's a problem.\nStockTrade trade = StockTrade.fromJsonAsBytes(record.getData().array());\nif (trade == null) { LOG.warn(\"Skipping record. Unable to parse record into StockTrade. Partition Key: \" + record.getPartitionKey()); return;\n}\nstockStats.addStockTrade(trade);\n\nImplement a simple reportStats method. Feel free to modify the output format to your preferences.\nSystem.out.println(\"****** Shard \" + kinesisShardId + \" stats for last 1 minute ******\\n\" + stockStats + \"\\n\" + \"****************************************************************\\n\"); Finally, implement the resetStats method, which creates a new stockStats instance.\nstockStats = new StockStats();",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [],
"text": "To implement the consumer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"title": "Step 4: Implement the Producer"
}
],
"text": "To run the consumer\nRun the producer that you wrote in Step 4: Implement the Producer to inject simulated stock trade records into your stream.\n\nVerify that the access key and secret key pair retrieved earlier (when creating the IAM user) are saved in the file ~/.aws/credentials . Run the StockTradesProcessor class with the following arguments:\nStockTradesProcessor StockTradeStream us-west-2\nNote that if you created your stream in a Region other than us-west-2, you have to specify that Region here instead.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [],
"text": "To run the consumer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer-extension",
"text": "Step 6: (Optional) Extending the Consumer"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html#tutorial-stock-data-kplkcl-consumer-extension",
"main_header": "Step 6: (Optional) Extending the Consumer",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer-extension",
"text": "Step 6: (Optional) Extending the Consumer"
},
"links": [],
"text": "To extend the consumer\nAdd new instance variables:\n // Ticker symbol of the stock that had the largest quantity of shares sold private String largestSellOrderStock;\n // Quantity of shares for the largest sell order trade\n private long largestSellOrderQuantity;\n\nAdd the following code to addStockTrade:\n if (type == TradeType.SELL) { if (largestSellOrderStock == null || trade.getQuantity() > largestSellOrderQuantity) { largestSellOrderStock = trade.getTickerSymbol(); largestSellOrderQuantity = trade.getQuantity(); }\n }\n\nModify the toString method to print the additional information:\n public String toString() { return String.format( \"Most popular stock being bought: %s, %d buys.%n\" + \"Most popular stock being sold: %s, %d sells.%n\" + \"Largest sell order: %d shares of %s.\", getMostPopularStock(TradeType.BUY), getMostPopularStockCount(TradeType.BUY), getMostPopularStock(TradeType.SELL), getMostPopularStockCount(TradeType.SELL), largestSellOrderQuantity, largestSellOrderStock);\n }",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html#tutorial-stock-data-kplkcl-consumer-extension",
"main_header": "Step 6: (Optional) Extending the Consumer",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer-extension",
"text": "Step 6: (Optional) Extending the Consumer"
},
"links": [],
"text": "To extend the consumer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html#tutorial-stock-data-kplkcl-consumer-extension",
"main_header": "Step 6: (Optional) Extending the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-finish",
"text": "Step 7: Finishing Up"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html#tutorial-stock-data-kplkcl-finish",
"main_header": "Step 7: Finishing Up",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-finish",
"text": "Step 7: Finishing Up"
},
"links": [
{
"url": "https://console.aws.amazon.com/kinesis",
"title": "https://console.aws.amazon.com/kinesis"
},
{
"url": "https://console.aws.amazon.com/dynamodb/",
"title": "https://console.aws.amazon.com/dynamodb/"
}
],
"text": "To delete the stream and table\nShut down any producers and consumers that you may still have running.\nOpen the Kinesis console at https://console.aws.amazon.com/kinesis.\nChoose the stream that you created for this application (StockTradeStream).\n\nChoose Delete Stream.\nOpen the DynamoDB console at https://console.aws.amazon.com/dynamodb/.\nDelete the StockTradesProcessor table.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html#tutorial-stock-data-kplkcl-finish",
"main_header": "Step 7: Finishing Up",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-finish",
"text": "Step 7: Finishing Up"
},
"links": [],
"text": "To delete the stream and table",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html#tutorial-stock-data-kplkcl-finish",
"main_header": "Step 7: Finishing Up",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-finish",
"text": "Step 7: Finishing Up"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-summary",
"text": "Summary"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-connectors",
"title": "connectors"
}
],
"text": "Aggregate across all shards\n\nCurrently, you get stats resulting from aggregation of the data records received by a single worker from a single shard. (A shard cannot be processed by more than one worker in a single application at the same time.) Of course, when you scale and have more than one shard, you might want to aggregate across all shards. You can do this by having a pipeline architecture where the output of each worker is fed into another stream with a single shard, which is processed by a worker that aggregates the outputs of the first stage. Because the data from the first stage is limited (one sample per minute per shard), it would easily be handled by one shard.\n\nScale processing\n\nWhen the stream scales up to have many shards (because many producers are sending data), the way to scale the processing is to add more workers. You can run the workers in Amazon EC2 instances and use Auto Scaling groups.\n\nUse connectors to Amazon S3/DynamoDB/Amazon Redshift/Storm\n\nAs a stream is continuously processed, its output can be sent to other destinations. AWS provides connectors to integrate Kinesis Data Streams with other AWS services and third-party tools.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html#tutorial-stock-data-kplkcl-summary",
"main_header": "Summary",
"images": [],
"container_type": "div",
"children_tags": [
"dl"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-finish",
"text": "Step 7: Finishing Up"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-next-steps",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"title": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"title": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics"
}
],
"text": "For more information about using Kinesis Data Streams API operations, see Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java, Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java, and Creating and Managing Streams.\n\nFor more information about the Kinesis Client Library, see Developing KCL 1.x Consumers. For more information about how to optimize your application, see Advanced Topics.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html#tutorial-stock-data-kplkcl-next-steps",
"main_header": "Next Steps",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data",
"text": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html#tutorial-stock-data",
"main_header": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data",
"text": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
},
"links": [],
"text": "ImportantAfter you create two data streams and an application, your account incurs nominal charges for Kinesis Data Streams and Kinesis Data Analytics usage because they are not eligible for the AWS Free Tier. When you are finished with this application, delete your AWS resources to stop incurring charges.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html#tutorial-stock-data",
"main_header": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data",
"text": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html#tutorial-stock-data",
"main_header": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data",
"text": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
},
"links": [],
"text": "After you create two data streams and an application, your account incurs nominal charges for Kinesis Data Streams and Kinesis Data Analytics usage because they are not eligible for the AWS Free Tier. When you are finished with this application, delete your AWS resources to stop incurring charges.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html#tutorial-stock-data",
"main_header": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data",
"text": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
},
"links": [],
"text": "After you create two data streams and an application, your account incurs nominal charges for Kinesis Data Streams and Kinesis Data Analytics usage because they are not eligible for the AWS Free Tier. When you are finished with this application, delete your AWS resources to stop incurring charges.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html#tutorial-stock-data",
"main_header": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data",
"text": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
},
"h2": {
"urllink": "#setting-up-prerequisites",
"text": "Prerequisites for Completing the Exercises"
},
"links": [
{
"url": "http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html",
"title": "Java Development Kit"
},
{
"url": "http://www.eclipse.org/downloads/packages/release/neon/3",
"title": "Eclipse Java Neon"
},
{
"url": "https://www.jetbrains.com/idea/",
"title": "IntelliJ Idea"
},
{
"url": "https://git-scm.com/book/en/v2/Getting-Started-Installing-Git",
"title": "Git Client."
},
{
"url": "https://maven.apache.org/plugins/maven-compiler-plugin/",
"title": "Apache Maven Compiler Plugin"
}
],
"text": "Java Development Kit (JDK) version 8. Set the JAVA_HOME environment variable to point to your JDK install location.\n\nWe recommend that you use a development environment (such as Eclipse Java Neon or IntelliJ Idea) to develop and compile your application.\n\nGit Client. Install the Git client if you haven't already.\n\nApache Maven Compiler Plugin. Maven must be in your working path. To test your Apache Maven installation, enter the following:\n$ mvn -version\nNoteKinesis Data Analytics for Flink Applications only supports Java and Flink applications that are built with Apache Maven.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html#setting-up-prerequisites",
"main_header": "Prerequisites for Completing the Exercises",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up",
"main_header": "Step 1: Set Up an AWS Account and Create an Administrator User",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-signup",
"title": "Sign Up for AWS"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"title": "Create an IAM User"
}
],
"text": "Sign Up for AWS\n\nCreate an IAM User",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up",
"main_header": "Step 1: Set Up an AWS Account and Create an Administrator User",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-signup",
"text": "Sign Up for AWS"
},
"links": [
{
"url": "https://portal.aws.amazon.com/billing/signup",
"title": "https://portal.aws.amazon.com/billing/signup"
}
],
"text": "To create an AWS accountOpen https://portal.aws.amazon.com/billing/signup.\nFollow the online instructions.\nPart of the sign-up procedure involves receiving a phone call and entering a verification code on the phone keypad.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-signup",
"main_header": "Sign Up for AWS",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-signup",
"text": "Sign Up for AWS"
},
"links": [],
"text": "To create an AWS account",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-signup",
"main_header": "Sign Up for AWS",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [
{
"url": "https://console.aws.amazon.com/iam/",
"title": "https://console.aws.amazon.com/iam/"
}
],
"text": "To create a group for administrators\nSign in to the AWS Management Console and open the IAM console at https://console.aws.amazon.com/iam/.\n\nIn the navigation pane, choose Groups, and then choose Create New Group.\n\nFor Group Name, enter a name for your group, such as Administrators, and then choose Next Step.\n\nIn the list of policies, select the check box next to the AdministratorAccess policy. You can use the Filter menu and the Search box to filter the list of policies.\n\nChoose Next Step, and then choose Create Group.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "To create a group for administrators",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "To create an IAM user for yourself, add it to the Administrators group, and create a password\nIn the navigation pane, choose Users, and then choose Add user.\n\nIn the User name box, enter a user name.\n\nChoose both Programmatic access and AWS Management Console access.\n\nChoose Next: Permissions.\n\nSelect the check box next to the Administrators group. Then choose Next: Review.\n\nChoose Create user.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "To create an IAM user for yourself, add it to the Administrators group, and create a password",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/console_account-alias.html",
"title": "Your AWS Account ID and Its Alias"
}
],
"text": "To sign in as the new IAM user\nSign out of the AWS Management Console.\n\nUse the following URL format to sign in to the console:\nhttps://aws_account_number.signin.aws.amazon.com/console/\nThe aws_account_number is your AWS account ID without any hyphens. For example, if your AWS account ID is 1234-5678-9012, replace aws_account_number with 123456789012. For information about how to find your account number, see Your AWS Account ID and Its Alias in the IAM User Guide.\n\nEnter the IAM user name and password that you just created. When you're signed in, the navigation bar displays your_user_name @ your_aws_account_id.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "To sign in as the new IAM user",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "NoteIf you don't want the URL for your sign-in page to contain your AWS account ID, you can create an account alias.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "If you don't want the URL for your sign-in page to contain your AWS account ID, you can create an account alias.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "If you don't want the URL for your sign-in page to contain your AWS account ID, you can create an account alias.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [
{
"url": "https://console.aws.amazon.com/iam/",
"title": "https://console.aws.amazon.com/iam/"
}
],
"text": "To create or remove an account aliasOpen the IAM console at https://console.aws.amazon.com/iam/.\nOn the navigation pane, choose Dashboard.\n\nFind the IAM users sign-in link.\n\nTo create the alias, choose Customize. Enter the name you want to use for your alias, and then choose Yes, Create.\n\nTo remove the alias, choose Customize, and then choose Yes, Delete. The sign-in URL reverts to using your AWS account ID.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "To create or remove an account alias",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [
{
"url": "https://aws.amazon.com/iam/",
"title": "AWS Identity and Access Management (IAM)"
},
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/getting-started.html",
"title": "Getting started"
},
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/",
"title": "IAM User Guide"
}
],
"text": "AWS Identity and Access Management (IAM)\n\nGetting started\n\nIAM User Guide",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setup-awscli",
"main_header": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"links": [],
"text": "NoteThe getting started exercises in this guide assume that you are using administrator credentials (adminuser) in your account to perform the operations.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setup-awscli",
"main_header": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setup-awscli",
"main_header": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"links": [],
"text": "The getting started exercises in this guide assume that you are using administrator credentials (adminuser) in your account to perform the operations.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setup-awscli",
"main_header": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"links": [],
"text": "The getting started exercises in this guide assume that you are using administrator credentials (adminuser) in your account to perform the operations.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setup-awscli",
"main_header": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"links": [
{
"url": "https://docs.aws.amazon.com/cli/latest/userguide/installing.html",
"title": "Installing the AWS Command Line Interface"
}
],
"text": "NoteIf you already have the AWS CLI installed, you might need to upgrade to get the latest functionality. For more information, see  Installing the AWS Command Line Interface in the AWS Command Line Interface User Guide. To check the version of the AWS CLI, run the following command:aws --versionThe exercises in this tutorial require the following AWS CLI version or later:aws-cli/1.16.63",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setup-awscli",
"main_header": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setup-awscli",
"main_header": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"links": [
{
"url": "https://docs.aws.amazon.com/cli/latest/userguide/installing.html",
"title": "Installing the AWS Command Line Interface"
}
],
"text": "If you already have the AWS CLI installed, you might need to upgrade to get the latest functionality. For more information, see  Installing the AWS Command Line Interface in the AWS Command Line Interface User Guide. To check the version of the AWS CLI, run the following command:aws --versionThe exercises in this tutorial require the following AWS CLI version or later:aws-cli/1.16.63",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setup-awscli",
"main_header": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"images": [],
"container_type": "div",
"children_tags": [
"pre",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"links": [
{
"url": "https://docs.aws.amazon.com/cli/latest/userguide/installing.html",
"title": "Installing the AWS Command Line Interface"
}
],
"text": "If you already have the AWS CLI installed, you might need to upgrade to get the latest functionality. For more information, see  Installing the AWS Command Line Interface in the AWS Command Line Interface User Guide. To check the version of the AWS CLI, run the following command:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setup-awscli",
"main_header": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"links": [],
"text": "The exercises in this tutorial require the following AWS CLI version or later:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setup-awscli",
"main_header": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"links": [
{
"url": "https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-set-up.html",
"title": "Installing the AWS Command Line Interface"
},
{
"url": "https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html",
"title": "Configuring the AWS CLI"
},
{
"url": "https://docs.aws.amazon.com/cli/latest/userguide/cli-multiple-profiles.html",
"title": "Named Profiles"
},
{
"url": "https://docs.aws.amazon.com/general/latest/gr/rande.html",
"title": "AWS Regions and Endpoints"
}
],
"text": "To set up the AWS CLI\nDownload and configure the AWS CLI. For instructions, see the following topics in the AWS Command Line Interface User Guide: Installing the AWS Command Line Interface\n\nConfiguring the AWS CLI Add a named profile for the administrator user in the AWS CLI config file. You use this profile when executing the AWS CLI commands. For more information about named profiles, see Named Profiles in the AWS Command Line Interface User Guide.\n[profile adminuser]\naws_access_key_id = adminuser access key ID\naws_secret_access_key = adminuser secret access key\nregion = aws-region\nFor a list of available AWS Regions, see AWS Regions and Endpoints in the Amazon Web Services General Reference.\n\nVerify the setup by entering the following help command at the command prompt: \naws help",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setup-awscli",
"main_header": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"links": [],
"text": "To set up the AWS CLI",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setup-awscli",
"main_header": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise",
"main_header": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-1",
"title": "Create Two Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-2",
"title": "Write Sample Records to the Input Stream"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5",
"title": "Download and Examine the Apache Flink Streaming Java Code"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5.5",
"title": "Compile the Application Code"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-6",
"title": "Upload the Apache Flink Streaming Java Code"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7",
"title": "Create and Run the Kinesis Data Analytics Application"
}
],
"text": "This section contains the following steps:Create Two Amazon Kinesis Data StreamsWrite Sample Records to the Input StreamDownload and Examine the Apache Flink Streaming Java CodeCompile the Application CodeUpload the Apache Flink Streaming Java CodeCreate and Run the Kinesis Data Analytics Application",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise",
"main_header": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"links": [],
"text": "This section contains the following steps:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise",
"main_header": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-1",
"text": "Create Two Amazon Kinesis Data Streams"
},
"links": [],
"text": "To create the data streams (AWS CLI)\nTo create the first stream (ExampleInputStream), use the following Amazon Kinesis create-stream AWS CLI command.\n$ aws kinesis create-stream \\\n--stream-name ExampleInputStream \\\n--shard-count 1 \\\n--region us-west-2 \\\n--profile adminuser\n\nTo create the second stream that the application uses to write output, run the same command, changing the stream name to ExampleOutputStream.\n$ aws kinesis create-stream \\\n--stream-name ExampleOutputStream \\\n--shard-count 1 \\\n--region us-west-2 \\\n--profile adminuser",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-1",
"main_header": "Create Two Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-1",
"text": "Create Two Amazon Kinesis Data Streams"
},
"links": [],
"text": "To create the data streams (AWS CLI)",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-1",
"main_header": "Create Two Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-2",
"text": "Write Sample Records to the Input Stream"
},
"links": [
{
"url": "https://aws.amazon.com/developers/getting-started/python/",
"title": "AWS SDK for Python (Boto)"
}
],
"text": "NoteThis section requires the AWS SDK for Python (Boto).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-2",
"main_header": "Write Sample Records to the Input Stream",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-2",
"text": "Write Sample Records to the Input Stream"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-2",
"main_header": "Write Sample Records to the Input Stream",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-2",
"text": "Write Sample Records to the Input Stream"
},
"links": [
{
"url": "https://aws.amazon.com/developers/getting-started/python/",
"title": "AWS SDK for Python (Boto)"
}
],
"text": "This section requires the AWS SDK for Python (Boto).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-2",
"main_header": "Write Sample Records to the Input Stream",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-2",
"text": "Write Sample Records to the Input Stream"
},
"links": [
{
"url": "https://aws.amazon.com/developers/getting-started/python/",
"title": "AWS SDK for Python (Boto)"
}
],
"text": "This section requires the AWS SDK for Python (Boto).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-2",
"main_header": "Write Sample Records to the Input Stream",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-2",
"text": "Write Sample Records to the Input Stream"
},
"links": [],
"text": "Create a file named stock.py with the following contents: import datetime\nimport json\nimport random\nimport boto3\n\nSTREAM_NAME = \"ExampleInputStream\" def get_data(): return { 'EVENT_TIME': datetime.datetime.now().isoformat(), 'TICKER': random.choice(['AAPL', 'AMZN', 'MSFT', 'INTC', 'TBV']), 'PRICE': round(random.random() * 100, 2)} def generate(stream_name, kinesis_client): while True: data = get_data() print(data) kinesis_client.put_record( StreamName=stream_name, Data=json.dumps(data), PartitionKey=\"partitionkey\") if __name__ == '__main__': generate(STREAM_NAME, boto3.client('kinesis')) Later in the tutorial, you run the stock.py script to send data to the application. \n$ python stock.py",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-2",
"main_header": "Write Sample Records to the Input Stream",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5",
"text": "Download and Examine the Apache Flink Streaming Java Code"
},
"links": [],
"text": "Clone the remote repository with the following command:\ngit clone https://github.com/aws-samples/amazon-kinesis-data-analytics-java-examples.git\n\nNavigate to the GettingStarted directory.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5",
"main_header": "Download and Examine the Apache Flink Streaming Java Code",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5",
"text": "Download and Examine the Apache Flink Streaming Java Code"
},
"links": [],
"text": "The application uses a Kinesis source to read from the source stream. The following snippet creates the Kinesis sink:\nreturn env.addSource(new FlinkKinesisConsumer<>(inputStreamName, new SimpleStringSchema(), inputProperties));",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5",
"main_header": "Download and Examine the Apache Flink Streaming Java Code",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5.5",
"text": "Compile the Application Code"
},
"links": [
{
"url": "https://maven.apache.org/guides/introduction/introduction-to-the-pom.html",
"title": "Project Object Model (pom.xml)"
}
],
"text": "A Project Object Model (pom.xml) file. This file contains information about the application's configuration and dependencies, including the Kinesis Data Analytics for Flink Applications libraries.\n\nA main method that contains the application's logic.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5.5",
"main_header": "Compile the Application Code",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5.5",
"text": "Compile the Application Code"
},
"links": [
{
"url": "https://ci.apache.org/projects/flink/flink-docs-release-1.6/dev/connectors/kinesis.html",
"title": "Apache Flink documentation"
}
],
"text": "NoteIn order to use the Kinesis connector for the following application, you need to download the source code for the connector and build it as described in the Apache Flink documentation.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5.5",
"main_header": "Compile the Application Code",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5.5",
"text": "Compile the Application Code"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5.5",
"main_header": "Compile the Application Code",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5.5",
"text": "Compile the Application Code"
},
"links": [
{
"url": "https://ci.apache.org/projects/flink/flink-docs-release-1.6/dev/connectors/kinesis.html",
"title": "Apache Flink documentation"
}
],
"text": "In order to use the Kinesis connector for the following application, you need to download the source code for the connector and build it as described in the Apache Flink documentation.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5.5",
"main_header": "Compile the Application Code",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5.5",
"text": "Compile the Application Code"
},
"links": [
{
"url": "https://ci.apache.org/projects/flink/flink-docs-release-1.6/dev/connectors/kinesis.html",
"title": "Apache Flink documentation"
}
],
"text": "In order to use the Kinesis connector for the following application, you need to download the source code for the connector and build it as described in the Apache Flink documentation.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5.5",
"main_header": "Compile the Application Code",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5.5",
"text": "Compile the Application Code"
},
"links": [
{
"url": "https://help.eclipse.org/neon/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2FgettingStarted%2Fqs-3.htm",
"title": "Creating your first Java project (Eclipse Java Neon)"
},
{
"url": "https://www.jetbrains.com/help/idea/creating-and-running-your-first-java-application.html",
"title": "Creating, Running and Packaging Your First Java Application (IntelliJ Idea)"
}
],
"text": "To create and compile the application code\nCreate a Java/Maven application in your development environment. For information about creating an application, see the documentation for your development environment: Creating your first Java project (Eclipse Java Neon) Creating, Running and Packaging Your First Java Application (IntelliJ Idea) Use the following code for a file named StreamingJob.java. package com.amazonaws.services.kinesisanalytics;\n\nimport com.amazonaws.services.kinesisanalytics.runtime.KinesisAnalyticsRuntime;\nimport org.apache.flink.api.common.serialization.SimpleStringSchema;\nimport org.apache.flink.streaming.api.datastream.DataStream;\nimport org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\nimport org.apache.flink.streaming.connectors.kinesis.FlinkKinesisConsumer;\nimport org.apache.flink.streaming.connectors.kinesis.FlinkKinesisProducer;\nimport org.apache.flink.streaming.connectors.kinesis.config.ConsumerConfigConstants;\n\nimport java.io.IOException;\nimport java.util.Map;\nimport java.util.Properties; public class StreamingJob { private static final String region = \"us-east-1\"; private static final String inputStreamName = \"ExampleInputStream\"; private static final String outputStreamName = \"ExampleOutputStream\"; private static DataStream<String> createSourceFromStaticConfig(StreamExecutionEnvironment env) { Properties inputProperties = new Properties(); inputProperties.setProperty(ConsumerConfigConstants.AWS_REGION, region); inputProperties.setProperty(ConsumerConfigConstants.STREAM_INITIAL_POSITION, \"LATEST\"); return env.addSource(new FlinkKinesisConsumer<>(inputStreamName, new SimpleStringSchema(), inputProperties)); } private static DataStream<String> createSourceFromApplicationProperties(StreamExecutionEnvironment env) throws IOException { Map<String, Properties> applicationProperties = KinesisAnalyticsRuntime.getApplicationProperties(); return env.addSource(new FlinkKinesisConsumer<>(inputStreamName, new SimpleStringSchema(), applicationProperties.get(\"ConsumerConfigProperties\"))); } private static FlinkKinesisProducer<String> createSinkFromStaticConfig() { Properties outputProperties = new Properties(); outputProperties.setProperty(ConsumerConfigConstants.AWS_REGION, region); outputProperties.setProperty(\"AggregationEnabled\", \"false\"); FlinkKinesisProducer<String> sink = new FlinkKinesisProducer<>(new SimpleStringSchema(), outputProperties); sink.setDefaultStream(outputStreamName); sink.setDefaultPartition(\"0\"); return sink; } private static FlinkKinesisProducer<String> createSinkFromApplicationProperties() throws IOException { Map<String, Properties> applicationProperties = KinesisAnalyticsRuntime.getApplicationProperties(); FlinkKinesisProducer<String> sink = new FlinkKinesisProducer<>(new SimpleStringSchema(), applicationProperties.get(\"ProducerConfigProperties\")); sink.setDefaultStream(outputStreamName); sink.setDefaultPartition(\"0\"); return sink; } public static void main(String[] args) throws Exception { // set up the streaming execution environment final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment(); /* if you would like to use runtime configuration properties, uncomment the lines below * DataStream<String> input = createSourceFromApplicationProperties(env); */ DataStream<String> input = createSourceFromStaticConfig(env); /* if you would like to use runtime configuration properties, uncomment the lines below * input.addSink(createSinkFromApplicationProperties()) */ input.addSink(createSinkFromStaticConfig()); env.execute(\"Flink Streaming Java API Skeleton\"); }\n} Note the following about the preceding code example: This file contains the main method that defines the application's functionality.\n\nYour application creates source and sink connectors to access external resources using a StreamExecutionEnvironment object. The application creates source and sink connectors using static properties. To use dynamic application properties, use the createSourceFromApplicationProperties and createSinkFromApplicationProperties methods to create the connectors. These methods read the application's properties to configure the connectors. To use your application code, you compile and package it into a JAR file. You can compile and package your code in one of two ways: Use the command line Maven tool. Create your JAR file by running the following command in the directory that contains the pom.xml file:\nmvn package\n\nUse your development environment. See your development environment documentation for details.\n\nYou can either upload your package as a JAR file, or you can compress your package and upload it as a ZIP file. If you create your application using the AWS CLI, you specify your code content type (JAR or ZIP).\n\nIf there are errors while compiling, verify that your JAVA_HOME environment variable is correctly set.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5.5",
"main_header": "Compile the Application Code",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5.5",
"text": "Compile the Application Code"
},
"links": [],
"text": "To create and compile the application code",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5.5",
"main_header": "Compile the Application Code",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-6",
"text": "Upload the Apache Flink Streaming Java Code"
},
"links": [
{
"url": "https://console.aws.amazon.com/s3/",
"title": "https://console.aws.amazon.com/s3/"
}
],
"text": "To upload the application codeOpen the Amazon S3 console at https://console.aws.amazon.com/s3/.\nChoose Create bucket.\n\nEnter ka-app-code-<username> in the Bucket name field. Add a suffix to the bucket name, such as your user name, to make it globally unique. Choose Next.\n\nIn the Configure options step, keep the settings as they are, and choose Next.\n\nIn the Set permissions step, keep the settings as they are, and choose Next.\n\nChoose Create bucket.\n\nIn the Amazon S3 console, choose the ka-app-code-<username> bucket, and choose Upload.\n\nIn the Select files step, choose Add files. Navigate to the java-getting-started-1.0.jar file that you created in the previous step. Choose Next.\n\nIn the Set permissions step, keep the settings as they are. Choose Next.\n\nIn the Set properties step, keep the settings as they are. Choose Upload.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-6",
"main_header": "Upload the Apache Flink Streaming Java Code",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-6",
"text": "Upload the Apache Flink Streaming Java Code"
},
"links": [],
"text": "To upload the application code",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-6",
"main_header": "Upload the Apache Flink Streaming Java Code",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"links": [],
"text": "NoteWhen you create the application using the console, your AWS Identity and Access Management (IAM) and Amazon CloudWatch Logs resources are created for you. When you create the application using the AWS CLI, you create these resources separately.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7",
"main_header": "Create and Run the Kinesis Data Analytics Application",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7",
"main_header": "Create and Run the Kinesis Data Analytics Application",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"links": [],
"text": "When you create the application using the console, your AWS Identity and Access Management (IAM) and Amazon CloudWatch Logs resources are created for you. When you create the application using the AWS CLI, you create these resources separately.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7",
"main_header": "Create and Run the Kinesis Data Analytics Application",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"links": [],
"text": "When you create the application using the console, your AWS Identity and Access Management (IAM) and Amazon CloudWatch Logs resources are created for you. When you create the application using the AWS CLI, you create these resources separately.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7",
"main_header": "Create and Run the Kinesis Data Analytics Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console",
"title": "Create and Run the Application (Console)"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli",
"title": "Create and Run the Application (AWS CLI)"
}
],
"text": "TopicsCreate and Run the Application (Console)Create and Run the Application (AWS CLI)",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7",
"main_header": "Create and Run the Kinesis Data Analytics Application",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7",
"main_header": "Create and Run the Kinesis Data Analytics Application",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-create",
"text": "Create the Application"
},
"links": [
{
"url": "https://console.aws.amazon.com/kinesis",
"title": "https://console.aws.amazon.com/kinesis"
}
],
"text": "Open the Kinesis console at https://console.aws.amazon.com/kinesis.\nOn the Amazon Kinesis dashboard, choose Create analytics application.\n\nOn the Kinesis Analytics - Create application page, provide the application details as follows: For Application name, enter MyApplication.\n\nFor Description, enter My java test app.\n\nFor Runtime, choose Apache Flink 1.6. For Access permissions, choose Create / update IAM role kinesis-analytics-MyApplication-us-west-2.\n\nChoose Create application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-create",
"main_header": "Create the Application",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-create",
"text": "Create the Application"
},
"links": [],
"text": "NoteWhen you create a Kinesis Data Analytics for Flink application using the console, you have the option of having an IAM role and policy created for your application. Your application uses this role and policy to access its dependent resources. These IAM resources are named using your application name and Region as follows:\n\nPolicy: kinesis-analytics-service-MyApplication-us-west-2\n\nRole: kinesis-analytics-MyApplication-us-west-2",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-create",
"main_header": "Create the Application",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-create",
"text": "Create the Application"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-create",
"main_header": "Create the Application",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-create",
"text": "Create the Application"
},
"links": [],
"text": "When you create a Kinesis Data Analytics for Flink application using the console, you have the option of having an IAM role and policy created for your application. Your application uses this role and policy to access its dependent resources. These IAM resources are named using your application name and Region as follows:\n\nPolicy: kinesis-analytics-service-MyApplication-us-west-2\n\nRole: kinesis-analytics-MyApplication-us-west-2",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-create",
"main_header": "Create the Application",
"images": [],
"container_type": "div",
"children_tags": [
"div",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-create",
"text": "Create the Application"
},
"links": [],
"text": "When you create a Kinesis Data Analytics for Flink application using the console, you have the option of having an IAM role and policy created for your application. Your application uses this role and policy to access its dependent resources. These IAM resources are named using your application name and Region as follows:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-create",
"main_header": "Create the Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-create",
"text": "Create the Application"
},
"links": [],
"text": "Policy: kinesis-analytics-service-MyApplication-us-west-2\n\nRole: kinesis-analytics-MyApplication-us-west-2",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-create",
"main_header": "Create the Application",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-iam",
"text": "Edit the IAM Policy"
},
"links": [
{
"url": "https://console.aws.amazon.com/iam/",
"title": "https://console.aws.amazon.com/iam/"
}
],
"text": "Open the IAM console at https://console.aws.amazon.com/iam/.\nChoose Policies. Choose the kinesis-analytics-service-MyApplication-us-west-2 policy that the console created for you in the previous section. On the Summary page, choose Edit policy. Choose the JSON tab.\n\nAdd the highlighted section of the following policy example to the policy. Replace the sample account IDs (012345678901) with your account ID.\n{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"ReadCode\", \"Effect\": \"Allow\", \"Action\": [ \"s3:GetObject\", \"s3:GetObjectVersion\" ], \"Resource\": [ \"arn:aws:s3:::ka-app-code-username/java-getting-started-1.0.jar\" ] }, { \"Sid\": \"ListCloudwatchLogGroups\", \"Effect\": \"Allow\", \"Action\": [ \"logs:DescribeLogGroups\" ], \"Resource\": [ \"arn:aws:logs:us-west-2:012345678901:log-group:*\" ] }, { \"Sid\": \"ListCloudwatchLogStreams\", \"Effect\": \"Allow\", \"Action\": [ \"logs:DescribeLogStreams\" ], \"Resource\": [ \"arn:aws:logs:us-west-2:012345678901:log-group:/aws/kinesis-analytics/MyApplication:log-stream:*\" ] }, { \"Sid\": \"PutCloudwatchLogs\", \"Effect\": \"Allow\", \"Action\": [ \"logs:PutLogEvents\" ], \"Resource\": [ \"arn:aws:logs:us-west-2:012345678901:log-group:/aws/kinesis-analytics/MyApplication:log-stream:kinesis-analytics-log-stream\" ] }, { \"Sid\": \"ReadInputStream\", \"Effect\": \"Allow\", \"Action\": \"kinesis:*\", \"Resource\": \"arn:aws:kinesis:us-west-2:012345678901:stream/ExampleInputStream\" }, { \"Sid\": \"WriteOutputStream\", \"Effect\": \"Allow\", \"Action\": \"kinesis:*\", \"Resource\": \"arn:aws:kinesis:us-west-2:012345678901:stream/ExampleOutputStream\" } ]\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-iam",
"main_header": "Edit the IAM Policy",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-configure",
"text": "Configure the Application"
},
"links": [],
"text": "On the MyApplication page, choose Configure.\n\nOn the Configure application page, provide the Code location: For Amazon S3 bucket, enter ka-app-code-<username>.\n\nFor Path to Amazon S3 object, enter java-getting-started-1.0.jar. Under Access to application resources, for Access permissions, choose Create / update IAM role kinesis-analytics-MyApplication-us-west-2.\n\nUnder Properties, for Group ID, enter ProducerConfigProperties.\n\nEnter the following application properties and values: Key\nValue flink.inputstream.initpos\nLATEST aws:region\nus-west-2 AggregationEnabled\nfalse Under Monitoring, ensure that the Monitoring metrics level is set to Application.\n\nFor CloudWatch logging, select the Enable check box.\n\nChoose Update.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-configure",
"main_header": "Configure the Application",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-configure",
"text": "Configure the Application"
},
"links": [],
"text": "NoteWhen you choose to enable CloudWatch logging, Kinesis Data Analytics creates a log group and log stream for you. The names of these resources are as follows: Log group: /aws/kinesis-analytics/MyApplication\n\nLog stream: kinesis-analytics-log-stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-configure",
"main_header": "Configure the Application",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-configure",
"text": "Configure the Application"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-configure",
"main_header": "Configure the Application",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-configure",
"text": "Configure the Application"
},
"links": [],
"text": "When you choose to enable CloudWatch logging, Kinesis Data Analytics creates a log group and log stream for you. The names of these resources are as follows: Log group: /aws/kinesis-analytics/MyApplication\n\nLog stream: kinesis-analytics-log-stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-configure",
"main_header": "Configure the Application",
"images": [],
"container_type": "div",
"children_tags": [
"div",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-configure",
"text": "Configure the Application"
},
"links": [],
"text": "When you choose to enable CloudWatch logging, Kinesis Data Analytics creates a log group and log stream for you. The names of these resources are as follows:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-configure",
"main_header": "Configure the Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-configure",
"text": "Configure the Application"
},
"links": [],
"text": "Log group: /aws/kinesis-analytics/MyApplication\n\nLog stream: kinesis-analytics-log-stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-configure",
"main_header": "Configure the Application",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-run",
"text": "Run the Application"
},
"links": [],
"text": "On the MyApplication page, choose Run. Confirm the action.\n\nWhen the application is running, refresh the page. The console shows the Application graph.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-run",
"main_header": "Run the Application",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-policy",
"text": "Create a Permissions Policy"
},
"links": [],
"text": "NoteTo access other AWS services, you can use the AWS SDK for Java. Kinesis Data Analytics automatically sets the credentials required by the SDK to those of the service execution IAM role that is associated with your application. No additional steps are needed.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-policy",
"main_header": "Create a Permissions Policy",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-policy",
"text": "Create a Permissions Policy"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-policy",
"main_header": "Create a Permissions Policy",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-policy",
"text": "Create a Permissions Policy"
},
"links": [],
"text": "To access other AWS services, you can use the AWS SDK for Java. Kinesis Data Analytics automatically sets the credentials required by the SDK to those of the service execution IAM role that is associated with your application. No additional steps are needed.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-policy",
"main_header": "Create a Permissions Policy",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-policy",
"text": "Create a Permissions Policy"
},
"links": [],
"text": "To access other AWS services, you can use the AWS SDK for Java. Kinesis Data Analytics automatically sets the credentials required by the SDK to those of the service execution IAM role that is associated with your application. No additional steps are needed.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-policy",
"main_header": "Create a Permissions Policy",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-role",
"text": "Create an IAM Role"
},
"links": [
{
"url": "https://console.aws.amazon.com/iam/",
"title": "https://console.aws.amazon.com/iam/"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-policy",
"title": "Create a Permissions Policy"
}
],
"text": "To create an IAM roleOpen the IAM console at https://console.aws.amazon.com/iam/.\nIn the navigation pane, choose Roles, Create Role.\n\nUnder Select type of trusted identity, choose AWS Service. Under Choose the service that will use this role, choose Kinesis. Under Select your use case, choose Kinesis Analytics.\nChoose Next: Permissions.\n\nOn the Attach permissions policies page, choose Next: Review. You attach permissions policies after you create the role.\n\nOn the Create role page, enter KA-stream-rw-role for the Role name. Choose Create role.\nNow you have created a new IAM role called KA-stream-rw-role. Next, you update the trust and permissions policies for the role.\n\nAttach the permissions policy to the role.\nNoteFor this exercise, Kinesis Data Analytics assumes this role for both reading data from a Kinesis data stream (source) and writing output to another Kinesis data stream. So you attach the policy that you created in the previous step, Create a Permissions Policy.\n\nOn the Summary page, choose the Permissions tab.\n\nChoose Attach Policies.\n\nIn the search box, enter KAReadSourceStreamWriteSinkStream (the policy that you created in the previous section).\n\nChoose the KAReadInputStreamWriteOutputStream policy, and choose Attach policy.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-role",
"main_header": "Create an IAM Role",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-role",
"text": "Create an IAM Role"
},
"links": [],
"text": "To create an IAM role",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-role",
"main_header": "Create an IAM Role",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-create",
"text": "Create the Kinesis Data Analytics Application"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesisanalytics/latest/apiv2/API_CreateApplication.html",
"title": "CreateApplication"
}
],
"text": "Save the following JSON code to a file named create_request.json. Replace the sample role ARN with the ARN for the role that you created previously. Replace the bucket ARN suffix (username) with the suffix that you chose in the previous section. Replace the sample account ID (012345678901) in the service execution role with your account ID.\n{ \"ApplicationName\": \"test\", \"ApplicationDescription\": \"my java test app\", \"RuntimeEnvironment\": \"FLINK-1_6\", \"ServiceExecutionRole\": \"arn:aws:iam::012345678901:role/KA-stream-rw-role\", \"ApplicationConfiguration\": { \"ApplicationCodeConfiguration\": { \"CodeContent\": { \"S3ContentLocation\": { \"BucketARN\": \"arn:aws:s3:::ka-app-code-username\", \"FileKey\": \"java-getting-started-1.0.jar\" } }, \"CodeContentType\": \"ZIPFILE\" }, \"EnvironmentProperties\":  { \"PropertyGroups\": [ { \"PropertyGroupId\": \"ProducerConfigProperties\", \"PropertyMap\" : { \"flink.stream.initpos\" : \"LATEST\", \"aws.region\" : \"us-west-2\", \"AggregationEnabled\" : \"false\" } }, { \"PropertyGroupId\": \"ConsumerConfigProperties\", \"PropertyMap\" : { \"aws.region\" : \"us-west-2\" } } ] } }\n} Execute the CreateApplication action with the preceding request to create the application: \naws kinesisanalyticsv2 create-application --cli-input-json file://create_request.json",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-create",
"main_header": "Create the Kinesis Data Analytics Application",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-start",
"text": "Start the Application"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesisanalytics/latest/apiv2/API_StartApplication.html",
"title": "StartApplication"
}
],
"text": "To start the application\nSave the following JSON code to a file named start_request.json.\n{ \"ApplicationName\": \"test\", \"RunConfiguration\": { \"ApplicationRestoreConfiguration\": { \"ApplicationRestoreType\": \"RESTORE_FROM_LATEST_SNAPSHOT\" } }\n} Execute the StartApplication action with the preceding request to start the application:\naws kinesisanalyticsv2 start-application --cli-input-json file://start_request.json",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-start",
"main_header": "Start the Application",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-start",
"text": "Start the Application"
},
"links": [],
"text": "To start the application",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-start",
"main_header": "Start the Application",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-stop",
"text": "Stop the Application"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesisanalytics/latest/apiv2/API_StopApplication.html",
"title": "StopApplication"
}
],
"text": "To stop the application\nSave the following JSON code to a file named stop_request.json.\n{\"ApplicationName\": \"test\"\n} Execute the StopApplication action with the following request to stop the application:\naws kinesisanalyticsv2 stop-application --cli-input-json file://stop_request.json",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-stop",
"main_header": "Stop the Application",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-stop",
"text": "Stop the Application"
},
"links": [],
"text": "To stop the application",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-stop",
"main_header": "Stop the Application",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-lambda",
"text": "Tutorial: Using AWS Lambda with Amazon Kinesis Data Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-lambda.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-lambda.html#tutorial-stock-data-lambda",
"main_header": "Tutorial: Using AWS Lambda with Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-lambda",
"text": "Tutorial: Using AWS Lambda with Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/lambda/latest/dg/getting-started.html",
"title": "Getting Started with AWS Lambda"
}
],
"text": "NoteThis tutorial assumes that you have some knowledge of basic Lambda operations and the Lambda console. If you haven't already, follow the instructions in Getting Started with AWS Lambda to create your first Lambda function.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-lambda.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-lambda.html#tutorial-stock-data-lambda",
"main_header": "Tutorial: Using AWS Lambda with Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-lambda",
"text": "Tutorial: Using AWS Lambda with Amazon Kinesis Data Streams"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-lambda.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-lambda.html#tutorial-stock-data-lambda",
"main_header": "Tutorial: Using AWS Lambda with Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-lambda",
"text": "Tutorial: Using AWS Lambda with Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/lambda/latest/dg/getting-started.html",
"title": "Getting Started with AWS Lambda"
}
],
"text": "This tutorial assumes that you have some knowledge of basic Lambda operations and the Lambda console. If you haven't already, follow the instructions in Getting Started with AWS Lambda to create your first Lambda function.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-lambda.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-lambda.html#tutorial-stock-data-lambda",
"main_header": "Tutorial: Using AWS Lambda with Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-lambda",
"text": "Tutorial: Using AWS Lambda with Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/lambda/latest/dg/getting-started.html",
"title": "Getting Started with AWS Lambda"
}
],
"text": "This tutorial assumes that you have some knowledge of basic Lambda operations and the Lambda console. If you haven't already, follow the instructions in Getting Started with AWS Lambda to create your first Lambda function.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-lambda.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-lambda.html#tutorial-stock-data-lambda",
"main_header": "Tutorial: Using AWS Lambda with Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#examples-streaming-solution",
"text": "AWS Streaming Data Solution for Amazon Kinesis"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/examples-streaming-solution.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/examples-streaming-solution.html#examples-streaming-solution",
"main_header": "AWS Streaming Data Solution for Amazon Kinesis",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#examples-streaming-solution",
"text": "AWS Streaming Data Solution for Amazon Kinesis"
},
"links": [],
"text": "A AWS CloudFormation package to deploy the complete example.A CloudWatch dashboard for displaying application metrics.CloudWatch alarms on the most relevant application metrics.All necessary IAM roles and policies.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/examples-streaming-solution.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/examples-streaming-solution.html#examples-streaming-solution",
"main_header": "AWS Streaming Data Solution for Amazon Kinesis",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#working-with-streams",
"text": "Creating and Managing Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html#working-with-streams",
"main_header": "Creating and Managing Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#how-do-i-size-a-stream",
"main_header": "Choosing the Data Stream Capacity Mode",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#whatiscapacitymode",
"title": "What is a Data Stream Capacity Mode?"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#ondemandmode",
"title": "On-demand Mode"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#provisionedmode",
"title": "Provisioned Mode"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#switchingmodes",
"title": "Switching Between Capacity Modes"
}
],
"text": "TopicsWhat is a Data Stream Capacity Mode?On-demand ModeProvisioned ModeSwitching Between Capacity Modes",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#how-do-i-size-a-stream",
"main_header": "Choosing the Data Stream Capacity Mode",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#how-do-i-size-a-stream",
"main_header": "Choosing the Data Stream Capacity Mode",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#whatiscapacitymode",
"text": "What is a Data Stream Capacity Mode?"
},
"links": [],
"text": "On-demand - data streams with an on-demand mode require no capacity planning and automatically scale to handle gigabytes of write and read throughput per minute. With the on-demand mode, Kinesis Data Streams automatically manages the shards in order to provide the necessary throughput. Provisioned - for the data streams with a provisioned mode, you must specify the number of shards for the data stream. The total capacity of a data stream is the sum of the capacities of its shards. You can increase or decrease the number of shards in a data stream as needed.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#whatiscapacitymode",
"main_header": "What is a Data Stream Capacity Mode?",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#provisionedmode",
"text": "Provisioned Mode"
},
"links": [],
"text": "With the provisioned mode, you must specify the number of shards for the data stream. To determine the size of a data stream with the provisioned mode, you need the following input values:\n\nThe average size of the data record written to the stream in kilobytes (KB), rounded up to the nearest 1 KB (average_data_size_in_KB).\n\nThe number of data records written to and read from the stream per second (records_per_second).\n\nThe number of consumers, which are Kinesis Data Streams applications that consume data concurrently and independently from the stream (number_of_consumers).\n\nThe incoming write bandwidth in KB (incoming_write_bandwidth_in_KB), which is equal to the average_data_size_in_KB multiplied by the records_per_second.\n\nThe outgoing read bandwidth in KB (outgoing_read_bandwidth_in_KB), which is equal to the incoming_write_bandwidth_in_KB multiplied by the number_of_consumers.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#provisionedmode",
"main_header": "Provisioned Mode",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#provisionedmode",
"text": "Provisioned Mode"
},
"links": [],
"text": "With the provisioned mode, you must specify the number of shards for the data stream. To determine the size of a data stream with the provisioned mode, you need the following input values:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#provisionedmode",
"main_header": "Provisioned Mode",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-create-a-stream",
"text": "Creating a Stream via the AWS Management Console"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html#how-do-i-create-a-stream",
"main_header": "Creating a Stream via the AWS Management Console",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-create-a-stream",
"text": "Creating a Stream via the AWS Management Console"
},
"links": [
{
"url": "https://console.aws.amazon.com/kinesis",
"title": "https://console.aws.amazon.com/kinesis"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"title": "Choosing the Data Stream Capacity Mode"
}
],
"text": "To create a data stream using the consoleSign in to the AWS Management Console and open the Kinesis console at https://console.aws.amazon.com/kinesis.\nIn the navigation bar, expand the Region selector and choose a Region.\n\nChoose Create data stream.\n\nOn the Create Kinesis stream page, enter a name for your data stream and then choose either the On-demand or Provisioned capacity mode. The On-demand mode is selected by default. For more information, see Choosing the Data Stream Capacity Mode.\nWith the On-demand mode, you can then choose Create Kinesis stream to create your data stream. With the Provisioned mode, you must then specify the number of shards you need, and then choose Create Kinesis stream.\nOn the Kinesis streams page, your stream's Status is Creating while the stream is being created. When the stream is ready to use, the Status changes to Active.\n\nChoose the name of your stream. The Stream Details page displays a summary of your stream configuration, along with monitoring information.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html#how-do-i-create-a-stream",
"main_header": "Creating a Stream via the AWS Management Console",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-create-a-stream",
"text": "Creating a Stream via the AWS Management Console"
},
"links": [],
"text": "To create a data stream using the console",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html#how-do-i-create-a-stream",
"main_header": "Creating a Stream via the AWS Management Console",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-create-a-stream",
"text": "Creating a Stream via the AWS Management Console"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html",
"title": "Creating a Stream via the APIs"
}
],
"text": "To create a stream using the Kinesis Data Streams API\nFor information about creating a stream using the Kinesis Data Streams API, see Creating a Stream via the APIs.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html#how-do-i-create-a-stream",
"main_header": "Creating a Stream via the AWS Management Console",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-create-a-stream",
"text": "Creating a Stream via the AWS Management Console"
},
"links": [],
"text": "To create a stream using the Kinesis Data Streams API",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html#how-do-i-create-a-stream",
"main_header": "Creating a Stream via the AWS Management Console",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-create-a-stream",
"text": "Creating a Stream via the AWS Management Console"
},
"links": [
{
"url": "https://docs.aws.amazon.com/cli/latest/reference/kinesis/create-stream.html",
"title": "create-stream"
}
],
"text": "To create a stream using the AWS CLI\nFor information about creating a stream using the AWS CLI, see the create-stream command.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html#how-do-i-create-a-stream",
"main_header": "Creating a Stream via the AWS Management Console",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-create-a-stream",
"text": "Creating a Stream via the AWS Management Console"
},
"links": [],
"text": "To create a stream using the AWS CLI",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html#how-do-i-create-a-stream",
"main_header": "Creating a Stream via the AWS Management Console",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-create-stream",
"text": "Creating a Stream via the APIs"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html#kinesis-using-sdk-java-create-stream",
"main_header": "Creating a Stream via the APIs",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-create-stream",
"text": "Creating a Stream via the APIs"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-create-the-stream",
"text": "Create the Stream"
},
"links": [],
"text": "On-demand:\nCreateStreamRequest createStreamRequest = new CreateStreamRequest();\ncreateStreamRequest.setStreamName( myStreamName );\n\nProvisioned:\nCreateStreamRequest createStreamRequest = new CreateStreamRequest();\ncreateStreamRequest.setStreamName( myStreamName );\ncreateStreamRequest.setShardCount( myStreamSize );",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html#kinesis-using-sdk-java-create-the-stream",
"main_header": "Create the Stream",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#updating-a-stream",
"text": "Updating a Stream"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html#updating-a-stream",
"main_header": "Updating a Stream",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#updating-a-stream",
"text": "Updating a Stream"
},
"links": [],
"text": "NoteYou can enable server-side encryption for existing streams, or for streams that you have recently created.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html#updating-a-stream",
"main_header": "Updating a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#updating-a-stream",
"text": "Updating a Stream"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html#updating-a-stream",
"main_header": "Updating a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#updating-a-stream",
"text": "Updating a Stream"
},
"links": [],
"text": "You can enable server-side encryption for existing streams, or for streams that you have recently created.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html#updating-a-stream",
"main_header": "Updating a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#updating-a-stream",
"text": "Updating a Stream"
},
"links": [],
"text": "You can enable server-side encryption for existing streams, or for streams that you have recently created.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html#updating-a-stream",
"main_header": "Updating a Stream",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#updating-a-stream",
"text": "Updating a Stream"
},
"h2": {
"urllink": "#update-stream-console",
"text": ""
},
"links": [
{
"url": "https://console.aws.amazon.com/kinesis/",
"title": "https://console.aws.amazon.com/kinesis/"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"title": "Choosing the Data Stream Capacity Mode"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"title": "Permissions to Use User-Generated KMS Master Keys"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"title": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
}
],
"text": "To update a data stream using the console\nOpen the Amazon Kinesis console at https://console.aws.amazon.com/kinesis/.\n\nIn the navigation bar, expand the Region selector and choose a Region.\n\nChoose the name of your stream in the list. The Stream Details page displays a summary of your stream configuration and monitoring information.\n\nTo switch between on-demand and provisioned capacity modes for a data stream, choose Edit capacity mode in the Configuration tab. For more information, see Choosing the Data Stream Capacity Mode.\nImportantFor each data stream in your AWS account, you can switch between the on-demand and provisioned modes twice within 24 hours.\n\nFor a data stream with the provisioned mode, to edit the number of shards, choose Edit provisioned shards in the Configuration tab, and then enter a new shard count.\n\nTo enable server-side encryption of data records, choose Edit in the Server-side encryption section. Choose a KMS key to use as the master key for encryption, or use the default master key, aws/kinesis, managed by Kinesis. If you enable encryption for a stream and use your own AWS KMS master key, ensure that your producer and consumer applications have access to the AWS KMS master key that you used. To assign permissions to an application to access a user-generated AWS KMS key, see Permissions to Use User-Generated KMS Master Keys.\n\nTo edit the data retention period, choose Edit in the Data retention period section, and then enter a new data retention period.\n\nIf you have enabled custom metrics on your account, choose Edit in the Shard level metrics section, and then specify metrics for your stream. For more information, see Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html#update-stream-console",
"main_header": "",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#updating-a-stream",
"text": "Updating a Stream"
},
"h2": {
"urllink": "#update-stream-console",
"text": ""
},
"links": [],
"text": "To update a data stream using the console",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html#update-stream-console",
"main_header": "",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#updating-a-stream",
"text": "Updating a Stream"
},
"h2": {
"urllink": "#update-stream-api",
"text": "Updating a Stream Using the API"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_AddTagsToStream.html",
"title": "AddTagsToStream"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DecreaseStreamRetentionPeriod.html",
"title": "DecreaseStreamRetentionPeriod"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DisableEnhancedMonitoring.html",
"title": "DisableEnhancedMonitoring"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_EnableEnhancedMonitoring.html",
"title": "EnableEnhancedMonitoring"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_IncreaseStreamRetentionPeriod.html",
"title": "IncreaseStreamRetentionPeriod"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_RemoveTagsFromStream.html",
"title": "RemoveTagsFromStream"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_StartStreamEncryption.html",
"title": "StartStreamEncryption"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_StopStreamEncryption.html",
"title": "StopStreamEncryption"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_UpdateShardCount.html",
"title": "UpdateShardCount"
}
],
"text": "AddTagsToStream\n\nDecreaseStreamRetentionPeriod\n\nDisableEnhancedMonitoring\n\nEnableEnhancedMonitoring\n\nIncreaseStreamRetentionPeriod\n\nRemoveTagsFromStream\n\nStartStreamEncryption\n\nStopStreamEncryption\n\nUpdateShardCount",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html#update-stream-api",
"main_header": "Updating a Stream Using the API",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-streams",
"text": "Listing Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html#kinesis-using-sdk-java-list-streams",
"main_header": "Listing Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-streams",
"text": "Listing Streams"
},
"links": [],
"text": "CREATING\n\nACTIVE\n\nUPDATING\n\nDELETING",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html#kinesis-using-sdk-java-list-streams",
"main_header": "Listing Streams",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards",
"main_header": "Listing Shards",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards-method1",
"title": "ListShards API - Recommended"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-retrieve-shards",
"title": "DescribeStream API - Deprecated"
}
],
"text": "TopicsListShards API - RecommendedDescribeStream API - Deprecated",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards",
"main_header": "Listing Shards",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards",
"main_header": "Listing Shards",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-list-shards-method1",
"text": "ListShards API - Recommended"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"title": "Quotas and Limits"
}
],
"text": "ImportantDescribeStreamSummary and ListShard APIs provide a more scalable way to retrieve information about your data streams. More specifically, the quotas for the DescribeStream API can cause throttling. For more information, see Quotas and Limits. Note also that DescribeStream quotas are shared across all applications that interact with all data streams in your AWS account. The quotas for the ListShards API, on the other hand, are specific to a single data stream. So not only do you get higher TPS with the ListShards API, but the action scales better as you create more data streams.We recommend that you migrate all of your producers and consumers that call the DescribeStream API to instead invoke the DescribeStreamSummary and the ListShard APIs. To identify these producers and consumers, we recommend using Athena to parse CloudTrail logs as user agents for KPL and KCL are captured in the API calls. \nSELECT useridentity.sessioncontext.sessionissuer.username, \nuseridentity.arn,eventname,useragent, count(*) FROM \ncloudtrail_logs WHERE Eventname IN ('DescribeStream')  AND \neventtime BETWEEN '' AND ''\nGROUP BY  useridentity.sessioncontext.sessionissuer.username,useridentity.arn,eventname,useragent\nORDER BY  count(*) DESC LIMIT 100 We also recommend that the AWS Lambda and Kinesis Data Firehose integrations with Kinesis Data Streams that invoke the DescribeStream API are reconfigured so that the integrations instead invoke DescribeStreamSummary and ListShards. Specifically, for AWS Lambda, you must update your event source mapping. For Kinesis Data Firehose, the corresponding IAM permissions must be updated so that they include the ListShards IAM permission.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards-method1",
"main_header": "ListShards API - Recommended",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-list-shards-method1",
"text": "ListShards API - Recommended"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards-method1",
"main_header": "ListShards API - Recommended",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-list-shards-method1",
"text": "ListShards API - Recommended"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"title": "Quotas and Limits"
}
],
"text": "DescribeStreamSummary and ListShard APIs provide a more scalable way to retrieve information about your data streams. More specifically, the quotas for the DescribeStream API can cause throttling. For more information, see Quotas and Limits. Note also that DescribeStream quotas are shared across all applications that interact with all data streams in your AWS account. The quotas for the ListShards API, on the other hand, are specific to a single data stream. So not only do you get higher TPS with the ListShards API, but the action scales better as you create more data streams.We recommend that you migrate all of your producers and consumers that call the DescribeStream API to instead invoke the DescribeStreamSummary and the ListShard APIs. To identify these producers and consumers, we recommend using Athena to parse CloudTrail logs as user agents for KPL and KCL are captured in the API calls. \nSELECT useridentity.sessioncontext.sessionissuer.username, \nuseridentity.arn,eventname,useragent, count(*) FROM \ncloudtrail_logs WHERE Eventname IN ('DescribeStream')  AND \neventtime BETWEEN '' AND ''\nGROUP BY  useridentity.sessioncontext.sessionissuer.username,useridentity.arn,eventname,useragent\nORDER BY  count(*) DESC LIMIT 100 We also recommend that the AWS Lambda and Kinesis Data Firehose integrations with Kinesis Data Streams that invoke the DescribeStream API are reconfigured so that the integrations instead invoke DescribeStreamSummary and ListShards. Specifically, for AWS Lambda, you must update your event source mapping. For Kinesis Data Firehose, the corresponding IAM permissions must be updated so that they include the ListShards IAM permission.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards-method1",
"main_header": "ListShards API - Recommended",
"images": [],
"container_type": "div",
"children_tags": [
"pre",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-list-shards-method1",
"text": "ListShards API - Recommended"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"title": "Quotas and Limits"
}
],
"text": "DescribeStreamSummary and ListShard APIs provide a more scalable way to retrieve information about your data streams. More specifically, the quotas for the DescribeStream API can cause throttling. For more information, see Quotas and Limits. Note also that DescribeStream quotas are shared across all applications that interact with all data streams in your AWS account. The quotas for the ListShards API, on the other hand, are specific to a single data stream. So not only do you get higher TPS with the ListShards API, but the action scales better as you create more data streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards-method1",
"main_header": "ListShards API - Recommended",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-list-shards-method1",
"text": "ListShards API - Recommended"
},
"links": [],
"text": "We recommend that you migrate all of your producers and consumers that call the DescribeStream API to instead invoke the DescribeStreamSummary and the ListShard APIs. To identify these producers and consumers, we recommend using Athena to parse CloudTrail logs as user agents for KPL and KCL are captured in the API calls.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards-method1",
"main_header": "ListShards API - Recommended",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-list-shards-method1",
"text": "ListShards API - Recommended"
},
"links": [],
"text": "We also recommend that the AWS Lambda and Kinesis Data Firehose integrations with Kinesis Data Streams that invoke the DescribeStream API are reconfigured so that the integrations instead invoke DescribeStreamSummary and ListShards. Specifically, for AWS Lambda, you must update your event source mapping. For Kinesis Data Firehose, the corresponding IAM permissions must be updated so that they include the ListShards IAM permission.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards-method1",
"main_header": "ListShards API - Recommended",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-retrieve-shards",
"text": "DescribeStream API - Deprecated"
},
"links": [],
"text": "ImportantThe information below describes a currently deprecated way of retrieving shards from a data stream via the DescribeStream API. It is currently highly recommended that you use the ListShards API to retrieve the shards that comprise the data stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-retrieve-shards",
"main_header": "DescribeStream API - Deprecated",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-retrieve-shards",
"text": "DescribeStream API - Deprecated"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-retrieve-shards",
"main_header": "DescribeStream API - Deprecated",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-retrieve-shards",
"text": "DescribeStream API - Deprecated"
},
"links": [],
"text": "The information below describes a currently deprecated way of retrieving shards from a data stream via the DescribeStream API. It is currently highly recommended that you use the ListShards API to retrieve the shards that comprise the data stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-retrieve-shards",
"main_header": "DescribeStream API - Deprecated",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-retrieve-shards",
"text": "DescribeStream API - Deprecated"
},
"links": [],
"text": "The information below describes a currently deprecated way of retrieving shards from a data stream via the DescribeStream API. It is currently highly recommended that you use the ListShards API to retrieve the shards that comprise the data stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-retrieve-shards",
"main_header": "DescribeStream API - Deprecated",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-delete-stream",
"text": "Deleting a Stream"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-delete-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-delete-stream.html#kinesis-using-sdk-java-delete-stream",
"main_header": "Deleting a Stream",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding",
"text": "Resharding a Stream"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html#kinesis-using-sdk-java-resharding",
"main_header": "Resharding a Stream",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding",
"text": "Resharding a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_UpdateShardCount.html",
"title": "UpdateShardCount"
}
],
"text": "ImportantYou can reshard your stream using the UpdateShardCount API. Otherwise, you can continue to perform splits and merges as explained here.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html#kinesis-using-sdk-java-resharding",
"main_header": "Resharding a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding",
"text": "Resharding a Stream"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html#kinesis-using-sdk-java-resharding",
"main_header": "Resharding a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding",
"text": "Resharding a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_UpdateShardCount.html",
"title": "UpdateShardCount"
}
],
"text": "You can reshard your stream using the UpdateShardCount API. Otherwise, you can continue to perform splits and merges as explained here.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html#kinesis-using-sdk-java-resharding",
"main_header": "Resharding a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding",
"text": "Resharding a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_UpdateShardCount.html",
"title": "UpdateShardCount"
}
],
"text": "You can reshard your stream using the UpdateShardCount API. Otherwise, you can continue to perform splits and merges as explained here.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html#kinesis-using-sdk-java-resharding",
"main_header": "Resharding a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-strategies",
"text": "Strategies for Resharding"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html#kinesis-using-sdk-java-resharding-strategies",
"main_header": "Strategies for Resharding",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-split",
"text": "Splitting a Shard"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html#kinesis-using-sdk-java-resharding-split",
"main_header": "Splitting a Shard",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-merge",
"text": "Merging Two Shards"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html#kinesis-using-sdk-java-resharding-merge",
"main_header": "Merging Two Shards",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-after-resharding",
"text": "After Resharding"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-after-resharding",
"main_header": "After Resharding",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-after-resharding",
"text": "After Resharding"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-wait-until-active",
"title": "Waiting for a Stream to Become Active Again"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-data-routing",
"title": "Data Routing, Data Persistence, and Shard State after a Reshard"
}
],
"text": "TopicsWaiting for a Stream to Become Active AgainData Routing, Data Persistence, and Shard State after a Reshard",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-after-resharding",
"main_header": "After Resharding",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-after-resharding",
"text": "After Resharding"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-after-resharding",
"main_header": "After Resharding",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-after-resharding",
"text": "After Resharding"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-resharding-data-routing",
"text": "Data Routing, Data Persistence, and Shard State after a Reshard"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"title": "Changing the Data Retention Period"
}
],
"text": "NoteData records are accessible from the time they are added to the stream to the current retention period. This holds true regardless of any changes to the shards in the stream during that time period. For more information about a stream\u00e2\u0080\u0099s retention period, see Changing the Data Retention Period.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-data-routing",
"main_header": "Data Routing, Data Persistence, and Shard State after a Reshard",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-after-resharding",
"text": "After Resharding"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-resharding-data-routing",
"text": "Data Routing, Data Persistence, and Shard State after a Reshard"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-data-routing",
"main_header": "Data Routing, Data Persistence, and Shard State after a Reshard",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-after-resharding",
"text": "After Resharding"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-resharding-data-routing",
"text": "Data Routing, Data Persistence, and Shard State after a Reshard"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"title": "Changing the Data Retention Period"
}
],
"text": "Data records are accessible from the time they are added to the stream to the current retention period. This holds true regardless of any changes to the shards in the stream during that time period. For more information about a stream\u00e2\u0080\u0099s retention period, see Changing the Data Retention Period.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-data-routing",
"main_header": "Data Routing, Data Persistence, and Shard State after a Reshard",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-after-resharding",
"text": "After Resharding"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-resharding-data-routing",
"text": "Data Routing, Data Persistence, and Shard State after a Reshard"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"title": "Changing the Data Retention Period"
}
],
"text": "Data records are accessible from the time they are added to the stream to the current retention period. This holds true regardless of any changes to the shards in the stream during that time period. For more information about a stream\u00e2\u0080\u0099s retention period, see Changing the Data Retention Period.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-data-routing",
"main_header": "Data Routing, Data Persistence, and Shard State after a Reshard",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-after-resharding",
"text": "After Resharding"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-resharding-data-routing",
"text": "Data Routing, Data Persistence, and Shard State after a Reshard"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"title": "Changing the Data Retention Period"
}
],
"text": "OPEN: Before a reshard operation, a parent shard is in the OPEN state, which means that data records can be both added to the shard and retrieved from the shard. CLOSED: After a reshard operation, the parent shard transitions to a CLOSED state. This means that data records are no longer added to the shard. Data records that would have been added to this shard are now added to a child shard instead. However, data records can still be retrieved from the shard for a limited time. EXPIRED: After the stream's retention period has expired, all the data records in the parent shard have expired and are no longer accessible. At this point, the shard itself transitions to an EXPIRED state. Calls to getStreamDescription().getShards to enumerate the shards in the stream do not include EXPIRED shards in the list shards returned. For more information about a stream\u00e2\u0080\u0099s retention period, see Changing the Data Retention Period.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-data-routing",
"main_header": "Data Routing, Data Persistence, and Shard State after a Reshard",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-extended-retention",
"text": "Changing the Data Retention Period"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html#kinesis-extended-retention",
"main_header": "Changing the Data Retention Period",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging",
"main_header": "Tagging Your Streams in Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-basics",
"title": "Tag Basics"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-billing",
"title": "Tracking Costs Using Tagging"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-restrictions",
"title": "Tag Restrictions"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-console",
"title": "Tagging Streams Using the Kinesis Data Streams Console"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-cli",
"title": "Tagging Streams Using the AWS CLI"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-api",
"title": "Tagging Streams Using the Kinesis Data Streams API"
}
],
"text": "ContentsTag BasicsTracking Costs Using TaggingTag RestrictionsTagging Streams Using the Kinesis Data Streams ConsoleTagging Streams Using the AWS CLITagging Streams Using the Kinesis Data Streams API",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging",
"main_header": "Tagging Your Streams in Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"links": [],
"text": "Contents",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging",
"main_header": "Tagging Your Streams in Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-basics",
"text": "Tag Basics"
},
"links": [],
"text": "Add tags to a stream\n\nList the tags for your streams\n\nRemove tags from a stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-basics",
"main_header": "Tag Basics",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-basics",
"text": "Tag Basics"
},
"links": [],
"text": "Project: Project name\n\nOwner: Name\n\nPurpose: Load testing Application: Application name\n\nEnvironment: Production",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-basics",
"main_header": "Tag Basics",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-restrictions",
"text": "Tag Restrictions"
},
"links": [],
"text": "Basic restrictions\n\nThe maximum number of tags per resource (stream) is 50.\n\nTag keys and values are case-sensitive.\n\nYou can't change or edit tags for a deleted stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-restrictions",
"main_header": "Tag Restrictions",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-restrictions",
"text": "Tag Restrictions"
},
"links": [],
"text": "Basic restrictions",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-restrictions",
"main_header": "Tag Restrictions",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-restrictions",
"text": "Tag Restrictions"
},
"links": [],
"text": "Tag key restrictions\n\nEach tag key must be unique. If you add a tag with a key that's already in use, your new tag overwrites the existing key-value pair. You can't start a tag key with aws: because this prefix is reserved for use by AWS. AWS creates tags that begin with this prefix on your behalf, but you can't edit or delete them.\n\nTag keys must be between 1 and 128 Unicode characters in length.\n\nTag keys must consist of the following characters: Unicode letters, digits, white space, and the following special characters: _ . / = + - @.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-restrictions",
"main_header": "Tag Restrictions",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-restrictions",
"text": "Tag Restrictions"
},
"links": [],
"text": "Tag key restrictions",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-restrictions",
"main_header": "Tag Restrictions",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-restrictions",
"text": "Tag Restrictions"
},
"links": [],
"text": "Tag value restrictions\n\nTag values must be between 0 and 255 Unicode characters in length.\n\nTag values can be blank. Otherwise, they must consist of the following characters: Unicode letters, digits, white space, and any of the following special characters: _ . / = + - @.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-restrictions",
"main_header": "Tag Restrictions",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-restrictions",
"text": "Tag Restrictions"
},
"links": [],
"text": "Tag value restrictions",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-restrictions",
"main_header": "Tag Restrictions",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-console",
"text": "Tagging Streams Using the Kinesis Data Streams Console"
},
"links": [],
"text": "To view the tags for a stream\nOpen the Kinesis Data Streams console. In the navigation bar, expand the region selector and select a region.\n\nOn the Stream List page, select a stream.\n\nOn the Stream Details page, click the Tags tab.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-console",
"main_header": "Tagging Streams Using the Kinesis Data Streams Console",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-console",
"text": "Tagging Streams Using the Kinesis Data Streams Console"
},
"links": [],
"text": "To view the tags for a stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-console",
"main_header": "Tagging Streams Using the Kinesis Data Streams Console",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-console",
"text": "Tagging Streams Using the Kinesis Data Streams Console"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-restrictions",
"title": "Tag Restrictions"
}
],
"text": "To add a tag to a stream\nOpen the Kinesis Data Streams console. In the navigation bar, expand the region selector and select a region.\n\nOn the Stream List page, select a stream.\n\nOn the Stream Details page, click the Tags tab.\n\nSpecify the tag key in the Key field, optionally specify a tag value in the Value field, and then click Add Tag.\nIf the Add Tag button is not enabled, either the tag key or tag value that you specified don't meet the tag restrictions. For more information, see Tag Restrictions.\n\nTo view your new tag in the list on the Tags tab, click the refresh icon.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-console",
"main_header": "Tagging Streams Using the Kinesis Data Streams Console",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-console",
"text": "Tagging Streams Using the Kinesis Data Streams Console"
},
"links": [],
"text": "To add a tag to a stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-console",
"main_header": "Tagging Streams Using the Kinesis Data Streams Console",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-console",
"text": "Tagging Streams Using the Kinesis Data Streams Console"
},
"links": [],
"text": "To remove a tag from a stream\nOpen the Kinesis Data Streams console. In the navigation bar, expand the region selector and select a region.\n\nOn the Stream List page, select a stream.\n\nOn the Stream Details page, click the Tags tab, and then click the Remove icon for the tag.\n\nIn the Delete Tag dialog box, click Yes, Delete.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-console",
"main_header": "Tagging Streams Using the Kinesis Data Streams Console",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-console",
"text": "Tagging Streams Using the Kinesis Data Streams Console"
},
"links": [],
"text": "To remove a tag from a stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-console",
"main_header": "Tagging Streams Using the Kinesis Data Streams Console",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-cli",
"text": "Tagging Streams Using the AWS CLI"
},
"links": [
{
"url": "https://docs.aws.amazon.com/cli/latest/reference/kinesis/add-tags-to-stream.html",
"title": "add-tags-to-stream"
},
{
"url": "https://docs.aws.amazon.com/cli/latest/reference/kinesis/list-tags-for-stream.html",
"title": "list-tags-for-stream"
},
{
"url": "https://docs.aws.amazon.com/cli/latest/reference/kinesis/remove-tags-from-stream.html",
"title": "remove-tags-from-stream"
}
],
"text": "add-tags-to-stream Adds or updates tags for the specified stream. list-tags-for-stream\n\nLists the tags for the specified stream. remove-tags-from-stream\n\nRemoves tags from the specified stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-cli",
"main_header": "Tagging Streams Using the AWS CLI",
"images": [],
"container_type": "div",
"children_tags": [
"dl"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-api",
"text": "Tagging Streams Using the Kinesis Data Streams API"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_AddTagsToStream.html",
"title": "AddTagsToStream"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ListTagsForStream.html",
"title": "ListTagsForStream"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_RemoveTagsFromStream.html",
"title": "RemoveTagsFromStream"
}
],
"text": "AddTagsToStream Adds or updates tags for the specified stream. ListTagsForStream\n\nLists the tags for the specified stream. RemoveTagsFromStream\n\nRemoves tags from the specified stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-api",
"main_header": "Tagging Streams Using the Kinesis Data Streams API",
"images": [],
"container_type": "div",
"children_tags": [
"dl"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#building-producers",
"text": "Writing Data to Amazon Kinesis Data Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html#building-producers",
"main_header": "Writing Data to Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#building-producers",
"text": "Writing Data to Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"title": "Changing the Data Retention Period"
}
],
"text": "ImportantKinesis Data Streams supports changes to the data record retention period of your data stream. For more information, see Changing the Data Retention Period.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html#building-producers",
"main_header": "Writing Data to Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#building-producers",
"text": "Writing Data to Amazon Kinesis Data Streams"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html#building-producers",
"main_header": "Writing Data to Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#building-producers",
"text": "Writing Data to Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"title": "Changing the Data Retention Period"
}
],
"text": "Kinesis Data Streams supports changes to the data record retention period of your data stream. For more information, see Changing the Data Retention Period.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html#building-producers",
"main_header": "Writing Data to Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#building-producers",
"text": "Writing Data to Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"title": "Changing the Data Retention Period"
}
],
"text": "Kinesis Data Streams supports changes to the data record retention period of your data stream. For more information, see Changing the Data Retention Period.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html#building-producers",
"main_header": "Writing Data to Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#developing-producers-with-kpl",
"text": "Developing Producers Using the Amazon Kinesis Producer Library"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html#developing-producers-with-kpl",
"main_header": "Developing Producers Using the Amazon Kinesis Producer Library",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-kpl",
"text": "Developing Producers Using the Amazon Kinesis Producer Library"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-producer/releases/",
"title": "https://github.com/awslabs/amazon-kinesis-producer/releases/"
}
],
"text": "NoteIt is recommended that you upgrade to the latest KPL version. KPL is regularly updated with newer releases that include the latest dependency and security patches, bug fixes, and backward-compatible new features. For more information, see https://github.com/awslabs/amazon-kinesis-producer/releases/.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html#developing-producers-with-kpl",
"main_header": "Developing Producers Using the Amazon Kinesis Producer Library",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-kpl",
"text": "Developing Producers Using the Amazon Kinesis Producer Library"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html#developing-producers-with-kpl",
"main_header": "Developing Producers Using the Amazon Kinesis Producer Library",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-kpl",
"text": "Developing Producers Using the Amazon Kinesis Producer Library"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-producer/releases/",
"title": "https://github.com/awslabs/amazon-kinesis-producer/releases/"
}
],
"text": "It is recommended that you upgrade to the latest KPL version. KPL is regularly updated with newer releases that include the latest dependency and security patches, bug fixes, and backward-compatible new features. For more information, see https://github.com/awslabs/amazon-kinesis-producer/releases/.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html#developing-producers-with-kpl",
"main_header": "Developing Producers Using the Amazon Kinesis Producer Library",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-kpl",
"text": "Developing Producers Using the Amazon Kinesis Producer Library"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-producer/releases/",
"title": "https://github.com/awslabs/amazon-kinesis-producer/releases/"
}
],
"text": "It is recommended that you upgrade to the latest KPL version. KPL is regularly updated with newer releases that include the latest dependency and security patches, bug fixes, and backward-compatible new features. For more information, see https://github.com/awslabs/amazon-kinesis-producer/releases/.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html#developing-producers-with-kpl",
"main_header": "Developing Producers Using the Amazon Kinesis Producer Library",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-kpl",
"text": "Developing Producers Using the Amazon Kinesis Producer Library"
},
"h2": {
"urllink": "#developing-producers-with-kpl-role",
"text": "Role of the KPL"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/dev/developing-consumers-with-kcl.html",
"title": "Kinesis Client Library"
}
],
"text": "Writes to one or more Kinesis data streams with an automatic and configurable retry mechanism\n\nCollects records and uses PutRecords to write multiple records to multiple shards per request\n\nAggregates user records to increase payload size and improve throughput\n\nIntegrates seamlessly with the Kinesis Client Library (KCL) to de-aggregate batched records on the consumer\n\nSubmits Amazon CloudWatch metrics on your behalf to provide visibility into producer performance",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html#developing-producers-with-kpl-role",
"main_header": "Role of the KPL",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-kpl",
"text": "Developing Producers Using the Amazon Kinesis Producer Library"
},
"h2": {
"urllink": "#developing-producers-with-kpl-advantage",
"text": "Advantages of Using the KPL"
},
"links": [],
"text": "Performance Benefits The KPL can help build high-performance producers. Consider a situation where your Amazon EC2 instances serve as a proxy for collecting 100-byte events from hundreds or thousands of low power devices and writing records into a Kinesis data stream. These EC2 instances must each write thousands of events per second to your data stream. To achieve the throughput needed, producers must implement complicated logic, such as batching or multithreading, in addition to retry logic and record de-aggregation at the consumer side. The KPL performs all of these tasks for you. Consumer-Side Ease of Use For consumer-side developers using the KCL in Java, the KPL integrates without additional effort. When the KCL retrieves an aggregated Kinesis Data Streams record consisting of multiple KPL user records, it automatically invokes the KPL to extract the individual user records before returning them to the user. \nFor consumer-side developers who do not use the KCL but instead use the API operation GetRecords directly, a KPL Java library is available to extract the individual user records before returning them to the user. Producer Monitoring You can collect, monitor, and analyze your Kinesis Data Streams producers using Amazon CloudWatch and the KPL. The KPL emits throughput, error, and other metrics to CloudWatch on your behalf, and is configurable to monitor at the stream, shard, or producer level. Asynchronous Architecture Because the KPL may buffer records before sending them to Kinesis Data Streams, it does not force the caller application to block and wait for a confirmation that the record has arrived at the server before continuing execution. A call to put a record into the KPL always returns immediately and does not wait for the record to be sent or a response to be received from the server. Instead, a Future object is created that receives the result of sending the record to Kinesis Data Streams at a later time. This is the same behavior as asynchronous clients in the AWS SDK.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html#developing-producers-with-kpl-advantage",
"main_header": "Advantages of Using the KPL",
"images": [],
"container_type": "div",
"children_tags": [
"dl"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-dl-install",
"text": "Installing the KPL"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-dl-install.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-dl-install.html#kinesis-kpl-dl-install",
"main_header": "Installing the KPL",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-dl-install",
"text": "Installing the KPL"
},
"links": [
{
"url": "https://search.maven.org/#search|ga|1|amazon-kinesis-producer",
"title": "KPL"
},
{
"url": "https://search.maven.org/#search|ga|1|amazon-kinesis-client",
"title": "KCL"
}
],
"text": "KPL\n\nKCL",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-dl-install.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-dl-install.html#kinesis-kpl-dl-install",
"main_header": "Installing the KPL",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-upgrades",
"text": "Transitioning to Amazon Trust Services (ATS) Certificates for the Kinesis Producer Library"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-upgrades.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-upgrades.html#kinesis-kpl-upgrades",
"main_header": "Transitioning to Amazon Trust Services (ATS) Certificates for the Kinesis Producer Library",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-supported-plats",
"text": "KPL Supported Platforms"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-supported-plats.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-supported-plats.html#kinesis-kpl-supported-plats",
"main_header": "KPL Supported Platforms",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-supported-plats",
"text": "KPL Supported Platforms"
},
"links": [],
"text": "Linux distributions with kernel 2.6.18 (September 2006) and later\n\nApple OS X 10.9 and later\n\nWindows Server 2008 and later\nImportantWindows Server 2008 and later is supported for all KPL versions up to version 0.14.0. The Windows platform is NOT supported starting with KPL version 0.14.0 or higher.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-supported-plats.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-supported-plats.html#kinesis-kpl-supported-plats",
"main_header": "KPL Supported Platforms",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts",
"main_header": "KPL Key Concepts",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-records",
"title": "Records"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-batching",
"title": "Batching"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-aggretation",
"title": "Aggregation"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-collection",
"title": "Collection"
}
],
"text": "TopicsRecordsBatchingAggregationCollection",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts",
"main_header": "KPL Key Concepts",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts",
"main_header": "KPL Key Concepts",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-batching",
"text": "Batching"
},
"links": [],
"text": "Aggregation \u00e2\u0080\u0093 Storing multiple records within a single Kinesis Data Streams record. Collection \u00e2\u0080\u0093 Using the API operation PutRecords to send multiple Kinesis Data Streams records to one or more shards in your Kinesis data stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-batching",
"main_header": "Batching",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-integration",
"text": "Integrating the KPL with Producer Code"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html#kinesis-kpl-integration",
"main_header": "Integrating the KPL with Producer Code",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-integration",
"text": "Integrating the KPL with Producer Code"
},
"h2": {
"urllink": "#kinesis-kpl-integration-usage",
"text": "Recommended Usage Matrix"
},
"links": [],
"text": "Producer side language\nConsumer side language\nKCL Version\nCheckpoint logic\nCan you use the KPL?\nCaveats Anything but Java\n*\n*\n*\nNo\nN/A Java\nJava\nUses Java SDK directly\nN/A\nYes\nIf aggregation is used, you have to use the provided de-aggregation library after GetRecords calls. Java\nAnything but Java\nUses SDK directly\nN/A\nYes\nMust disable aggregation. Java\nJava\n1.3.x\nN/A\nYes\nMust disable aggregation. Java\nJava \n1.4.x\nCalls checkpoint without any arguments\nYes\nNone Java\nJava\n1.4.x\nCalls checkpoint with an explicit sequence number\nYes\nEither disable aggregation, or change the code to use extended sequence numbers for checkpointing. Java\nAnything but Java \n1.3.x + Multilanguage daemon + language-specific wrapper\nN/A\nYes\nMust disable aggregation.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html#kinesis-kpl-integration-usage",
"main_header": "Recommended Usage Matrix",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-integration",
"text": "Integrating the KPL with Producer Code"
},
"h2": {
"urllink": "#kinesis-kpl-integration-usage",
"text": "Recommended Usage Matrix"
},
"links": [],
"text": "Producer side language\nConsumer side language\nKCL Version\nCheckpoint logic\nCan you use the KPL?\nCaveats Anything but Java\n*\n*\n*\nNo\nN/A Java\nJava\nUses Java SDK directly\nN/A\nYes\nIf aggregation is used, you have to use the provided de-aggregation library after GetRecords calls. Java\nAnything but Java\nUses SDK directly\nN/A\nYes\nMust disable aggregation. Java\nJava\n1.3.x\nN/A\nYes\nMust disable aggregation. Java\nJava \n1.4.x\nCalls checkpoint without any arguments\nYes\nNone Java\nJava\n1.4.x\nCalls checkpoint with an explicit sequence number\nYes\nEither disable aggregation, or change the code to use extended sequence numbers for checkpointing. Java\nAnything but Java \n1.3.x + Multilanguage daemon + language-specific wrapper\nN/A\nYes\nMust disable aggregation.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html#kinesis-kpl-integration-usage",
"main_header": "Recommended Usage Matrix",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-writing",
"text": "Writing to your Kinesis Data Stream Using the KPL"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-writing.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-writing.html#kinesis-kpl-writing",
"main_header": "Writing to your Kinesis Data Stream Using the KPL",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-config",
"text": "Configuring the Kinesis Producer Library"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html#kinesis-kpl-config",
"main_header": "Configuring the Kinesis Producer Library",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation",
"main_header": "Consumer De-aggregation",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kpl-with-firehose",
"text": "Using the KPL with Kinesis Data Firehose"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-firehose.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-firehose.html#kpl-with-firehose",
"main_header": "Using the KPL with Kinesis Data Firehose",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kpl-with-schemaregistry",
"text": "Using the KPL with the AWS Glue Schema Registry"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-schemaregistry.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-schemaregistry.html#kpl-with-schemaregistry",
"main_header": "Using the KPL with the AWS Glue Schema Registry",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kpl-with-schemaregistry",
"text": "Using the KPL with the AWS Glue Schema Registry"
},
"links": [],
"text": "ImportantCurrently, Kinesis Data Streams and AWS Glue schema registry integration is only supported for the Kinesis data streams that use KPL producers implemented in Java. Multi-language support is not provided.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-schemaregistry.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-schemaregistry.html#kpl-with-schemaregistry",
"main_header": "Using the KPL with the AWS Glue Schema Registry",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kpl-with-schemaregistry",
"text": "Using the KPL with the AWS Glue Schema Registry"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-schemaregistry.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-schemaregistry.html#kpl-with-schemaregistry",
"main_header": "Using the KPL with the AWS Glue Schema Registry",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kpl-with-schemaregistry",
"text": "Using the KPL with the AWS Glue Schema Registry"
},
"links": [],
"text": "Currently, Kinesis Data Streams and AWS Glue schema registry integration is only supported for the Kinesis data streams that use KPL producers implemented in Java. Multi-language support is not provided.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-schemaregistry.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-schemaregistry.html#kpl-with-schemaregistry",
"main_header": "Using the KPL with the AWS Glue Schema Registry",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kpl-with-schemaregistry",
"text": "Using the KPL with the AWS Glue Schema Registry"
},
"links": [],
"text": "Currently, Kinesis Data Streams and AWS Glue schema registry integration is only supported for the Kinesis data streams that use KPL producers implemented in Java. Multi-language support is not provided.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-schemaregistry.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-schemaregistry.html#kpl-with-schemaregistry",
"main_header": "Using the KPL with the AWS Glue Schema Registry",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kpl-proxy-configuration",
"text": "KPL Proxy Configuration"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-proxy-configuration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-proxy-configuration.html#kpl-proxy-configuration",
"main_header": "KPL Proxy Configuration",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#developing-producers-with-sdk",
"main_header": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream",
"title": "Adding Data to a Stream"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-integration-glue-schema-registry",
"title": "Interacting with Data Using the AWS Glue Schema Registry"
}
],
"text": "TopicsAdding Data to a StreamInteracting with Data Using the AWS Glue Schema Registry",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#developing-producers-with-sdk",
"main_header": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#developing-producers-with-sdk",
"main_header": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords",
"title": "Adding Multiple Records with PutRecords"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord",
"title": "Adding a Single Record with PutRecord"
}
],
"text": "TopicsAdding Multiple Records with PutRecordsAdding a Single Record with PutRecord",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream",
"main_header": "Adding Data to a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream",
"main_header": "Adding Data to a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"title": "Changing the Data Retention Period"
}
],
"text": "ImportantChanging the Data Retention Period",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream",
"main_header": "Adding Data to a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream",
"main_header": "Adding Data to a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"title": "Changing the Data Retention Period"
}
],
"text": "Changing the Data Retention Period",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream",
"main_header": "Adding Data to a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"title": "Changing the Data Retention Period"
}
],
"text": "Changing the Data Retention Period",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream",
"main_header": "Adding Data to a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"links": [],
"text": "NoteSequence numbers cannot be used as indexes to sets of data within the same stream. To logically separate sets of data, use partition keys or create a separate stream for each data set.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords",
"main_header": "Adding Multiple Records with PutRecords",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords",
"main_header": "Adding Multiple Records with PutRecords",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"links": [],
"text": "Sequence numbers cannot be used as indexes to sets of data within the same stream. To logically separate sets of data, use partition keys or create a separate stream for each data set.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords",
"main_header": "Adding Multiple Records with PutRecords",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"links": [],
"text": "Sequence numbers cannot be used as indexes to sets of data within the same stream. To logically separate sets of data, use partition keys or create a separate stream for each data set.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords",
"main_header": "Adding Multiple Records with PutRecords",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecords-handling-failures",
"text": "Handling Failures When Using PutRecords"
},
"links": [],
"text": "Example PutRecords Request Syntax{ \"Records\": [ { \"Data\": \"XzxkYXRhPl8w\", \"PartitionKey\": \"partitionKey1\" }, { \"Data\": \"AbceddeRFfg12asd\", \"PartitionKey\": \"partitionKey1\" }, { \"Data\": \"KFpcd98*7nd1\", \"PartitionKey\": \"partitionKey3\" } ], \"StreamName\": \"myStream\"\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords-handling-failures",
"main_header": "Handling Failures When Using PutRecords",
"images": [],
"container_type": "div",
"children_tags": [
"div",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecords-handling-failures",
"text": "Handling Failures When Using PutRecords"
},
"links": [],
"text": "Example PutRecords Request Syntax",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords-handling-failures",
"main_header": "Handling Failures When Using PutRecords",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecords-handling-failures",
"text": "Handling Failures When Using PutRecords"
},
"links": [],
"text": "{ \"Records\": [ { \"Data\": \"XzxkYXRhPl8w\", \"PartitionKey\": \"partitionKey1\" }, { \"Data\": \"AbceddeRFfg12asd\", \"PartitionKey\": \"partitionKey1\" }, { \"Data\": \"KFpcd98*7nd1\", \"PartitionKey\": \"partitionKey3\" } ], \"StreamName\": \"myStream\"\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords-handling-failures",
"main_header": "Handling Failures When Using PutRecords",
"images": [],
"container_type": "div",
"children_tags": [
"pre"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecords-handling-failures",
"text": "Handling Failures When Using PutRecords"
},
"links": [],
"text": "Example PutRecords Response Syntax{ \"FailedRecordCount\u00e2\u0080\u009d: 1, \"Records\": [ { \"SequenceNumber\": \"21269319989900637946712965403778482371\", \"ShardId\": \"shardId-000000000001\" }, { \u00e2\u0080\u009cErrorCode\":\u00e2\u0080\u009dProvisionedThroughputExceededException\u00e2\u0080\u009d, \u00e2\u0080\u009cErrorMessage\": \"Rate exceeded for shard shardId-000000000001 in stream exampleStreamName under account 111111111111.\" }, { \"SequenceNumber\": \"21269319989999637946712965403778482985\", \"ShardId\": \"shardId-000000000002\" } ]\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords-handling-failures",
"main_header": "Handling Failures When Using PutRecords",
"images": [],
"container_type": "div",
"children_tags": [
"div",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecords-handling-failures",
"text": "Handling Failures When Using PutRecords"
},
"links": [],
"text": "Example PutRecords Response Syntax",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords-handling-failures",
"main_header": "Handling Failures When Using PutRecords",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecords-handling-failures",
"text": "Handling Failures When Using PutRecords"
},
"links": [],
"text": "{ \"FailedRecordCount\u00e2\u0080\u009d: 1, \"Records\": [ { \"SequenceNumber\": \"21269319989900637946712965403778482371\", \"ShardId\": \"shardId-000000000001\" }, { \u00e2\u0080\u009cErrorCode\":\u00e2\u0080\u009dProvisionedThroughputExceededException\u00e2\u0080\u009d, \u00e2\u0080\u009cErrorMessage\": \"Rate exceeded for shard shardId-000000000001 in stream exampleStreamName under account 111111111111.\" }, { \"SequenceNumber\": \"21269319989999637946712965403778482985\", \"ShardId\": \"shardId-000000000002\" } ]\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords-handling-failures",
"main_header": "Handling Failures When Using PutRecords",
"images": [],
"container_type": "div",
"children_tags": [
"pre"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecords-handling-failures",
"text": "Handling Failures When Using PutRecords"
},
"links": [],
"text": "Example PutRecords failure handlerPutRecordsRequest putRecordsRequest = new PutRecordsRequest();\nputRecordsRequest.setStreamName(myStreamName);\nList<PutRecordsRequestEntry> putRecordsRequestEntryList = new ArrayList<>();\nfor (int j = 0; j < 100; j++) { PutRecordsRequestEntry putRecordsRequestEntry = new PutRecordsRequestEntry(); putRecordsRequestEntry.setData(ByteBuffer.wrap(String.valueOf(j).getBytes())); putRecordsRequestEntry.setPartitionKey(String.format(\"partitionKey-%d\", j)); putRecordsRequestEntryList.add(putRecordsRequestEntry);\n}\n\nputRecordsRequest.setRecords(putRecordsRequestEntryList);\nPutRecordsResult putRecordsResult = amazonKinesisClient.putRecords(putRecordsRequest);\n\nwhile (putRecordsResult.getFailedRecordCount() > 0) { final List<PutRecordsRequestEntry> failedRecordsList = new ArrayList<>(); final List<PutRecordsResultEntry> putRecordsResultEntryList = putRecordsResult.getRecords(); for (int i = 0; i < putRecordsResultEntryList.size(); i++) { final PutRecordsRequestEntry putRecordRequestEntry = putRecordsRequestEntryList.get(i); final PutRecordsResultEntry putRecordsResultEntry = putRecordsResultEntryList.get(i); if (putRecordsResultEntry.getErrorCode() != null) { failedRecordsList.add(putRecordRequestEntry); } } putRecordsRequestEntryList = failedRecordsList; putRecordsRequest.setRecords(putRecordsRequestEntryList); putRecordsResult = amazonKinesisClient.putRecords(putRecordsRequest);\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords-handling-failures",
"main_header": "Handling Failures When Using PutRecords",
"images": [],
"container_type": "div",
"children_tags": [
"div",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecords-handling-failures",
"text": "Handling Failures When Using PutRecords"
},
"links": [],
"text": "Example PutRecords failure handler",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords-handling-failures",
"main_header": "Handling Failures When Using PutRecords",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecords-handling-failures",
"text": "Handling Failures When Using PutRecords"
},
"links": [],
"text": "PutRecordsRequest putRecordsRequest = new PutRecordsRequest();\nputRecordsRequest.setStreamName(myStreamName);\nList<PutRecordsRequestEntry> putRecordsRequestEntryList = new ArrayList<>();\nfor (int j = 0; j < 100; j++) { PutRecordsRequestEntry putRecordsRequestEntry = new PutRecordsRequestEntry(); putRecordsRequestEntry.setData(ByteBuffer.wrap(String.valueOf(j).getBytes())); putRecordsRequestEntry.setPartitionKey(String.format(\"partitionKey-%d\", j)); putRecordsRequestEntryList.add(putRecordsRequestEntry);\n}\n\nputRecordsRequest.setRecords(putRecordsRequestEntryList);\nPutRecordsResult putRecordsResult = amazonKinesisClient.putRecords(putRecordsRequest);\n\nwhile (putRecordsResult.getFailedRecordCount() > 0) { final List<PutRecordsRequestEntry> failedRecordsList = new ArrayList<>(); final List<PutRecordsResultEntry> putRecordsResultEntryList = putRecordsResult.getRecords(); for (int i = 0; i < putRecordsResultEntryList.size(); i++) { final PutRecordsRequestEntry putRecordRequestEntry = putRecordsRequestEntryList.get(i); final PutRecordsResultEntry putRecordsResultEntry = putRecordsResultEntryList.get(i); if (putRecordsResultEntry.getErrorCode() != null) { failedRecordsList.add(putRecordRequestEntry); } } putRecordsRequestEntryList = failedRecordsList; putRecordsRequest.setRecords(putRecordsRequestEntryList); putRecordsResult = amazonKinesisClient.putRecords(putRecordsRequest);\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords-handling-failures",
"main_header": "Handling Failures When Using PutRecords",
"images": [],
"container_type": "div",
"children_tags": [
"pre"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecord",
"text": "Adding a Single Record with PutRecord"
},
"links": [],
"text": "NoteSequence numbers cannot be used as indexes to sets of data within the same stream. To logically separate sets of data, use partition keys or create a separate stream for each data set.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord",
"main_header": "Adding a Single Record with PutRecord",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecord",
"text": "Adding a Single Record with PutRecord"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord",
"main_header": "Adding a Single Record with PutRecord",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecord",
"text": "Adding a Single Record with PutRecord"
},
"links": [],
"text": "Sequence numbers cannot be used as indexes to sets of data within the same stream. To logically separate sets of data, use partition keys or create a separate stream for each data set.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord",
"main_header": "Adding a Single Record with PutRecord",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecord",
"text": "Adding a Single Record with PutRecord"
},
"links": [],
"text": "Sequence numbers cannot be used as indexes to sets of data within the same stream. To logically separate sets of data, use partition keys or create a separate stream for each data set.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord",
"main_header": "Adding a Single Record with PutRecord",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#writing-with-agents",
"main_header": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#prereqs",
"title": "Prerequisites"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#download-install",
"title": "Download and Install the Agent"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#config-start",
"title": "Configure and Start the Agent"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#agent-config-settings",
"title": "Agent Configuration Settings"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#sim-writes",
"title": "Monitor Multiple File Directories and Write to Multiple Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"title": "Use the Agent to Pre-process Data"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#cli-commands",
"title": "Agent CLI Commands"
}
],
"text": "TopicsPrerequisitesDownload and Install the AgentConfigure and Start the AgentAgent Configuration SettingsMonitor Multiple File Directories and Write to Multiple StreamsUse the Agent to Pre-process DataAgent CLI Commands",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#writing-with-agents",
"main_header": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#writing-with-agents",
"main_header": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#prereqs",
"text": "Prerequisites"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#awsAccessKeyId",
"title": "awsAccessKeyId"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#awsSecretAccessKey",
"title": "awsSecretAccessKey"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#assumeRoleARN",
"title": "assumeRoleARN"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#assumeRoleExternalId",
"title": "assumeRoleExternalId"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecords.html",
"title": "PutRecords"
},
{
"url": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricData.html",
"title": "PutMetricData"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"title": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/agent-health.html",
"title": "Monitoring Kinesis Data Streams Agent Health with Amazon CloudWatch"
},
{
"url": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/UsingIAM.html",
"title": "CloudWatch Access Control"
}
],
"text": "Your operating system must be either Amazon Linux AMI with version 2015.09 or later, or Red Hat Enterprise Linux version 7 or later.\n\nIf you are using Amazon EC2 to run your agent, launch your EC2 instance.\n\nManage your AWS credentials using one of the following methods: Specify an IAM role when you launch your EC2 instance.\n\nSpecify AWS credentials when you configure the agent (see awsAccessKeyId and awsSecretAccessKey).\n\nEdit /etc/sysconfig/aws-kinesis-agent to specify your region and AWS access keys.\n\nIf your EC2 instance is in a different AWS account, create an IAM role to provide access to the Kinesis Data Streams service, and specify that role when you configure the agent (see assumeRoleARN and assumeRoleExternalId). Use one of the previous methods to specify the AWS credentials of a user in the other account who has permission to assume this role. The IAM role or AWS credentials that you specify must have permission to perform the Kinesis Data Streams PutRecords operation for the agent to send data to your stream. If you enable CloudWatch monitoring for the agent, permission to perform the CloudWatch PutMetricData operation is also needed. For more information, see Controlling Access to Amazon Kinesis Data Streams Resources Using IAM, Monitoring Kinesis Data Streams Agent Health with Amazon CloudWatch, and CloudWatch Access Control.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#prereqs",
"main_header": "Prerequisites",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#download-install",
"text": "Download and Install the Agent"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-agent",
"title": "awlabs/amazon-kinesis-agent"
}
],
"text": "To set up the agent using GitHub\nDownload the agent from awlabs/amazon-kinesis-agent. Install the agent by navigating to the download directory and running the following command:\nsudo ./setup --install",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#download-install",
"main_header": "Download and Install the Agent",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#download-install",
"text": "Download and Install the Agent"
},
"links": [],
"text": "To set up the agent using GitHub",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#download-install",
"main_header": "Download and Install the Agent",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#config-start",
"text": "Configure and Start the Agent"
},
"links": [],
"text": "To configure and start the agent\nOpen and edit the configuration file (as superuser if using default file access permissions): /etc/aws-kinesis/agent.json\n\nIn this configuration file, specify the files ( \"filePattern\" ) from which the agent collects data, and the name of the stream ( \"kinesisStream\" ) to which the agent sends data. Note that the file name is a pattern, and the agent recognizes file rotations. You can rotate files or create new files no more than once per second. The agent uses the file creation timestamp to determine which files to track and tail into your stream; creating new files or rotating files more frequently than once per second does not allow the agent to differentiate properly between them.\n{ \"flows\": [ { \"filePattern\": \"/tmp/app.log*\", \"kinesisStream\": \"yourkinesisstream\" } ] \n} Start the agent manually:\nsudo service aws-kinesis-agent start\n\n(Optional) Configure the agent to start on system startup:\nsudo chkconfig aws-kinesis-agent on",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#config-start",
"main_header": "Configure and Start the Agent",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#config-start",
"text": "Configure and Start the Agent"
},
"links": [],
"text": "To configure and start the agent",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#config-start",
"main_header": "Configure and Start the Agent",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#agent-config-settings",
"text": "Agent Configuration Settings"
},
"links": [
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html",
"title": "Delegate Access Across AWS Accounts Using IAM Roles"
},
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html",
"title": "How to Use an External ID"
}
],
"text": "Configuration Setting\nDescription assumeRoleARN\n\nThe ARN of the role to be assumed by the user. For more information, see Delegate Access Across AWS Accounts Using IAM Roles in the IAM User Guide. assumeRoleExternalId\n\nAn optional identifier that determines who can assume the role. For more information, see How to Use an External ID in the IAM User Guide. awsAccessKeyId\n\nAWS access key ID that overrides the default credentials. This setting takes precedence over all other credential providers. awsSecretAccessKey\n\nAWS secret key that overrides the default credentials. This setting takes precedence over all other credential providers. cloudwatch.emitMetrics\n\nEnables the agent to emit metrics to CloudWatch if set (true).\nDefault: true cloudwatch.endpoint\n\nThe regional endpoint for CloudWatch.\nDefault: monitoring.us-east-1.amazonaws.com kinesis.endpoint\n\nThe regional endpoint for Kinesis Data Streams.\nDefault: kinesis.us-east-1.amazonaws.com",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#agent-config-settings",
"main_header": "Agent Configuration Settings",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#agent-config-settings",
"text": "Agent Configuration Settings"
},
"links": [
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html",
"title": "Delegate Access Across AWS Accounts Using IAM Roles"
},
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html",
"title": "How to Use an External ID"
}
],
"text": "Configuration Setting\nDescription assumeRoleARN\n\nThe ARN of the role to be assumed by the user. For more information, see Delegate Access Across AWS Accounts Using IAM Roles in the IAM User Guide. assumeRoleExternalId\n\nAn optional identifier that determines who can assume the role. For more information, see How to Use an External ID in the IAM User Guide. awsAccessKeyId\n\nAWS access key ID that overrides the default credentials. This setting takes precedence over all other credential providers. awsSecretAccessKey\n\nAWS secret key that overrides the default credentials. This setting takes precedence over all other credential providers. cloudwatch.emitMetrics\n\nEnables the agent to emit metrics to CloudWatch if set (true).\nDefault: true cloudwatch.endpoint\n\nThe regional endpoint for CloudWatch.\nDefault: monitoring.us-east-1.amazonaws.com kinesis.endpoint\n\nThe regional endpoint for Kinesis Data Streams.\nDefault: kinesis.us-east-1.amazonaws.com",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#agent-config-settings",
"main_header": "Agent Configuration Settings",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#agent-config-settings",
"text": "Agent Configuration Settings"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"title": "Use the Agent to Pre-process Data"
}
],
"text": "Configuration Setting\nDescription dataProcessingOptions\n\nThe list of processing options applied to each parsed record before it is sent to the stream. The processing options are performed in the specified order. For more information, see Use the Agent to Pre-process Data. kinesisStream\n\n[Required] The name of the stream. filePattern\n\n[Required] A glob for the files that must be monitored by the agent. Any file that matches this pattern is picked up by the agent automatically and monitored. For all files matching this pattern, read permission must be granted to aws-kinesis-agent-user. For the directory containing the files, read and execute permissions must be granted to aws-kinesis-agent-user. initialPosition\n\nThe initial position from which the file started to be parsed. Valid values are START_OF_FILE and END_OF_FILE.\nDefault: END_OF_FILE maxBufferAgeMillis\n\nThe maximum time, in milliseconds, for which the agent buffers data before sending it to the stream.\nValue range: 1,000 to 900,000 (1 second to 15 minutes)\nDefault: 60,000 (1 minute) maxBufferSizeBytes\n\nThe maximum size, in bytes, for which the agent buffers data before sending it to the stream.\nValue range: 1 to 4,194,304 (4 MB)\nDefault: 4,194,304 (4 MB) maxBufferSizeRecords\n\nThe maximum number of records for which the agent buffers data before sending it to the stream.\nValue range: 1 to 500\nDefault: 500 minTimeBetweenFilePollsMillis\n\nThe time interval, in milliseconds, at which the agent polls and parses the monitored files for new data.\nValue range: 1 or more\nDefault: 100 multiLineStartPattern\n\nThe pattern for identifying the start of a record. A record is made of a line that matches the pattern and any following lines that don't match the pattern. The valid values are regular expressions. By default, each new line in the log files is parsed as one record. partitionKeyOption\n\nThe method for generating the partition key. Valid values are RANDOM (randomonly generated integer) and DETERMINISTIC (a hash value computed from the data).\nDefault: RANDOM skipHeaderLines\n\nThe number of lines for the agent to skip parsing at the beginning of monitored files.\nValue range: 0 or more\nDefault: 0 (zero) truncatedRecordTerminator\n\nThe string that the agent uses to truncate a parsed record when the record size exceeds the Kinesis Data Streams record size limit. (1,000 KB)\nDefault: '\\n' (newline)",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#agent-config-settings",
"main_header": "Agent Configuration Settings",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#agent-config-settings",
"text": "Agent Configuration Settings"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"title": "Use the Agent to Pre-process Data"
}
],
"text": "Configuration Setting\nDescription dataProcessingOptions\n\nThe list of processing options applied to each parsed record before it is sent to the stream. The processing options are performed in the specified order. For more information, see Use the Agent to Pre-process Data. kinesisStream\n\n[Required] The name of the stream. filePattern\n\n[Required] A glob for the files that must be monitored by the agent. Any file that matches this pattern is picked up by the agent automatically and monitored. For all files matching this pattern, read permission must be granted to aws-kinesis-agent-user. For the directory containing the files, read and execute permissions must be granted to aws-kinesis-agent-user. initialPosition\n\nThe initial position from which the file started to be parsed. Valid values are START_OF_FILE and END_OF_FILE.\nDefault: END_OF_FILE maxBufferAgeMillis\n\nThe maximum time, in milliseconds, for which the agent buffers data before sending it to the stream.\nValue range: 1,000 to 900,000 (1 second to 15 minutes)\nDefault: 60,000 (1 minute) maxBufferSizeBytes\n\nThe maximum size, in bytes, for which the agent buffers data before sending it to the stream.\nValue range: 1 to 4,194,304 (4 MB)\nDefault: 4,194,304 (4 MB) maxBufferSizeRecords\n\nThe maximum number of records for which the agent buffers data before sending it to the stream.\nValue range: 1 to 500\nDefault: 500 minTimeBetweenFilePollsMillis\n\nThe time interval, in milliseconds, at which the agent polls and parses the monitored files for new data.\nValue range: 1 or more\nDefault: 100 multiLineStartPattern\n\nThe pattern for identifying the start of a record. A record is made of a line that matches the pattern and any following lines that don't match the pattern. The valid values are regular expressions. By default, each new line in the log files is parsed as one record. partitionKeyOption\n\nThe method for generating the partition key. Valid values are RANDOM (randomonly generated integer) and DETERMINISTIC (a hash value computed from the data).\nDefault: RANDOM skipHeaderLines\n\nThe number of lines for the agent to skip parsing at the beginning of monitored files.\nValue range: 0 or more\nDefault: 0 (zero) truncatedRecordTerminator\n\nThe string that the agent uses to truncate a parsed record when the record size exceeds the Kinesis Data Streams record size limit. (1,000 KB)\nDefault: '\\n' (newline)",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#agent-config-settings",
"main_header": "Agent Configuration Settings",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Processing Options\n\nSINGLELINE\n\nConverts a multi-line record to a single line record by removing newline characters, leading spaces, and trailing spaces.\n{ \"optionName\": \"SINGLELINE\"\n}\n\nCSVTOJSON\n\nConverts a record from delimiter separated format to JSON format.\n{ \"optionName\": \"CSVTOJSON\", \"customFieldNames\": [ \"field1\", \"field2\", ... ], \"delimiter\": \"yourdelimiter\"\n} customFieldNames\n\n[Required] The field names used as keys in each JSON key value pair. For example, if you specify [\"f1\", \"f2\"], the record \"v1, v2\" will be converted to {\"f1\":\"v1\",\"f2\":\"v2\"}.\n\ndelimiter\n\nThe string used as the delimiter in the record. The default is a comma (,). LOGTOJSON\n\nConverts a record from a log format to JSON format. The supported log formats are Apache Common Log, Apache Combined Log, Apache Error Log, and RFC3164 Syslog.\n{ \"optionName\": \"LOGTOJSON\", \"logFormat\": \"logformat\", \"matchPattern\": \"yourregexpattern\", \"customFieldNames\": [ \"field1\", \"field2\", \u00e2\u0080\u00a6 ]\n} logFormat\n\n[Required] The log entry format. The following are possible values: COMMONAPACHELOG \u00e2\u0080\u0094 The Apache Common Log format. Each log entry has the following pattern by default: \"%{host} %{ident} %{authuser} [%{datetime}] \\\"%{request}\\\" %{response} %{bytes}\".\n\nCOMBINEDAPACHELOG \u00e2\u0080\u0094 The Apache Combined Log format. Each log entry has the following pattern by default: \"%{host} %{ident} %{authuser} [%{datetime}] \\\"%{request}\\\" %{response} %{bytes} %{referrer} %{agent}\".\n\nAPACHEERRORLOG \u00e2\u0080\u0094 The Apache Error Log format. Each log entry has the following pattern by default: \"[%{timestamp}] [%{module}:%{severity}] [pid %{processid}:tid %{threadid}] [client: %{client}] %{message}\".\n\nSYSLOG \u00e2\u0080\u0094 The RFC3164 Syslog format. Each log entry has the following pattern by default: \"%{timestamp} %{hostname} %{program}[%{processid}]: %{message}\". matchPattern\n\nThe regular expression pattern used to extract values from log entries. This setting is used if your log entry is not in one of the predefined log formats. If this setting is used, you must also specify customFieldNames.\n\ncustomFieldNames\n\nThe custom field names used as keys in each JSON key value pair. You can use this setting to define field names for values extracted from matchPattern, or override the default field names of predefined log formats.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "div",
"children_tags": [
"dl",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Processing Options",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Example : LOGTOJSON ConfigurationHere is one example of a LOGTOJSON configuration for an Apache Common Log entry converted to JSON format:{ \"optionName\": \"LOGTOJSON\", \"logFormat\": \"COMMONAPACHELOG\"\n}Before conversion:64.242.88.10 - - [07/Mar/2004:16:10:02 -0800] \"GET /mailman/listinfo/hsdivision HTTP/1.1\" 200 6291After conversion:{\"host\":\"64.242.88.10\",\"ident\":null,\"authuser\":null,\"datetime\":\"07/Mar/2004:16:10:02 -0800\",\"request\":\"GET /mailman/listinfo/hsdivision HTTP/1.1\",\"response\":\"200\",\"bytes\":\"6291\"}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "div",
"children_tags": [
"div",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Example : LOGTOJSON Configuration",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Here is one example of a LOGTOJSON configuration for an Apache Common Log entry converted to JSON format:{ \"optionName\": \"LOGTOJSON\", \"logFormat\": \"COMMONAPACHELOG\"\n}Before conversion:64.242.88.10 - - [07/Mar/2004:16:10:02 -0800] \"GET /mailman/listinfo/hsdivision HTTP/1.1\" 200 6291After conversion:{\"host\":\"64.242.88.10\",\"ident\":null,\"authuser\":null,\"datetime\":\"07/Mar/2004:16:10:02 -0800\",\"request\":\"GET /mailman/listinfo/hsdivision HTTP/1.1\",\"response\":\"200\",\"bytes\":\"6291\"}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "div",
"children_tags": [
"pre",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Here is one example of a LOGTOJSON configuration for an Apache Common Log entry converted to JSON format:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Before conversion:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "After conversion:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Example : LOGTOJSON Configuration With Custom FieldsHere is another example LOGTOJSON configuration:{ \"optionName\": \"LOGTOJSON\", \"logFormat\": \"COMMONAPACHELOG\", \"customFieldNames\": [\"f1\", \"f2\", \"f3\", \"f4\", \"f5\", \"f6\", \"f7\"]\n}With this configuration setting, the same Apache Common Log entry from the previous example is converted to JSON format as follows:{\"f1\":\"64.242.88.10\",\"f2\":null,\"f3\":null,\"f4\":\"07/Mar/2004:16:10:02 -0800\",\"f5\":\"GET /mailman/listinfo/hsdivision HTTP/1.1\",\"f6\":\"200\",\"f7\":\"6291\"}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "div",
"children_tags": [
"div",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Example : LOGTOJSON Configuration With Custom Fields",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Here is another example LOGTOJSON configuration:{ \"optionName\": \"LOGTOJSON\", \"logFormat\": \"COMMONAPACHELOG\", \"customFieldNames\": [\"f1\", \"f2\", \"f3\", \"f4\", \"f5\", \"f6\", \"f7\"]\n}With this configuration setting, the same Apache Common Log entry from the previous example is converted to JSON format as follows:{\"f1\":\"64.242.88.10\",\"f2\":null,\"f3\":null,\"f4\":\"07/Mar/2004:16:10:02 -0800\",\"f5\":\"GET /mailman/listinfo/hsdivision HTTP/1.1\",\"f6\":\"200\",\"f7\":\"6291\"}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "div",
"children_tags": [
"pre",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Here is another example LOGTOJSON configuration:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "With this configuration setting, the same Apache Common Log entry from the previous example is converted to JSON format as follows:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Example : Convert Apache Common Log EntryThe following flow configuration converts an Apache Common Log entry to a single line record in JSON format:{ \"flows\": [ { \"filePattern\": \"/tmp/app.log*\", \"kinesisStream\": \"my-stream\", \"dataProcessingOptions\": [ { \"optionName\": \"LOGTOJSON\", \"logFormat\": \"COMMONAPACHELOG\" } ] } ] \n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "div",
"children_tags": [
"div",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Example : Convert Apache Common Log Entry",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "The following flow configuration converts an Apache Common Log entry to a single line record in JSON format:{ \"flows\": [ { \"filePattern\": \"/tmp/app.log*\", \"kinesisStream\": \"my-stream\", \"dataProcessingOptions\": [ { \"optionName\": \"LOGTOJSON\", \"logFormat\": \"COMMONAPACHELOG\" } ] } ] \n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "div",
"children_tags": [
"pre",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "The following flow configuration converts an Apache Common Log entry to a single line record in JSON format:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Example : Convert Multi-Line RecordsThe following flow configuration parses multi-line records whose first line starts with \"[SEQUENCE=\". Each record is first converted to a single line record. Then, values are extracted from the record based on a tab delimiter. Extracted values are mapped to specified customFieldNames values to form a single-line record in JSON format.{ \"flows\": [ { \"filePattern\": \"/tmp/app.log*\", \"kinesisStream\": \"my-stream\", \"multiLineStartPattern\": \"\\\\[SEQUENCE=\", \"dataProcessingOptions\": [ { \"optionName\": \"SINGLELINE\" }, { \"optionName\": \"CSVTOJSON\", \"customFieldNames\": [ \"field1\", \"field2\", \"field3\" ], \"delimiter\": \"\\\\t\" } ] } ] \n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "div",
"children_tags": [
"div",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Example : Convert Multi-Line Records",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "The following flow configuration parses multi-line records whose first line starts with \"[SEQUENCE=\". Each record is first converted to a single line record. Then, values are extracted from the record based on a tab delimiter. Extracted values are mapped to specified customFieldNames values to form a single-line record in JSON format.{ \"flows\": [ { \"filePattern\": \"/tmp/app.log*\", \"kinesisStream\": \"my-stream\", \"multiLineStartPattern\": \"\\\\[SEQUENCE=\", \"dataProcessingOptions\": [ { \"optionName\": \"SINGLELINE\" }, { \"optionName\": \"CSVTOJSON\", \"customFieldNames\": [ \"field1\", \"field2\", \"field3\" ], \"delimiter\": \"\\\\t\" } ] } ] \n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "div",
"children_tags": [
"pre",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "The following flow configuration parses multi-line records whose first line starts with \"[SEQUENCE=\". Each record is first converted to a single line record. Then, values are extracted from the record based on a tab delimiter. Extracted values are mapped to specified customFieldNames values to form a single-line record in JSON format.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Example : LOGTOJSON Configuration with Match PatternHere is one example of a LOGTOJSON configuration for an Apache Common Log entry converted to JSON format, with the last field (bytes) omitted:{ \"optionName\": \"LOGTOJSON\", \"logFormat\": \"COMMONAPACHELOG\", \"matchPattern\": \"^([\\\\d.]+) (\\\\S+) (\\\\S+) \\\\[([\\\\w:/]+\\\\s[+\\\\-]\\\\d{4})\\\\] \\\"(.+?)\\\" (\\\\d{3})\", \"customFieldNames\": [\"host\", \"ident\", \"authuser\", \"datetime\", \"request\", \"response\"]\n}Before conversion:123.45.67.89 - - [27/Oct/2000:09:27:09 -0400] \"GET /java/javaResources.html HTTP/1.0\" 200After conversion:{\"host\":\"123.45.67.89\",\"ident\":null,\"authuser\":null,\"datetime\":\"27/Oct/2000:09:27:09 -0400\",\"request\":\"GET /java/javaResources.html HTTP/1.0\",\"response\":\"200\"}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "div",
"children_tags": [
"div",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Example : LOGTOJSON Configuration with Match Pattern",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Here is one example of a LOGTOJSON configuration for an Apache Common Log entry converted to JSON format, with the last field (bytes) omitted:{ \"optionName\": \"LOGTOJSON\", \"logFormat\": \"COMMONAPACHELOG\", \"matchPattern\": \"^([\\\\d.]+) (\\\\S+) (\\\\S+) \\\\[([\\\\w:/]+\\\\s[+\\\\-]\\\\d{4})\\\\] \\\"(.+?)\\\" (\\\\d{3})\", \"customFieldNames\": [\"host\", \"ident\", \"authuser\", \"datetime\", \"request\", \"response\"]\n}Before conversion:123.45.67.89 - - [27/Oct/2000:09:27:09 -0400] \"GET /java/javaResources.html HTTP/1.0\" 200After conversion:{\"host\":\"123.45.67.89\",\"ident\":null,\"authuser\":null,\"datetime\":\"27/Oct/2000:09:27:09 -0400\",\"request\":\"GET /java/javaResources.html HTTP/1.0\",\"response\":\"200\"}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "div",
"children_tags": [
"pre",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Here is one example of a LOGTOJSON configuration for an Apache Common Log entry converted to JSON format, with the last field (bytes) omitted:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "Before conversion:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "After conversion:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#troubleshooting-producers",
"main_header": "Troubleshooting Amazon Kinesis Data Streams Producers",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#producer-writing-at-slower-rate",
"title": "Producer Application is Writing at a Slower Rate Than Expected"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#unauthorized-kms-producer",
"title": "Unauthorized KMS master key permission error"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#misc-troubleshooting-producer",
"title": "Common issues, questions, and troubleshooting ideas for producers"
}
],
"text": "The following sections offer solutions to some common problems you may find while working with Amazon Kinesis Data Streams producers.Producer Application is Writing at a Slower Rate Than ExpectedUnauthorized KMS master key permission errorCommon issues, questions, and troubleshooting ideas for producers",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#troubleshooting-producers",
"main_header": "Troubleshooting Amazon Kinesis Data Streams Producers",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"links": [],
"text": "The following sections offer solutions to some common problems you may find while working with Amazon Kinesis Data Streams producers.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#troubleshooting-producers",
"main_header": "Troubleshooting Amazon Kinesis Data Streams Producers",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#service-limits-exceeded",
"title": "Service Limits Exceeded"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#producer-optimization",
"title": "Producer Optimization"
}
],
"text": "The most common reasons for write throughput being slower than expected are as follows.Service Limits ExceededProducer Optimization",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#producer-writing-at-slower-rate",
"main_header": "Producer Application is Writing at a Slower Rate Than Expected",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"links": [],
"text": "The most common reasons for write throughput being slower than expected are as follows.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#producer-writing-at-slower-rate",
"main_header": "Producer Application is Writing at a Slower Rate Than Expected",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"h3": {
"urllink": "#service-limits-exceeded",
"text": "Service Limits Exceeded"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_CreateStream.html",
"title": "CreateStream"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DeleteStream.html",
"title": "DeleteStream"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ListStreams.html",
"title": "ListStreams"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetShardIterator.html",
"title": "GetShardIterator"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_MergeShards.html",
"title": "MergeShards"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DescribeStream.html",
"title": "DescribeStream"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DescribeStreamSummary.html",
"title": "DescribeStreamSummary"
}
],
"text": "CreateStream\n\nDeleteStream\n\nListStreams\n\nGetShardIterator\n\nMergeShards\n\nDescribeStream\n\nDescribeStreamSummary",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#service-limits-exceeded",
"main_header": "Service Limits Exceeded",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"h3": {
"urllink": "#service-limits-exceeded",
"text": "Service Limits Exceeded"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecord.html",
"title": "PutRecord"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecords.html",
"title": "PutRecords"
}
],
"text": "TipRemember to round up to the nearest kilobyte for throughput throttling calculations when using the single-record operation PutRecord, while the multi-record operation PutRecords rounds on the cumulative sum of the records in each call. For example, a PutRecords request with 600 records that are 1.1 KB in size will not get throttled.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#service-limits-exceeded",
"main_header": "Service Limits Exceeded",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"h3": {
"urllink": "#service-limits-exceeded",
"text": "Service Limits Exceeded"
},
"links": [],
"text": "Tip",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#service-limits-exceeded",
"main_header": "Service Limits Exceeded",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"h3": {
"urllink": "#service-limits-exceeded",
"text": "Service Limits Exceeded"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecord.html",
"title": "PutRecord"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecords.html",
"title": "PutRecords"
}
],
"text": "Remember to round up to the nearest kilobyte for throughput throttling calculations when using the single-record operation PutRecord, while the multi-record operation PutRecords rounds on the cumulative sum of the records in each call. For example, a PutRecords request with 600 records that are 1.1 KB in size will not get throttled.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#service-limits-exceeded",
"main_header": "Service Limits Exceeded",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"h3": {
"urllink": "#service-limits-exceeded",
"text": "Service Limits Exceeded"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecord.html",
"title": "PutRecord"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecords.html",
"title": "PutRecords"
}
],
"text": "Remember to round up to the nearest kilobyte for throughput throttling calculations when using the single-record operation PutRecord, while the multi-record operation PutRecords rounds on the cumulative sum of the records in each call. For example, a PutRecords request with 600 records that are 1.1 KB in size will not get throttled.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#service-limits-exceeded",
"main_header": "Service Limits Exceeded",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#misc-troubleshooting-producer",
"text": "Common issues, questions, and troubleshooting ideas for producers"
},
"links": [
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-data-stream-500-error/",
"title": "Why is my Kinesis data stream returning a 500 Internal Server Error?"
},
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-flink-timeout/",
"title": "How do I troubleshoot timeout errors when writing from Flink to Kinesis Data Streams?"
},
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-data-stream-throttling-errors/",
"title": "How do I troubleshoot throttling errors in Kinesis Data Streams?"
},
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-data-stream-throttling/",
"title": "Why is my Kinesis data stream throttling?"
},
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-data-stream-kpl/",
"title": "How can I put data records into a Kinesis data stream using the KPL?"
}
],
"text": "Why is my Kinesis data stream returning a 500 Internal Server Error?\n\nHow do I troubleshoot timeout errors when writing from Flink to Kinesis Data Streams?\n\nHow do I troubleshoot throttling errors in Kinesis Data Streams?\n\nWhy is my Kinesis data stream throttling?\n\nHow can I put data records into a Kinesis data stream using the KPL?",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#misc-troubleshooting-producer",
"main_header": "Common issues, questions, and troubleshooting ideas for producers",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#advanced-producers",
"text": "Advanced Topics for Kinesis Data Streams Producers"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html#advanced-producers",
"main_header": "Advanced Topics for Kinesis Data Streams Producers",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-producer-adv-retries-rate-limiting",
"text": "KPL Retries and Rate Limiting"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html#kinesis-producer-adv-retries-rate-limiting",
"main_header": "KPL Retries and Rate Limiting",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"title": "Advanced Topics for Kinesis Data Streams Producers"
}
]
},
{
"h1": {
"urllink": "#kinesis-producer-adv-retries-rate-limiting",
"text": "KPL Retries and Rate Limiting"
},
"links": [],
"text": "Buffer priority\n\nAggregation configuration\n\nCollection configuration",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html#kinesis-producer-adv-retries-rate-limiting",
"main_header": "KPL Retries and Rate Limiting",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"title": "Advanced Topics for Kinesis Data Streams Producers"
}
]
},
{
"h1": {
"urllink": "#kinesis-producer-adv-retries-rate-limiting",
"text": "KPL Retries and Rate Limiting"
},
"links": [],
"text": "AggregationMaxCount\n\nAggregationMaxSize\n\nCollectionMaxCount\n\nCollectionMaxSize",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html#kinesis-producer-adv-retries-rate-limiting",
"main_header": "KPL Retries and Rate Limiting",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"title": "Advanced Topics for Kinesis Data Streams Producers"
}
]
},
{
"h1": {
"urllink": "#kinesis-producer-adv-retries-rate-limiting",
"text": "KPL Retries and Rate Limiting"
},
"links": [],
"text": "Half the current RecordMaxBufferedTime configuration\n\nThe record\u00e2\u0080\u0099s time-to-live value",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html#kinesis-producer-adv-retries-rate-limiting",
"main_header": "KPL Retries and Rate Limiting",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"title": "Advanced Topics for Kinesis Data Streams Producers"
}
]
},
{
"h1": {
"urllink": "#kinesis-producer-adv-aggregation",
"text": "Considerations When Using KPL Aggregation"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-aggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-aggregation.html#kinesis-producer-adv-aggregation",
"main_header": "Considerations When Using KPL Aggregation",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"title": "Advanced Topics for Kinesis Data Streams Producers"
}
]
},
{
"h1": {
"urllink": "#building-consumers",
"text": "Reading Data from Amazon Kinesis Data Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html#building-consumers",
"main_header": "Reading Data from Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#building-consumers",
"text": "Reading Data from Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://aws.amazon.com/kinesis/streams/pricing",
"title": "Amazon Kinesis Data Streams Pricing"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetRecords.html",
"title": "GetRecords"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_SubscribeToShard.html",
"title": "SubscribeToShard"
}
],
"text": "Characteristics\nUnregistered Consumers without Enhanced Fan-Out\nRegistered Consumers with Enhanced Fan-Out Shard Read Throughput\nFixed at a total of 2 MB/sec per shard. If there are multiple consumers reading from the same shard, they all share this throughput. The sum of the throughputs they receive from the shard doesn't exceed 2 MB/sec.\nScales as consumers register to use enhanced fan-out. Each consumer registered to use enhanced fan-out receives its own read throughput per shard, up to 2 MB/sec, independently of other consumers. Message propagation delay\nAn average of around 200 ms if you have one consumer reading from the stream. This average goes up to around 1000 ms if you have five consumers.\nTypically an average of 70 ms whether you have one consumer or five consumers. Cost\nN/A\nThere is a data retrieval cost and a consumer-shard hour cost. For more information, see Amazon Kinesis Data Streams Pricing. Record delivery model\nPull model over HTTP using GetRecords.\nKinesis Data Streams pushes the records to you over HTTP/2 using SubscribeToShard.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html#building-consumers",
"main_header": "Reading Data from Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#building-consumers",
"text": "Reading Data from Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://aws.amazon.com/kinesis/streams/pricing",
"title": "Amazon Kinesis Data Streams Pricing"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetRecords.html",
"title": "GetRecords"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_SubscribeToShard.html",
"title": "SubscribeToShard"
}
],
"text": "Characteristics\nUnregistered Consumers without Enhanced Fan-Out\nRegistered Consumers with Enhanced Fan-Out Shard Read Throughput\nFixed at a total of 2 MB/sec per shard. If there are multiple consumers reading from the same shard, they all share this throughput. The sum of the throughputs they receive from the shard doesn't exceed 2 MB/sec.\nScales as consumers register to use enhanced fan-out. Each consumer registered to use enhanced fan-out receives its own read throughput per shard, up to 2 MB/sec, independently of other consumers. Message propagation delay\nAn average of around 200 ms if you have one consumer reading from the stream. This average goes up to around 1000 ms if you have five consumers.\nTypically an average of 70 ms whether you have one consumer or five consumers. Cost\nN/A\nThere is a data retrieval cost and a consumer-shard hour cost. For more information, see Amazon Kinesis Data Streams Pricing. Record delivery model\nPull model over HTTP using GetRecords.\nKinesis Data Streams pushes the records to you over HTTP/2 using SubscribeToShard.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html#building-consumers",
"main_header": "Reading Data from Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#lambda-consumer",
"text": "Developing Consumers Using AWS Lambda"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/lambda-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/lambda-consumer.html#lambda-consumer",
"main_header": "Developing Consumers Using AWS Lambda",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kda-consumer",
"text": "Developing Consumers Using Amazon Kinesis Data Analytics"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kda-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kda-consumer.html#kda-consumer",
"main_header": "Developing Consumers Using Amazon Kinesis Data Analytics",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kdf-consumer",
"text": "Developing Consumers Using Amazon Kinesis Data Firehose"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kdf-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kdf-consumer.html#kdf-consumer",
"main_header": "Developing Consumers Using Amazon Kinesis Data Firehose",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers",
"main_header": "Using the Kinesis Client Library",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-overview",
"title": "What is the Kinesis Client Library?"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-versions",
"title": "KCL Available Versions"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-concepts",
"title": "KCL Concepts"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable",
"title": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-multistream",
"title": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-glue-schema-registry",
"title": "Using the Kinesis Client Library with the AWS Glue Schema Registry"
}
],
"text": "TopicsWhat is the Kinesis Client Library? KCL Available Versions KCL Concepts Using a Lease Table to Track the Shards Processed by the KCL Consumer ApplicationProcessing Multiple Data Streams with the same KCL 2.x for Java Consumer ApplicationUsing the Kinesis Client Library with the AWS Glue Schema Registry",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers",
"main_header": "Using the Kinesis Client Library",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers",
"main_header": "Using the Kinesis Client Library",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client/releases",
"title": "https://github.com/awslabs/amazon-kinesis-client/releases"
}
],
"text": "NoteFor both KCL 1.x and KCL 2.x, it is recommended that you upgrade to the latest KCL 1.x version or KCL 2.x version, depending on your usage scenario. Both KCL 1.x and KCL 2.x are regularly updated with newer releases that include the latest dependency and security patches, bug fixes, and backward-compatible new features. For more information, see https://github.com/awslabs/amazon-kinesis-client/releases.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers",
"main_header": "Using the Kinesis Client Library",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers",
"main_header": "Using the Kinesis Client Library",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client/releases",
"title": "https://github.com/awslabs/amazon-kinesis-client/releases"
}
],
"text": "For both KCL 1.x and KCL 2.x, it is recommended that you upgrade to the latest KCL 1.x version or KCL 2.x version, depending on your usage scenario. Both KCL 1.x and KCL 2.x are regularly updated with newer releases that include the latest dependency and security patches, bug fixes, and backward-compatible new features. For more information, see https://github.com/awslabs/amazon-kinesis-client/releases.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers",
"main_header": "Using the Kinesis Client Library",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client/releases",
"title": "https://github.com/awslabs/amazon-kinesis-client/releases"
}
],
"text": "For both KCL 1.x and KCL 2.x, it is recommended that you upgrade to the latest KCL 1.x version or KCL 2.x version, depending on your usage scenario. Both KCL 1.x and KCL 2.x are regularly updated with newer releases that include the latest dependency and security patches, bug fixes, and backward-compatible new features. For more information, see https://github.com/awslabs/amazon-kinesis-client/releases.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers",
"main_header": "Using the Kinesis Client Library",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-overview",
"text": "What is the Kinesis Client Library?"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client/tree/v1.x/src/main/java/com/amazonaws/services/kinesis/multilang",
"title": "KCL MultiLangDaemon project"
}
],
"text": "ImportantThe KCL is a Java library. Support for languages other than Java is provided using a multi-language interface called the MultiLangDaemon. This daemon is Java-based and runs in the background when you are using a KCL language other than Java. For example, if you install the KCL for Python and write your consumer application entirely in Python, you still need Java installed on your system because of the MultiLangDaemon. Further, MultiLangDaemon has some default settings that you might need to customize for your use case, for example, the AWS region that it connects to. For more information about the MultiLangDaemon on GitHub, see KCL MultiLangDaemon project.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-overview",
"main_header": "What is the Kinesis Client Library?",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-overview",
"text": "What is the Kinesis Client Library?"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-overview",
"main_header": "What is the Kinesis Client Library?",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-overview",
"text": "What is the Kinesis Client Library?"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client/tree/v1.x/src/main/java/com/amazonaws/services/kinesis/multilang",
"title": "KCL MultiLangDaemon project"
}
],
"text": "The KCL is a Java library. Support for languages other than Java is provided using a multi-language interface called the MultiLangDaemon. This daemon is Java-based and runs in the background when you are using a KCL language other than Java. For example, if you install the KCL for Python and write your consumer application entirely in Python, you still need Java installed on your system because of the MultiLangDaemon. Further, MultiLangDaemon has some default settings that you might need to customize for your use case, for example, the AWS region that it connects to. For more information about the MultiLangDaemon on GitHub, see KCL MultiLangDaemon project.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-overview",
"main_header": "What is the Kinesis Client Library?",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-overview",
"text": "What is the Kinesis Client Library?"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client/tree/v1.x/src/main/java/com/amazonaws/services/kinesis/multilang",
"title": "KCL MultiLangDaemon project"
}
],
"text": "The KCL is a Java library. Support for languages other than Java is provided using a multi-language interface called the MultiLangDaemon. This daemon is Java-based and runs in the background when you are using a KCL language other than Java. For example, if you install the KCL for Python and write your consumer application entirely in Python, you still need Java installed on your system because of the MultiLangDaemon. Further, MultiLangDaemon has some default settings that you might need to customize for your use case, for example, the AWS region that it connects to. For more information about the MultiLangDaemon on GitHub, see KCL MultiLangDaemon project.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-overview",
"main_header": "What is the Kinesis Client Library?",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-overview",
"text": "What is the Kinesis Client Library?"
},
"links": [],
"text": "Connects to the data stream Enumerates the shards within the data stream\n\nUses leases to coordinates shard associations with its workers Instantiates a record processor for every shard it manages Pulls data records from the data stream Pushes the records to the corresponding record processor Checkpoints processed records Balances shard-worker associations (leases) when the worker instance count changes or when the data stream is resharded (shards are split or merged)",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-overview",
"main_header": "What is the Kinesis Client Library?",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-versions",
"text": "KCL Available Versions"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
],
"text": "KCL 1.x\nFor more information, see Developing KCL 1.x Consumers\n\nKCL 2.x\nFor more information, see Developing KCL 2.x Consumers",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-versions",
"main_header": "KCL Available Versions",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-concepts",
"text": "KCL Concepts"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client/blob/v1.x/src/main/java/com/amazonaws/services/kinesis/clientlibrary/lib/worker/Worker.java",
"title": "https://github.com/awslabs/amazon-kinesis-client/blob/v1.x/src/main/java/com/amazonaws/services/kinesis/clientlibrary/lib/worker/Worker.java"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client/blob/master/amazon-kinesis-client/src/main/java/software/amazon/kinesis/coordinator/Scheduler.java",
"title": "https://github.com/awslabs/amazon-kinesis-client/blob/master/amazon-kinesis-client/src/main/java/software/amazon/kinesis/coordinator/Scheduler.java"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client/blob/v1.x/src/main/java/com/amazonaws/services/kinesis/leases/impl/Lease.java",
"title": "https://github.com/awslabs/amazon-kinesis-client/blob/v1.x/src/main/java/com/amazonaws/services/kinesis/leases/impl/Lease.java"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client/blob/master/amazon-kinesis-client/src/main/java/software/amazon/kinesis/leases/Lease.java",
"title": "https://github.com/awslabs/amazon-kinesis-client/blob/master/amazon-kinesis-client/src/main/java/software/amazon/kinesis/leases/Lease.java"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable",
"title": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
}
],
"text": "KCL consumer application \u00e2\u0080\u0093 an application that is custom-built using KCL and designed to read and process records from data streams. Consumer application instance - KCL consumer applications are typically distributed, with one or more application instances running simultaneously in order to coordinate on failures and dynamically load balance data record processing.\n\nWorker \u00e2\u0080\u0093 a high level class that a KCL consumer application instance uses to start processing data. \nImportantEach KCL consumer application instance has one worker. \nThe worker initializes and oversees various tasks, including syncing shard and lease information, tracking shard assignments, and processing data from the shards. A worker provides KCL with the configuration information for the consumer application, such as the name of the data stream whose data records this KCL consumer application is going to process and the AWS credentials that are needed to access this data stream. The worker also kick starts that specific KCL consumer application instance to deliver data records from the data stream to the record processors.\nImportantIn KCL 1.x this class is called Worker. For more information, (these are the Java KCL repositories), see https://github.com/awslabs/amazon-kinesis-client/blob/v1.x/src/main/java/com/amazonaws/services/kinesis/clientlibrary/lib/worker/Worker.java. In KCL 2.x, this class is called Scheduler. Scheduler\u00e2\u0080\u0099s purpose in KCL 2.x is identical to Worker\u00e2\u0080\u0099s purpose in KCL 1.x. For more information about the Scheduler class in KCL 2.x, see https://github.com/awslabs/amazon-kinesis-client/blob/master/amazon-kinesis-client/src/main/java/software/amazon/kinesis/coordinator/Scheduler.java. Lease \u00e2\u0080\u0093 data that defines the binding between a worker and a shard. Distributed KCL consumer applications use leases to partition data record processing across a fleet of workers. At any given time, each shard of data records is bound to a particular worker by a lease identified by the leaseKey variable. \nBy default, a worker can hold one or more leases (subject to the value of the maxLeasesForWorker variable) at the same time. \nImportantEvery worker will contend to hold all available leases for all available shards in a data stream. But only one worker will successfully hold each lease at any one time. \nFor example, if you have a consumer application instance A with worker A that is processing a data stream with 4 shards, worker A can hold leases to shards 1, 2, 3, and 4 at the same time. But if you have two consumer application instances: A and B with worker A and worker B, and these instances are processing a data stream with 4 shards, worker A and worker B cannot both hold the lease to shard 1 at the same time. One worker holds the lease to a particular shard until it is ready to stop processing this shard\u00e2\u0080\u0099s data records or until it fails. When one worker stops holding the lease, another worker takes up and holds the lease. \nFor more information, (these are the Java KCL repositories), see https://github.com/awslabs/amazon-kinesis-client/blob/v1.x/src/main/java/com/amazonaws/services/kinesis/leases/impl/Lease.java for KCL 1.x and https://github.com/awslabs/amazon-kinesis-client/blob/master/amazon-kinesis-client/src/main/java/software/amazon/kinesis/leases/Lease.java for KCL 2.x.\n\nLease table - a unique Amazon DynamoDB table that is used to keep track of the shards in a KDS data stream that are being leased and processed by the workers of the KCL consumer application. The lease table must remain in sync (within a worker and across all workers) with the latest shard information from the data stream while the KCL consumer application is running. For more information, see Using a Lease Table to Track the Shards Processed by the KCL Consumer Application.\n\nRecord processor \u00e2\u0080\u0093 the logic that defines how your KCL consumer application processes the data that it gets from the data streams. At runtime, a KCL consumer application instance instantiates a worker, and this worker instantiates one record processor for every shard to which it holds a lease.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-concepts",
"main_header": "KCL Concepts",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"title": "What Is a Lease Table"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-leasetable-throughput",
"title": "Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable-sync",
"title": "How a Lease Table Is Synchronized with the Shards in a KDS Data Stream"
}
],
"text": "TopicsWhat Is a Lease TableThroughputHow a Lease Table Is Synchronized with the Shards in a KDS Data Stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable",
"main_header": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable",
"main_header": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-what-is-leasetable",
"text": "What Is a Lease Table"
},
"links": [],
"text": "ImportantKCL uses the name of the consumer application to create the name of the lease table that this consumer application uses, therefore each consumer application name must be unique.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"main_header": "What Is a Lease Table",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-what-is-leasetable",
"text": "What Is a Lease Table"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"main_header": "What Is a Lease Table",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-what-is-leasetable",
"text": "What Is a Lease Table"
},
"links": [],
"text": "KCL uses the name of the consumer application to create the name of the lease table that this consumer application uses, therefore each consumer application name must be unique.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"main_header": "What Is a Lease Table",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-what-is-leasetable",
"text": "What Is a Lease Table"
},
"links": [],
"text": "KCL uses the name of the consumer application to create the name of the lease table that this consumer application uses, therefore each consumer application name must be unique.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"main_header": "What Is a Lease Table",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-what-is-leasetable",
"text": "What Is a Lease Table"
},
"links": [],
"text": "Important Your account is charged for the costs associated with the DynamoDB table, in addition to the costs associated with Kinesis Data Streams itself.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"main_header": "What Is a Lease Table",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-what-is-leasetable",
"text": "What Is a Lease Table"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"main_header": "What Is a Lease Table",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-what-is-leasetable",
"text": "What Is a Lease Table"
},
"links": [],
"text": "Your account is charged for the costs associated with the DynamoDB table, in addition to the costs associated with Kinesis Data Streams itself.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"main_header": "What Is a Lease Table",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-what-is-leasetable",
"text": "What Is a Lease Table"
},
"links": [],
"text": "Your account is charged for the costs associated with the DynamoDB table, in addition to the costs associated with Kinesis Data Streams itself.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"main_header": "What Is a Lease Table",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-what-is-leasetable",
"text": "What Is a Lease Table"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable-sync",
"title": "How a Lease Table Is Synchronized with the Shards in a KDS Data Stream"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-multistream",
"title": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-multistream",
"title": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application"
}
],
"text": "checkpoint: The most recent checkpoint sequence number for the shard. This value is unique across all shards in the data stream.\n\ncheckpointSubSequenceNumber: When using the Kinesis Producer Library's aggregation feature, this is an extension to checkpoint that tracks individual user records within the Kinesis record.\n\nleaseCounter: Used for lease versioning so that workers can detect that their lease has been taken by another worker.\n\nleaseKey: A unique identifier for a lease. Each lease is particular to a shard in the data stream and is held by one worker at a time.\n\nleaseOwner: The worker that is holding this lease.\n\nownerSwitchesSinceCheckpoint: How many times this lease has changed workers since the last time a checkpoint was written.\n\nparentShardId: Used to ensure that the parent shard is fully processed before processing starts on the child shards. This ensures that records are processed in the same order they were put into the stream.\n\nhashrange: Used by the PeriodicShardSyncManager to run periodic syncs to find missing shards in the lease table and create leases for them if required. \nNoteThis data is present in the lease table for every shard starting with KCL 1.14 and KCL 2.3. For more information about PeriodicShardSyncManager and periodic synchronization between leases and shards, see How a Lease Table Is Synchronized with the Shards in a KDS Data Stream.\n\nchildshards: Used by the LeaseCleanupManager to review the child shard's processing status and decide whether the parent shard can be deleted from the lease table.\nNoteThis data is present in the lease table for every shard starting with KCL 1.14 and KCL 2.3.\n\nshardID: The ID of the shard.\nNoteThis data is only present in the lease table if you are Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application. This is only supported in KCL 2.x for Java, starting with KCL 2.3 for Java and beyond. stream name The identifier of the data stream in the following format: account-id:StreamName:streamCreationTimestamp.\nNoteThis data is only present in the lease table if you are Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application. This is only supported in KCL 2.x for Java, starting with KCL 2.3 for Java and beyond.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"main_header": "What Is a Lease Table",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync",
"text": "How a Lease Table Is Synchronized with the Shards in a KDS Data Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable-sync-old",
"title": "Synchronization in KCL 1.0 - 1.13 and KCL 2.0 - 2.2"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable-sync-new-kcl2",
"title": "Synchronization in KCL 2.x, Starting with KCL 2.3 and Beyond"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable-sync-new-kcl1",
"title": "Synchronization in KCL 1.x, Starting with KCL 1.14 and Beyond"
}
],
"text": "TopicsSynchronization in KCL 1.0 - 1.13 and KCL 2.0 - 2.2Synchronization in KCL 2.x, Starting with KCL 2.3 and BeyondSynchronization in KCL 1.x, Starting with KCL 1.14 and Beyond",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable-sync",
"main_header": "How a Lease Table Is Synchronized with the Shards in a KDS Data Stream",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync",
"text": "How a Lease Table Is Synchronized with the Shards in a KDS Data Stream"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable-sync",
"main_header": "How a Lease Table Is Synchronized with the Shards in a KDS Data Stream",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync",
"text": "How a Lease Table Is Synchronized with the Shards in a KDS Data Stream"
},
"h4": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync-old",
"text": "Synchronization in KCL 1.0 - 1.13 and KCL 2.0 - 2.2"
},
"links": [],
"text": "Fetches all the shards for data the stream that is being processed\n\nFetches all the shard leases from the lease table\n\nFilters out each open shard that does not have a lease in the lease table\n\nIterates over all found open shards and for each open shard with no open parent: Traverses the hierarchy tree through its ancestors path to determine if the shard is a descendant. A shard is considered a descendant, if an ancestor shard is being processed (lease entry for ancestor shard exists in the lease table) or if an ancestor shard should be processed (for example, if the initial position is TRIM_HORIZON or AT_TIMESTAMP)\n\nIf the open shard in context is a descendant, KCL checkpoints the shard based on initial position and creates leases for its parents, if required",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable-sync-old",
"main_header": "Synchronization in KCL 1.0 - 1.13 and KCL 2.0 - 2.2",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync",
"text": "How a Lease Table Is Synchronized with the Shards in a KDS Data Stream"
},
"h4": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync-new-kcl2",
"text": "Synchronization in KCL 2.x, Starting with KCL 2.3 and Beyond"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ShardFilter.html",
"title": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ShardFilter.html"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetRecords.html",
"title": "GetRecords"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_SubscribeToShard.html",
"title": "SubscribeToShards"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ChildShard.html",
"title": "ChildShard"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client/blob/master/amazon-kinesis-client/src/main/java/software/amazon/kinesis/leases/LeaseManagementConfig.java#L201-L213",
"title": "https://github.com/awslabs/amazon-kinesis-client/blob/master/amazon-kinesis-client/src/main/java/software/amazon/kinesis/leases/LeaseManagementConfig.java#L201-L213"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#periodic-task",
"title": "PeriodicShardSyncManager"
}
],
"text": "During application's bootstraping, if the lease table is empty, KCL utilizes the ListShard API's filtering option (the ShardFilter optional request parameter) to retrieve and create leases only for a snapshot of shards open at the time specified by the ShardFilter parameter. The ShardFilter parameter enables you to filter out the response of the ListShards API. The only required property of the ShardFilter parameter is Type. KCL uses the Type filter property and the following of its valid values to identify and return a snapshot of open shards that might require new leases: AT_TRIM_HORIZON - the response includes all the shards that were open at TRIM_HORIZON. AT_LATEST - the response includes only the currently open shards of the data stream. AT_TIMESTAMP - the response includes all shards whose start timestamp is less than or equal to the given timestamp and end timestamp is greater than or equal to the given timestamp or still open.\n\nShardFilter is used when creating leases for an empty lease table to initialize leases for a snapshot of shards specified at RetrievalConfig#initialPositionInStreamExtended.\nFor more information about ShardFilter, see https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ShardFilter.html.\n\nInstead of all workers performing the lease/shard synchronization to keep the lease table up to date with the latest shards in the data stream, a single elected worker leader performs the lease/shard synchronization.\n\nKCL 2.3 uses the ChildShards return parameter of the GetRecords and the SubscribeToShard APIs to perform lease/shard synchronization that happens at SHARD_END for closed shards, allowing a KCL worker to only create leases for the child shards of the shard it finished processing. For shared throughout consumer applications, this optimization of the lease/shard synchronization uses the ChildShards parameter of the GetRecords API. For the dedicated throughput (enhanced fan-out) consumer applications, this optimization of the lease/shard synchronization uses the ChildShards parameter of the SubscribeToShard API. For more information, see GetRecords, SubscribeToShards, and ChildShard.\n\nWith the above changes, the behavior of KCL is moving from the model of all workers learning about all existing shards to the model of workers learning only about the children shards of the shards that each worker owns. Therefore, in addition to the synchronization that happens during consumer application bootstraping and reshard events, KCL now also performs additional periodic shard/lease scans in order to identify any potential holes in the lease table (in other words, to learn about all new shards) to ensure the complete hash range of the data stream is being processed and create leases for them if required. PeriodicShardSyncManager is the component that is responsible for running periodic lease/shard scans. \nFor more information about PeriodicShardSyncManager in KCL 2.3, see https://github.com/awslabs/amazon-kinesis-client/blob/master/amazon-kinesis-client/src/main/java/software/amazon/kinesis/leases/LeaseManagementConfig.java#L201-L213.\nIn KCL 2.3, new configuration options are available to configure PeriodicShardSyncManager in LeaseManagementConfig: Name\nDefault value\nDescription leasesRecoveryAuditorExecutionFrequencyMillis\n\n120000 (2 minutes)\n\nFrequency (in millis) of the auditor job to scan for partial leases in the lease table. If the auditor detects any hole in the leases for a stream, then it would trigger shard synchronization based on leasesRecoveryAuditorInconsistencyConfidenceThreshold. leasesRecoveryAuditorInconsistencyConfidenceThreshold\n\n3\n\nConfidence threshold for the periodic auditor job to determine if leases for a data stream in the lease table are inconsistent. If the auditor finds same set of inconsistencies consecutively for a data stream for this many times, then it would trigger a shard synchronization. New CloudWatch metrics are also now emitted to monitor the health of the PeriodicShardSyncManager. For more information, see PeriodicShardSyncManager.\n\nIncluding an optimization to HierarchicalShardSyncer to only create leases for one layer of shards.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable-sync-new-kcl2",
"main_header": "Synchronization in KCL 2.x, Starting with KCL 2.3 and Beyond",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync",
"text": "How a Lease Table Is Synchronized with the Shards in a KDS Data Stream"
},
"h4": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync-new-kcl1",
"text": "Synchronization in KCL 1.x, Starting with KCL 1.14 and Beyond"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ShardFilter.html",
"title": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ShardFilter.html"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetRecords.html",
"title": "GetRecords"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ChildShard.html",
"title": "ChildShard"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client/blob/v1.x/src/main/java/com/amazonaws/services/kinesis/clientlibrary/lib/worker/KinesisClientLibConfiguration.java#L987-L999",
"title": "https://github.com/awslabs/amazon-kinesis-client/blob/v1.x/src/main/java/com/amazonaws/services/kinesis/clientlibrary/lib/worker/KinesisClientLibConfiguration.java#L987-L999"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#periodic-task",
"title": "PeriodicShardSyncManager"
}
],
"text": "During application's bootstraping, if the lease table is empty, KCL utilizes the ListShard API's filtering option (the ShardFilter optional request parameter) to retrieve and create leases only for a snapshot of shards open at the time specified by the ShardFilter parameter. The ShardFilter parameter enables you to filter out the response of the ListShards API. The only required property of the ShardFilter parameter is Type. KCL uses the Type filter property and the following of its valid values to identify and return a snapshot of open shards that might require new leases: AT_TRIM_HORIZON - the response includes all the shards that were open at TRIM_HORIZON. AT_LATEST - the response includes only the currently open shards of the data stream. AT_TIMESTAMP - the response includes all shards whose start timestamp is less than or equal to the given timestamp and end timestamp is greater than or equal to the given timestamp or still open.\n\nShardFilter is used when creating leases for an empty lease table to initialize leases for a snapshot of shards specified at KinesisClientLibConfiguration#initialPositionInStreamExtended.\nFor more information about ShardFilter, see https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ShardFilter.html.\n\nInstead of all workers performing the lease/shard synchronization to keep the lease table up to date with the latest shards in the data stream, a single elected worker leader performs the lease/shard synchronization.\n\nKCL 1.14 uses the ChildShards return parameter of the GetRecords and the SubscribeToShard APIs to perform lease/shard synchronization that happens at SHARD_END for closed shards, allowing a KCL worker to only create leases for the child shards of the shard it finished processing. For more information, see GetRecords and ChildShard.\n\nWith the above changes, the behavior of KCL is moving from the model of all workers learning about all existing shards to the model of workers learning only about the children shards of the shards that each worker owns. Therefore, in addition to the synchronization that happens during consumer application bootstraping and reshard events, KCL now also performs additional periodic shard/lease scans in order to identify any potential holes in the lease table (in other words, to learn about all new shards) to ensure the complete hash range of the data stream is being processed and create leases for them if required. PeriodicShardSyncManager is the component that is responsible for running periodic lease/shard scans. \nWhen KinesisClientLibConfiguration#shardSyncStrategyType is set to ShardSyncStrategyType.SHARD_END, PeriodicShardSync leasesRecoveryAuditorInconsistencyConfidenceThreshold is used to determine the threshold for number of consecutive scans containing holes in the lease table after which to enforce a shard synchronization. When KinesisClientLibConfiguration#shardSyncStrategyType is set to ShardSyncStrategyType.PERIODIC, leasesRecoveryAuditorInconsistencyConfidenceThreshold is ignored.\nFor more information about PeriodicShardSyncManager in KCL 1.14, see https://github.com/awslabs/amazon-kinesis-client/blob/v1.x/src/main/java/com/amazonaws/services/kinesis/clientlibrary/lib/worker/KinesisClientLibConfiguration.java#L987-L999.\nIn KCL 1.14, new configuration option is available to configure PeriodicShardSyncManager in LeaseManagementConfig: Name\nDefault value\nDescription leasesRecoveryAuditorInconsistencyConfidenceThreshold\n\n3\n\nConfidence threshold for the periodic auditor job to determine if leases for a data stream in the lease table are inconsistent. If the auditor finds same set of inconsistencies consecutively for a data stream for this many times, then it would trigger a shard synchronization. New CloudWatch metrics are also now emitted to monitor the health of the PeriodicShardSyncManager. For more information, see PeriodicShardSyncManager.\n\nKCL 1.14 now also supports deferred lease cleanup. Leases are deleted asynchronously by LeaseCleanupManager upon reaching SHARD_END, when a shard has either expired past the data stream\u00e2\u0080\u0099s retention period or been closed as the result of a resharding operation.\nNew configuration options are available to configure LeaseCleanupManager. Name\nDefault value\nDescription leaseCleanupIntervalMillis\n\n1 minute\n\nInterval at which to run lease cleanup thread. completedLeaseCleanupIntervalMillis\n5 minutes\nInterval at which to check if a lease is completed or not. garbageLeaseCleanupIntervalMillis\n30 minutes\nInterval at which to check if a lease is garbage (i.e trimmed past the data stream's retention period) or not. Including an optimization to KinesisShardSyncer to only create leases for one layer of shards.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable-sync-new-kcl1",
"main_header": "Synchronization in KCL 1.x, Starting with KCL 1.14 and Beyond",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-multistream",
"text": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application"
},
"links": [],
"text": "ImportantMultistream processing is only supported in KCL 2.x for Java, starting with KCL 2.3 for Java and beyond. Multistream processing is NOT supported for any other languages in which KCL 2.x can be implemented.Multistream processing is NOT supported in any versions of KCL 1.x.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-multistream",
"main_header": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-multistream",
"text": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-multistream",
"main_header": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-multistream",
"text": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application"
},
"links": [],
"text": "Multistream processing is only supported in KCL 2.x for Java, starting with KCL 2.3 for Java and beyond. Multistream processing is NOT supported for any other languages in which KCL 2.x can be implemented.Multistream processing is NOT supported in any versions of KCL 1.x.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-multistream",
"main_header": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-multistream",
"text": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application"
},
"links": [],
"text": "Multistream processing is only supported in KCL 2.x for Java, starting with KCL 2.3 for Java and beyond.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-multistream",
"main_header": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-multistream",
"text": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application"
},
"links": [],
"text": "Multistream processing is NOT supported for any other languages in which KCL 2.x can be implemented.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-multistream",
"main_header": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-multistream",
"text": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application"
},
"links": [],
"text": "Multistream processing is NOT supported in any versions of KCL 1.x.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-multistream",
"main_header": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-multistream",
"text": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client/blob/0c5042dadf794fe988438436252a5a8fe70b6b0b/amazon-kinesis-client/src/main/java/software/amazon/kinesis/processor/MultiStreamTracker.java",
"title": "MultistreamTracker"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client/blob/0c5042dadf794fe988438436252a5a8fe70b6b0b/amazon-kinesis-client/src/main/java/software/amazon/kinesis/common/StreamConfig.java#L23",
"title": "StreamConfig"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client/blob/0c5042dadf794fe988438436252a5a8fe70b6b0b/amazon-kinesis-client/src/main/java/software/amazon/kinesis/common/StreamIdentifier.java#L29",
"title": "https://github.com/awslabs/amazon-kinesis-client/blob/0c5042dadf794fe988438436252a5a8fe70b6b0b/amazon-kinesis-client/src/main/java/software/amazon/kinesis/common/StreamIdentifier.java#L29"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client/blob/0c5042dadf794fe988438436252a5a8fe70b6b0b/amazon-kinesis-client/src/main/java/software/amazon/kinesis/processor/FormerStreamsLeasesDeletionStrategy.java",
"title": "https://github.com/awslabs/amazon-kinesis-client/blob/0c5042dadf794fe988438436252a5a8fe70b6b0b/amazon-kinesis-client/src/main/java/software/amazon/kinesis/processor/FormerStreamsLeasesDeletionStrategy.java"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client/blob/0c5042dadf794fe988438436252a5a8fe70b6b0b/amazon-kinesis-client/src/main/java/software/amazon/kinesis/common/ConfigsBuilder.java",
"title": "ConfigsBuilder"
}
],
"text": "MultistreamTracker interface\nTo build a consumer application that can process multiple streams at the same time, you must implement a new interface called MultistreamTracker. This interface includes the streamConfigList method that returns the list of data streams and their configurations to be processed by the KCL consumer application. Notice that the data streams that are being processed can be changed during the consumer application runtime. streamConfigList is called periodically by the KCL to learn about the changes in data streams to process.\nThe streamConfigList method populates the StreamConfig list. package software.amazon.kinesis.common;\n\nimport lombok.Data;\nimport lombok.experimental.Accessors;\n\n@Data\n@Accessors(fluent = true)\npublic class StreamConfig { private final StreamIdentifier streamIdentifier; private final InitialPositionInStreamExtended initialPositionInStreamExtended; private String consumerArn;\n} Note that the StreamIdentifier and InitialPositionInStreamExtended are required fields, while consumerArn is optional. You must provide the consumerArn only if you are using KCL 2.x to implement an enhanced fan-out consumer application.\nFor more information about StreamIdentifier, see https://github.com/awslabs/amazon-kinesis-client/blob/0c5042dadf794fe988438436252a5a8fe70b6b0b/amazon-kinesis-client/src/main/java/software/amazon/kinesis/common/StreamIdentifier.java#L29. You can create a multistream instance for the StreamIdentifier from the serialized stream identifier. The serialized stream identifier should be of the following format: account-id:StreamName:streamCreationTimestamp. * @param streamIdentifierSer * @return StreamIdentifier */ public static StreamIdentifier multiStreamInstance(String streamIdentifierSer) { if (PATTERN.matcher(streamIdentifierSer).matches()) { final String[] split = streamIdentifierSer.split(DELIMITER); return new StreamIdentifier(split[0], split[1], Long.parseLong(split[2])); } else { throw new IllegalArgumentException(\"Unable to deserialize StreamIdentifier from \" + streamIdentifierSer); } } MultistreamTracker also includes a strategy for deleting leases of old streams in the lease table (formerStreamsLeasesDeletionStrategy). Notice that the strategy CANNOT be changed during the consumer application runtime. For more information, see https://github.com/awslabs/amazon-kinesis-client/blob/0c5042dadf794fe988438436252a5a8fe70b6b0b/amazon-kinesis-client/src/main/java/software/amazon/kinesis/processor/FormerStreamsLeasesDeletionStrategy.java\n\nConfigsBuilder is a an application-wide class that you can use to specify all of the KCL 2.x configuration settings to be used when building your KCL consumer application. ConfigsBuilder class now has support for the MultistreamTracker interface. You can initialize ConfigsBuilder either with the name of the one data stream to consume records from: /** * Constructor to initialize ConfigsBuilder with StreamName * @param streamName * @param applicationName * @param kinesisClient * @param dynamoDBClient * @param cloudWatchClient * @param workerIdentifier * @param shardRecordProcessorFactory */ public ConfigsBuilder(@NonNull String streamName, @NonNull String applicationName, @NonNull KinesisAsyncClient kinesisClient, @NonNull DynamoDbAsyncClient dynamoDBClient, @NonNull CloudWatchAsyncClient cloudWatchClient, @NonNull String workerIdentifier, @NonNull ShardRecordProcessorFactory shardRecordProcessorFactory) { this.appStreamTracker = Either.right(streamName); this.applicationName = applicationName; this.kinesisClient = kinesisClient; this.dynamoDBClient = dynamoDBClient; this.cloudWatchClient = cloudWatchClient; this.workerIdentifier = workerIdentifier; this.shardRecordProcessorFactory = shardRecordProcessorFactory; }\n\nOr you can initialize ConfigsBuilder with MultiStreamTracker if you want to implement a KCL consumer application that processes multiple streams at the same time.\n\n* Constructor to initialize ConfigsBuilder with MultiStreamTracker * @param multiStreamTracker * @param applicationName * @param kinesisClient * @param dynamoDBClient * @param cloudWatchClient * @param workerIdentifier * @param shardRecordProcessorFactory */ public ConfigsBuilder(@NonNull MultiStreamTracker multiStreamTracker, @NonNull String applicationName, @NonNull KinesisAsyncClient kinesisClient, @NonNull DynamoDbAsyncClient dynamoDBClient, @NonNull CloudWatchAsyncClient cloudWatchClient, @NonNull String workerIdentifier, @NonNull ShardRecordProcessorFactory shardRecordProcessorFactory) { this.appStreamTracker = Either.left(multiStreamTracker); this.applicationName = applicationName; this.kinesisClient = kinesisClient; this.dynamoDBClient = dynamoDBClient; this.cloudWatchClient = cloudWatchClient; this.workerIdentifier = workerIdentifier; this.shardRecordProcessorFactory = shardRecordProcessorFactory; } With multistream support implemented for your KCL consumer application, each row of the application's lease table now contains the shard ID and the stream name of the multiple data streams that this application processes. When multistream support for your KCL consumer application is implemented, the leaseKey takes the following structure: account-id:StreamName:streamCreationTimestamp:ShardId. For example, 111111111:multiStreamTest-1:12345:shardId-000000000336.\nImportantWhen your existing KCL consumer application is configured to process only one data stream, the leaseKey (which is the hash key for the lease table) is the shard ID. If you reconfigure this existing KCL consumer application to process multiple data streams, it breaks your lease table, because with multistream support, the leaseKey structure must be as follows: account-id:StreamName:StreamCreationTimestamp:ShardId.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-multistream",
"main_header": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-glue-schema-registry",
"text": "Using the Kinesis Client Library with the AWS Glue Schema Registry"
},
"links": [],
"text": "ImportantCurrently, Kinesis Data Streams and AWS Glue schema registry integration is only supported for the Kinesis data streams that use KCL 2.3 consumers implemented in Java. Multi-language support is not provided. KCL 1.0 consumers are not supported. KCL 2.x consumers prior to KCL 2.3 are not supported.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-glue-schema-registry",
"main_header": "Using the Kinesis Client Library with the AWS Glue Schema Registry",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-glue-schema-registry",
"text": "Using the Kinesis Client Library with the AWS Glue Schema Registry"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-glue-schema-registry",
"main_header": "Using the Kinesis Client Library with the AWS Glue Schema Registry",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-glue-schema-registry",
"text": "Using the Kinesis Client Library with the AWS Glue Schema Registry"
},
"links": [],
"text": "Currently, Kinesis Data Streams and AWS Glue schema registry integration is only supported for the Kinesis data streams that use KCL 2.3 consumers implemented in Java. Multi-language support is not provided. KCL 1.0 consumers are not supported. KCL 2.x consumers prior to KCL 2.3 are not supported.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-glue-schema-registry",
"main_header": "Using the Kinesis Client Library with the AWS Glue Schema Registry",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-glue-schema-registry",
"text": "Using the Kinesis Client Library with the AWS Glue Schema Registry"
},
"links": [],
"text": "Currently, Kinesis Data Streams and AWS Glue schema registry integration is only supported for the Kinesis data streams that use KCL 2.3 consumers implemented in Java. Multi-language support is not provided. KCL 1.0 consumers are not supported. KCL 2.x consumers prior to KCL 2.3 are not supported.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-glue-schema-registry",
"main_header": "Using the Kinesis Client Library with the AWS Glue Schema Registry",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-consumers",
"text": "Developing Custom Consumers with Shared Throughput"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html#shared-throughput-consumers",
"main_header": "Developing Custom Consumers with Shared Throughput",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#custom-kcl-consumers",
"text": "Developing Custom Consumers with Shared Throughput Using KCL"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html#custom-kcl-consumers",
"main_header": "Developing Custom Consumers with Shared Throughput Using KCL",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-kcl",
"text": "Developing KCL 1.x Consumers"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html#developing-consumers-with-kcl",
"main_header": "Developing KCL 1.x Consumers",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-app-java",
"main_header": "Developing a Kinesis Client Library Consumer in Java",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-interface-java",
"title": "Implement the IRecordProcessor Methods"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-factory-java",
"title": "Implement a Class Factory for the IRecordProcessor Interface"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-worker",
"title": "Create a Worker"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-initialization-java",
"title": "Modify the Configuration Properties"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-v2-migration",
"title": "Migrating to Version 2 of the Record Processor Interface"
}
],
"text": "TasksImplement the IRecordProcessor MethodsImplement a Class Factory for the IRecordProcessor InterfaceCreate a WorkerModify the Configuration PropertiesMigrating to Version 2 of the Record Processor Interface",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-app-java",
"main_header": "Developing a Kinesis Client Library Consumer in Java",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"links": [],
"text": "Tasks",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-app-java",
"main_header": "Developing a Kinesis Client Library Consumer in Java",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"title": "Original Interface (Version 1)"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-v2",
"title": "Updated Interface (Version 2)"
}
],
"text": "IRecordProcessor VersionsOriginal Interface (Version 1)Updated Interface (Version 2)",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-interface-java",
"main_header": "Implement the IRecordProcessor Methods",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"links": [],
"text": "IRecordProcessor Versions",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-interface-java",
"main_header": "Implement the IRecordProcessor Methods",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-v2",
"text": "Updated Interface (Version 2)"
},
"links": [],
"text": "starting sequence number\n\nIn the InitializationInput object passed to the initialize() operation, the starting sequence number from which records would be provided to the record processor instance. This is the sequence number that was last checkpointed by the record processor instance previously processing the same shard. This is provided in case your application needs this information. pending checkpoint sequence number\n\nIn the InitializationInput object passed to the initialize() operation, the pending checkpoint sequence number (if any) that could not be committed before the previous record processor instance stopped.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-v2",
"main_header": "Updated Interface (Version 2)",
"images": [],
"container_type": "div",
"children_tags": [
"dl"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-java",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#configuration-property-application-name",
"text": "Application Name"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable",
"title": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
}
],
"text": "All workers associated with this application name are assumed to be working together on the same stream. These workers may be distributed on multiple instances. If you run an additional instance of the same application code, but with a different application name, the KCL treats the second instance as an entirely separate application that is also operating on the same stream.\n\nThe KCL creates a DynamoDB table with the application name and uses the table to maintain state information (such as checkpoints and worker-shard mapping) for the application. Each application has its own DynamoDB table. For more information, see Using a Lease Table to Track the Shards Processed by the KCL Consumer Application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#configuration-property-application-name",
"main_header": "Application Name",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kcl-java-v2-migration",
"text": "Migrating to Version 2 of the Record Processor Interface"
},
"links": [],
"text": "Change your record processor class to import the version 2 record processor interface:\nimport com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IRecordProcessor;\n\nChange the references to inputs to use get methods on the container objects. For example, in the shutdown() operation, change \"checkpointer\" to \"shutdownInput.getCheckpointer()\".\n\nChange your record processor factory class to import the version 2 record processor factory interface:\nimport com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IRecordProcessorFactory;\n\nChange the construction of the worker to use Worker.Builder. For example:\nfinal Worker worker = new Worker.Builder() .recordProcessorFactory(recordProcessorFactory) .config(config) .build();",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-v2-migration",
"main_header": "Migrating to Version 2 of the Record Processor Interface",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-app-nodejs",
"main_header": "Developing a Kinesis Client Library Consumer in Node.js",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client-nodejs/tree/master/samples/basic_sample",
"title": "basic-sample"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client-nodejs/tree/master/samples/click_stream_sample",
"title": "click-stream-sample"
}
],
"text": "Sample Code Downloads\nThere are two code samples available for KCL in Node.js:\n\nbasic-sample\nUsed in the following sections to illustrate the fundamentals of building a KCL consumer application in Node.js.\n\nclick-stream-sample\n Slightly more advanced and uses a real-world scenario, after you have familiarized yourself with the basic sample code. This sample is not discussed here but has a README file with more information.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-app-nodejs",
"main_header": "Developing a Kinesis Client Library Consumer in Node.js",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"links": [],
"text": "Sample Code Downloads",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-app-nodejs",
"main_header": "Developing a Kinesis Client Library Consumer in Node.js",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"links": [],
"text": "There are two code samples available for KCL in Node.js:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-app-nodejs",
"main_header": "Developing a Kinesis Client Library Consumer in Node.js",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"title": "Implement the Record Processor"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-initialization-nodejs",
"title": "Modify the Configuration Properties"
}
],
"text": "TasksImplement the Record ProcessorModify the Configuration Properties",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-app-nodejs",
"main_header": "Developing a Kinesis Client Library Consumer in Node.js",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"links": [],
"text": "Tasks",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-app-nodejs",
"main_header": "Developing a Kinesis Client Library Consumer in Node.js",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-nodejs",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-application-name-nodejs",
"text": "Application Name"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable",
"title": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
}
],
"text": "All workers associated with this application name are assumed to be working together on the same stream. These workers may be distributed on multiple instances. If you run an additional instance of the same application code, but with a different application name, the KCL treats the second instance as an entirely separate application that is also operating on the same stream.\n\nThe KCL creates a DynamoDB table with the application name and uses the table to maintain state information (such as checkpoints and worker-shard mapping) for the application. Each application has its own DynamoDB table. For more information, see Using a Lease Table to Track the Shards Processed by the KCL Consumer Application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-application-name-nodejs",
"main_header": "Application Name",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-app-dotnet",
"main_header": "Developing a Kinesis Client Library Consumer in .NET",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"title": "Implement the IRecordProcessor Class Methods"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-initialization-dotnet",
"title": "Modify the Configuration Properties"
}
],
"text": "TasksImplement the IRecordProcessor Class MethodsModify the Configuration Properties",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-app-dotnet",
"main_header": "Developing a Kinesis Client Library Consumer in .NET",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"links": [],
"text": "Tasks",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-app-dotnet",
"main_header": "Developing a Kinesis Client Library Consumer in .NET",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-dotnet",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#modify-kinesis-record-processor-application-name",
"text": "Application Name"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable",
"title": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
}
],
"text": "All workers associated with this application name are assumed to be working together on the same stream. These workers may be distributed on multiple instances. If you run an additional instance of the same application code, but with a different application name, the KCL treats the second instance as an entirely separate application that is also operating on the same stream.\n\nThe KCL creates a DynamoDB table with the application name and uses the table to maintain state information (such as checkpoints and worker-shard mapping) for the application. Each application has its own DynamoDB table. For more information, see Using a Lease Table to Track the Shards Processed by the KCL Consumer Application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#modify-kinesis-record-processor-application-name",
"main_header": "Application Name",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-app-py",
"main_header": "Developing a Kinesis Client Library Consumer in Python",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"title": "Implement the RecordProcessor Class Methods"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-initialization-py",
"title": "Modify the Configuration Properties"
}
],
"text": "TasksImplement the RecordProcessor Class MethodsModify the Configuration Properties",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-app-py",
"main_header": "Developing a Kinesis Client Library Consumer in Python",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"links": [],
"text": "Tasks",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-app-py",
"main_header": "Developing a Kinesis Client Library Consumer in Python",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-py",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-application-name-py",
"text": "Application Name"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable",
"title": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
}
],
"text": "All workers that are associated with this application name are assumed to be working together on the same stream. These workers can be distributed on multiple instances. If you run an additional instance of the same application code, but with a different application name, the KCL treats the second instance as an entirely separate application that is also operating on the same stream.\n\nThe KCL creates a DynamoDB table with the application name and uses the table to maintain state information (such as checkpoints and worker-shard mapping) for the application. Each application has its own DynamoDB table. For more information, see Using a Lease Table to Track the Shards Processed by the KCL Consumer Application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-application-name-py",
"main_header": "Application Name",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-ruby",
"text": "Developing a Kinesis Client Library Consumer in Ruby"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-ruby.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-ruby.html#kinesis-record-processor-implementation-app-ruby",
"main_header": "Developing a Kinesis Client Library Consumer in Ruby",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-kcl-v2",
"text": "Developing KCL 2.x Consumers"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html#developing-consumers-with-kcl-v2",
"main_header": "Developing KCL 2.x Consumers",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-java-example",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-java-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-java-example.html#kcl2-standard-consumer-java-example",
"main_header": "Developing a Kinesis Client Library Consumer in Java",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-python-example",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kcl2-standard-consumer-python-example",
"main_header": "Developing a Kinesis Client Library Consumer in Python",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-python-example",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kinesis-record-processor-implementation-interface-py",
"title": "Implement the RecordProcessor Class Methods"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kinesis-record-processor-initialization-py",
"title": "Modify the Configuration Properties"
}
],
"text": "TasksImplement the RecordProcessor Class MethodsModify the Configuration Properties",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kcl2-standard-consumer-python-example",
"main_header": "Developing a Kinesis Client Library Consumer in Python",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-python-example",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"links": [],
"text": "Tasks",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kcl2-standard-consumer-python-example",
"main_header": "Developing a Kinesis Client Library Consumer in Python",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-python-example",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-py",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-application-name-py",
"text": "Application Name"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable",
"title": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
}
],
"text": "All workers that are associated with this application name are assumed to be working together on the same stream. These workers can be distributed across multiple instances. If you run an additional instance of the same application code, but with a different application name, the KCL treats the second instance as an entirely separate application that is also operating on the same stream.\n\nThe KCL creates a DynamoDB table with the application name and uses the table to maintain state information (such as checkpoints and worker-shard mapping) for the application. Each application has its own DynamoDB table. For more information, see Using a Lease Table to Track the Shards Processed by the KCL Consumer Application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kinesis-record-processor-application-name-py",
"main_header": "Application Name",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#developing-consumers-with-sdk",
"main_header": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
}
],
"text": "ImportantThe recommended method for developing custom Kinesis Data Streams consumers with shared throughout is to use the Kinesis Client Library (KCL). KCL helps you consume and process data from a Kinesis data stream by taking care of many of the complex tasks associated with distributed computing. For more information, see Developing Custom Consumers with Shared Throughput Using KCL.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#developing-consumers-with-sdk",
"main_header": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#developing-consumers-with-sdk",
"main_header": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
}
],
"text": "The recommended method for developing custom Kinesis Data Streams consumers with shared throughout is to use the Kinesis Client Library (KCL). KCL helps you consume and process data from a Kinesis data stream by taking care of many of the complex tasks associated with distributed computing. For more information, see Developing Custom Consumers with Shared Throughput Using KCL.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#developing-consumers-with-sdk",
"main_header": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
}
],
"text": "The recommended method for developing custom Kinesis Data Streams consumers with shared throughout is to use the Kinesis Client Library (KCL). KCL helps you consume and process data from a Kinesis data stream by taking care of many of the complex tasks associated with distributed computing. For more information, see Developing Custom Consumers with Shared Throughput Using KCL.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#developing-consumers-with-sdk",
"main_header": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data",
"title": "Getting Data from a Stream"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-shard-iterators",
"title": "Using Shard Iterators"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-getrecords",
"title": "Using GetRecords"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-reshard",
"title": "Adapting to a Reshard"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-glue-schema-registry",
"title": "Interacting with Data Using the AWS Glue Schema Registry"
}
],
"text": "TopicsGetting Data from a StreamUsing Shard IteratorsUsing GetRecordsAdapting to a ReshardInteracting with Data Using the AWS Glue Schema Registry",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#developing-consumers-with-sdk",
"main_header": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#developing-consumers-with-sdk",
"main_header": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data",
"text": "Getting Data from a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
}
],
"text": "ImportantWe recommend that you use the record processor support provided by KCL to retrieve records from your data streams. This is the push model, where you implement the code that processes the data. The KCL retrieves data records from the data stream and delivers them to your application code. In addition, the KCL provides failover, recovery, and load balancing functionality. For more information, see Developing Custom Consumers with Shared Throughput Using KCL.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data",
"main_header": "Getting Data from a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data",
"text": "Getting Data from a Stream"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data",
"main_header": "Getting Data from a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data",
"text": "Getting Data from a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
}
],
"text": "We recommend that you use the record processor support provided by KCL to retrieve records from your data streams. This is the push model, where you implement the code that processes the data. The KCL retrieves data records from the data stream and delivers them to your application code. In addition, the KCL provides failover, recovery, and load balancing functionality. For more information, see Developing Custom Consumers with Shared Throughput Using KCL.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data",
"main_header": "Getting Data from a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data",
"text": "Getting Data from a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
}
],
"text": "We recommend that you use the record processor support provided by KCL to retrieve records from your data streams. This is the push model, where you implement the code that processes the data. The KCL retrieves data records from the data stream and delivers them to your application code. In addition, the KCL provides failover, recovery, and load balancing functionality. For more information, see Developing Custom Consumers with Shared Throughput Using KCL.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data",
"main_header": "Getting Data from a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data",
"text": "Getting Data from a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"title": "Changing the Data Retention Period"
}
],
"text": "ImportantKinesis Data Streams supports changes to the data record retention period of your data stream. For more information, see Changing the Data Retention Period.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data",
"main_header": "Getting Data from a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data",
"text": "Getting Data from a Stream"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data",
"main_header": "Getting Data from a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data",
"text": "Getting Data from a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"title": "Changing the Data Retention Period"
}
],
"text": "Kinesis Data Streams supports changes to the data record retention period of your data stream. For more information, see Changing the Data Retention Period.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data",
"main_header": "Getting Data from a Stream",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data",
"text": "Getting Data from a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"title": "Changing the Data Retention Period"
}
],
"text": "Kinesis Data Streams supports changes to the data record retention period of your data stream. For more information, see Changing the Data Retention Period.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data",
"main_header": "Getting Data from a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-shard-iterators",
"text": "Using Shard Iterators"
},
"links": [],
"text": "AT_SEQUENCE_NUMBER\n\nAFTER_SEQUENCE_NUMBER\n\nAT_TIMESTAMP\n\nTRIM_HORIZON\n\nLATEST",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-shard-iterators",
"main_header": "Using Shard Iterators",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#enhanced-consumers",
"text": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html#enhanced-consumers",
"main_header": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#enhanced-consumers",
"text": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
"links": [],
"text": "ImportantYou can register up to twenty consumers per stream to use enhanced fan-out.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html#enhanced-consumers",
"main_header": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#enhanced-consumers",
"text": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html#enhanced-consumers",
"main_header": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#enhanced-consumers",
"text": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
"links": [],
"text": "You can register up to twenty consumers per stream to use enhanced fan-out.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html#enhanced-consumers",
"main_header": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#enhanced-consumers",
"text": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
"links": [],
"text": "You can register up to twenty consumers per stream to use enhanced fan-out.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html#enhanced-consumers",
"main_header": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#enhanced-consumers",
"text": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html#enhanced-consumers",
"main_header": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)",
"images": [
{
"src": "https://docs.aws.amazon.com/streams/latest/dev/images/enhanced_fan-out.png",
"alt": "\n            Workflow diagram showing enhanced fan-out architecture with two shards and two\n                consumers. Each of the two consumers is using enhanced fan-out to receive data from\n                both shards of the stream.\n        "
}
],
"container_type": "div",
"children_tags": [
"img"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#enhanced-consumers",
"text": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
"links": [],
"text": "A stream with two shards.\n\nTwo consumers that are using enhanced fan-out to receive data from the stream: Consumer X and Consumer Y. Each of the two consumers is subscribed to all of the shards and all of the records of the stream. If you use version 2.0 or later of the KCL to build a consumer, the KCL automatically subscribes that consumer to all the shards of the stream. On the other hand, if you use the API to build a consumer, you can subscribe to individual shards. Arrows representing the enhanced fan-out pipes that the consumers use to receive data from the stream. An enhanced fan-out pipe provides up to 2 MB/sec of data per shard, independently of any other pipes or of the total number of consumers.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html#enhanced-consumers",
"main_header": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-kcl",
"text": "Developing Enhanced Fan-Out Consumers with KCL 2.x"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl.html#building-enhanced-consumers-kcl",
"main_header": "Developing Enhanced Fan-Out Consumers with KCL 2.x",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-kcl-java",
"text": "Developing Enhanced Fan-Out Consumers Using KCL 2.x in Java"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl-java.html#building-enhanced-consumers-kcl-java",
"main_header": "Developing Enhanced Fan-Out Consumers Using KCL 2.x in Java",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl.html",
"title": "Developing Enhanced Fan-Out Consumers with KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-kcl-java",
"text": "Developing Enhanced Fan-Out Consumers Using KCL 2.x in Java"
},
"links": [],
"text": "ImportantThe Amazon Kinesis Client might see significantly increased latency, unless you configure KinesisAsyncClient to have a maxConcurrency high enough to allow all leases plus additional usages of KinesisAsyncClient.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl-java.html#building-enhanced-consumers-kcl-java",
"main_header": "Developing Enhanced Fan-Out Consumers Using KCL 2.x in Java",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl.html",
"title": "Developing Enhanced Fan-Out Consumers with KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-kcl-java",
"text": "Developing Enhanced Fan-Out Consumers Using KCL 2.x in Java"
},
"links": [],
"text": "Important",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl-java.html#building-enhanced-consumers-kcl-java",
"main_header": "Developing Enhanced Fan-Out Consumers Using KCL 2.x in Java",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl.html",
"title": "Developing Enhanced Fan-Out Consumers with KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-kcl-java",
"text": "Developing Enhanced Fan-Out Consumers Using KCL 2.x in Java"
},
"links": [],
"text": "The Amazon Kinesis Client might see significantly increased latency, unless you configure KinesisAsyncClient to have a maxConcurrency high enough to allow all leases plus additional usages of KinesisAsyncClient.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl-java.html#building-enhanced-consumers-kcl-java",
"main_header": "Developing Enhanced Fan-Out Consumers Using KCL 2.x in Java",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl.html",
"title": "Developing Enhanced Fan-Out Consumers with KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-kcl-java",
"text": "Developing Enhanced Fan-Out Consumers Using KCL 2.x in Java"
},
"links": [],
"text": "The Amazon Kinesis Client might see significantly increased latency, unless you configure KinesisAsyncClient to have a maxConcurrency high enough to allow all leases plus additional usages of KinesisAsyncClient.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl-java.html#building-enhanced-consumers-kcl-java",
"main_header": "Developing Enhanced Fan-Out Consumers Using KCL 2.x in Java",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl.html",
"title": "Developing Enhanced Fan-Out Consumers with KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-api",
"text": "Developing Enhanced Fan-Out Consumers with the Kinesis Data Streams API"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-api.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-api.html#building-enhanced-consumers-api",
"main_header": "Developing Enhanced Fan-Out Consumers with the Kinesis Data Streams API",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-api",
"text": "Developing Enhanced Fan-Out Consumers with the Kinesis Data Streams API"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_RegisterStreamConsumer.html",
"title": "RegisterStreamConsumer"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_SubscribeToShard.html",
"title": "SubscribeToShard"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_SubscribeToShardEvent.html",
"title": "SubscribeToShardEvent"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_SubscribeToShard.html",
"title": "SubscribeToShard"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_SubscribeToShard.html",
"title": "SubscribeToShard"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DeregisterStreamConsumer.html",
"title": "DeregisterStreamConsumer"
}
],
"text": "To register a consumer with enhanced fan-out using the Kinesis Data Streams API\nCall RegisterStreamConsumer to register your application as a consumer that uses enhanced fan-out. Kinesis Data Streams generates an Amazon Resource Name (ARN) for the consumer and returns it in the response.\n\nTo start listening to a specific shard, pass the consumer ARN in a call to SubscribeToShard. Kinesis Data Streams then starts pushing the records from that shard to you, in the form of events of type SubscribeToShardEvent over an HTTP/2 connection. The connection remains open for up to 5 minutes. Call SubscribeToShard again if you want to continue receiving records from the shard after the future that is returned by the call to SubscribeToShard completes normally or exceptionally.\nNoteSubscribeToShard API also returns the list of the child shards of the current shard when the end of the current shard is reached. To deregister a consumer that is using enhanced fan-out, call DeregisterStreamConsumer.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-api.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-api.html#building-enhanced-consumers-api",
"main_header": "Developing Enhanced Fan-Out Consumers with the Kinesis Data Streams API",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-api",
"text": "Developing Enhanced Fan-Out Consumers with the Kinesis Data Streams API"
},
"links": [],
"text": "To register a consumer with enhanced fan-out using the Kinesis Data Streams API",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-api.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-api.html#building-enhanced-consumers-api",
"main_header": "Developing Enhanced Fan-Out Consumers with the Kinesis Data Streams API",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-glue-schema-registry",
"text": "Interacting with Data Using the AWS Glue Schema Registry"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-glue-schema-registry.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-glue-schema-registry.html#building-enhanced-consumers-glue-schema-registry",
"main_header": "Interacting with Data Using the AWS Glue Schema Registry",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#building-enhanced-consumers-console",
"text": "Managing Enhanced Fan-Out Consumers with the AWS Management Console"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-console.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-console.html#building-enhanced-consumers-console",
"main_header": "Managing Enhanced Fan-Out Consumers with the AWS Management Console",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-console",
"text": "Managing Enhanced Fan-Out Consumers with the AWS Management Console"
},
"links": [
{
"url": "https://console.aws.amazon.com/kinesis",
"title": "https://console.aws.amazon.com/kinesis"
}
],
"text": "To view consumers that are registered to use enhanced fan-out, their status, creation date, and metrics on the consoleSign in to the AWS Management Console and open the Kinesis console at https://console.aws.amazon.com/kinesis.\nChoose Data Streams in the navigation pane.\n\nChoose a Kinesis data stream to view its details.\n\nOn the details page for the stream, choose the Enhanced fan-out tab.\n\nChoose a consumer to see its name, status, and date of registration.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-console.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-console.html#building-enhanced-consumers-console",
"main_header": "Managing Enhanced Fan-Out Consumers with the AWS Management Console",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-console",
"text": "Managing Enhanced Fan-Out Consumers with the AWS Management Console"
},
"links": [],
"text": "To view consumers that are registered to use enhanced fan-out, their status, creation date, and metrics on the console",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-console.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-console.html#building-enhanced-consumers-console",
"main_header": "Managing Enhanced Fan-Out Consumers with the AWS Management Console",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-console",
"text": "Managing Enhanced Fan-Out Consumers with the AWS Management Console"
},
"links": [
{
"url": "https://console.aws.amazon.com/kinesis",
"title": "https://console.aws.amazon.com/kinesis"
}
],
"text": "To deregister a consumerOpen the Kinesis console at https://console.aws.amazon.com/kinesis.\nChoose Data Streams in the navigation pane.\n\nChoose a Kinesis data stream to view its details.\n\nOn the details page for the stream, choose the Enhanced fan-out tab.\n\nSelect the check box to the left of the name of every consumer that you want to deregister.\n\nChoose Deregister consumer.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-console.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-console.html#building-enhanced-consumers-console",
"main_header": "Managing Enhanced Fan-Out Consumers with the AWS Management Console",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-console",
"text": "Managing Enhanced Fan-Out Consumers with the AWS Management Console"
},
"links": [],
"text": "To deregister a consumer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-console.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-console.html#building-enhanced-consumers-console",
"main_header": "Managing Enhanced Fan-Out Consumers with the AWS Management Console",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#kcl-migration",
"main_header": "Migrating Consumers from KCL 1.x to KCL 2.x",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"links": [],
"text": "KCL Interface Changes\n\nKCL 1.x Interface\nKCL 2.0 Interface com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IRecordProcessor\nsoftware.amazon.kinesis.processor.ShardRecordProcessor com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IRecordProcessorFactory\nsoftware.amazon.kinesis.processor.ShardRecordProcessorFactory com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IShutdownNotificationAware\nFolded into software.amazon.kinesis.processor.ShardRecordProcessor",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#kcl-migration",
"main_header": "Migrating Consumers from KCL 1.x to KCL 2.x",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"links": [],
"text": "KCL Interface Changes\n\nKCL 1.x Interface\nKCL 2.0 Interface com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IRecordProcessor\nsoftware.amazon.kinesis.processor.ShardRecordProcessor com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IRecordProcessorFactory\nsoftware.amazon.kinesis.processor.ShardRecordProcessorFactory com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IShutdownNotificationAware\nFolded into software.amazon.kinesis.processor.ShardRecordProcessor",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#kcl-migration",
"main_header": "Migrating Consumers from KCL 1.x to KCL 2.x",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#recrod-processor-migration",
"title": "Migrating the Record Processor"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#recrod-processor-factory-migration",
"title": "Migrating the Record Processor Factory"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#worker-migration",
"title": "Migrating the Worker"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#client-configuration",
"title": "Configuring the Amazon Kinesis Client"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#idle-time-removal",
"title": "Idle Time Removal"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#client-configuration-removals",
"title": "Client Configuration Removals"
}
],
"text": "TopicsMigrating the Record ProcessorMigrating the Record Processor FactoryMigrating the WorkerConfiguring the Amazon Kinesis ClientIdle Time RemovalClient Configuration Removals",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#kcl-migration",
"main_header": "Migrating Consumers from KCL 1.x to KCL 2.x",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#kcl-migration",
"main_header": "Migrating Consumers from KCL 1.x to KCL 2.x",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#recrod-processor-migration",
"text": "Migrating the Record Processor"
},
"links": [],
"text": "To migrate the record processor class\nChange the interfaces from com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IRecordProcessor and com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IShutdownNotificationAware to software.amazon.kinesis.processor.ShardRecordProcessor, as follows:\n// import com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IRecordProcessor;\n// import com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IShutdownNotificationAware;\nimport software.amazon.kinesis.processor.ShardRecordProcessor;\n\n// public class TestRecordProcessor implements IRecordProcessor, IShutdownNotificationAware {\npublic class TestRecordProcessor implements ShardRecordProcessor {\n\nUpdate the import statements for the initialize and processRecords methods.\n// import com.amazonaws.services.kinesis.clientlibrary.types.InitializationInput;\nimport software.amazon.kinesis.lifecycle.events.InitializationInput;\n\n//import com.amazonaws.services.kinesis.clientlibrary.types.ProcessRecordsInput;\nimport software.amazon.kinesis.lifecycle.events.ProcessRecordsInput;\n\nReplace the shutdown method with the following new methods: leaseLost, shardEnded, and shutdownRequested.\n// @Override\n// public void shutdownRequested(IRecordProcessorCheckpointer checkpointer) {\n// //\n// // This is moved to shardEnded(...)\n// //\n// try {\n// checkpointer.checkpoint();\n// } catch (ShutdownException | InvalidStateException e) {\n// //\n// // Swallow exception\n// //\n// e.printStackTrace();\n// }\n// } @Override public void leaseLost(LeaseLostInput leaseLostInput) { } @Override public void shardEnded(ShardEndedInput shardEndedInput) { try { shardEndedInput.checkpointer().checkpoint(); } catch (ShutdownException | InvalidStateException e) { // // Swallow the exception // e.printStackTrace(); } }\n\n// @Override\n// public void shutdownRequested(IRecordProcessorCheckpointer checkpointer) {\n// //\n// // This is moved to shutdownRequested(ShutdownReauestedInput)\n// //\n// try {\n// checkpointer.checkpoint();\n// } catch (ShutdownException | InvalidStateException e) {\n// //\n// // Swallow exception\n// //\n// e.printStackTrace();\n// }\n// } @Override public void shutdownRequested(ShutdownRequestedInput shutdownRequestedInput) { try { shutdownRequestedInput.checkpointer().checkpoint(); } catch (ShutdownException | InvalidStateException e) { // // Swallow the exception // e.printStackTrace(); } }",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#recrod-processor-migration",
"main_header": "Migrating the Record Processor",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#recrod-processor-migration",
"text": "Migrating the Record Processor"
},
"links": [],
"text": "To migrate the record processor class",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#recrod-processor-migration",
"main_header": "Migrating the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#recrod-processor-factory-migration",
"text": "Migrating the Record Processor Factory"
},
"links": [],
"text": "To migrate the record processor factory\nChange the implemented interface from com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IRecordProcessorFactory to software.amazon.kinesis.processor.ShardRecordProcessorFactory, as follows.\n// import com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IRecordProcessor;\nimport software.amazon.kinesis.processor.ShardRecordProcessor;\n\n// import com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.IRecordProcessorFactory;\nimport software.amazon.kinesis.processor.ShardRecordProcessorFactory;\n\n// public class TestRecordProcessorFactory implements IRecordProcessorFactory {\npublic class TestRecordProcessorFactory implements ShardRecordProcessorFactory {\n\nChange the return signature for createProcessor.\n// public IRecordProcessor createProcessor() {\npublic ShardRecordProcessor shardRecordProcessor() {",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#recrod-processor-factory-migration",
"main_header": "Migrating the Record Processor Factory",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#recrod-processor-factory-migration",
"text": "Migrating the Record Processor Factory"
},
"links": [],
"text": "To migrate the record processor factory",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#recrod-processor-factory-migration",
"main_header": "Migrating the Record Processor Factory",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#worker-migration",
"text": "Migrating the Worker"
},
"links": [],
"text": "To migrate the worker\nChange the import statement for the Worker class to the import statements for the Scheduler and ConfigsBuilder classes.\n// import com.amazonaws.services.kinesis.clientlibrary.lib.worker.Worker;\nimport software.amazon.kinesis.coordinator.Scheduler;\nimport software.amazon.kinesis.common.ConfigsBuilder;\n\nCreate the ConfigsBuilder and a Scheduler as shown in the following example.\nIt is recommended that you use KinesisClientUtil to create KinesisAsyncClient and to configure maxConcurrency in KinesisAsyncClient.\nImportantThe Amazon Kinesis Client might see significantly increased latency, unless you configure KinesisAsyncClient to have a maxConcurrency high enough to allow all leases plus additional usages of KinesisAsyncClient.\n\nimport java.util.UUID;\n\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\nimport software.amazon.awssdk.services.cloudwatch.CloudWatchAsyncClient;\nimport software.amazon.awssdk.services.kinesis.KinesisAsyncClient;\nimport software.amazon.kinesis.common.ConfigsBuilder;\nimport software.amazon.kinesis.common.KinesisClientUtil;\nimport software.amazon.kinesis.coordinator.Scheduler;\n\n...\n\nRegion region = Region.AP_NORTHEAST_2;\nKinesisAsyncClient kinesisClient = KinesisClientUtil.createKinesisAsyncClient(KinesisAsyncClient.builder().region(region));\nDynamoDbAsyncClient dynamoClient = DynamoDbAsyncClient.builder().region(region).build();\nCloudWatchAsyncClient cloudWatchClient = CloudWatchAsyncClient.builder().region(region).build();\n\nConfigsBuilder configsBuilder = new ConfigsBuilder(streamName, applicationName, kinesisClient, dynamoClient, cloudWatchClient, UUID.randomUUID().toString(), new SampleRecordProcessorFactory());\n\nScheduler scheduler = new Scheduler( configsBuilder.checkpointConfig(), configsBuilder.coordinatorConfig(), configsBuilder.leaseManagementConfig(), configsBuilder.lifecycleConfig(), configsBuilder.metricsConfig(), configsBuilder.processorConfig(), configsBuilder.retrievalConfig() );",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#worker-migration",
"main_header": "Migrating the Worker",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#worker-migration",
"text": "Migrating the Worker"
},
"links": [],
"text": "To migrate the worker",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#worker-migration",
"main_header": "Migrating the Worker",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#client-configuration",
"text": "Configuring the Amazon Kinesis Client"
},
"links": [],
"text": "Configuration Fields and Their New Classes\n\nOriginal Field\nNew Configuration Class\nDescription applicationName\nConfigsBuilder\nThe name for this the KCL application. Used as the default for the tableName and consumerName. tableName\nConfigsBuilder\nAllows overriding the table name used for the Amazon DynamoDB lease table. streamName\nConfigsBuilder\nThe name of the stream that this application processes records from. kinesisEndpoint\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. dynamoDBEndpoint\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. initialPositionInStreamExtended\nRetrievalConfig\nThe location in the shard from which the KCL begins fetching records, starting with the application's initial run. kinesisCredentialsProvider\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. dynamoDBCredentialsProvider\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. cloudWatchCredentialsProvider\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. failoverTimeMillis\nLeaseManagementConfig\nThe number of milliseconds that must pass before you can consider a lease owner to have failed. workerIdentifier\nConfigsBuilder\nA unique identifier that represents this instantiation of the application processor. This must be unique. shardSyncIntervalMillis\nLeaseManagementConfig\nThe time between shard sync calls. maxRecords\nPollingConfig\nAllows setting the maximum number of records that Kinesis returns. idleTimeBetweenReadsInMillis\nCoordinatorConfig\nThis option has been removed. See Idle Time Removal. callProcessRecordsEvenForEmptyRecordList\nProcessorConfig\nWhen set, the record processor is called even when no records were provided from Kinesis. parentShardPollIntervalMillis\nCoordinatorConfig\nHow often a record processor should poll to see if the parent shard has been completed. cleanupLeasesUponShardCompletion\nLeaseManagementConfig\nWhen set, leases are removed as soon as the child leases have started processing. ignoreUnexpectedChildShards\nLeaseManagementConfig\nWhen set, child shards that have an open shard are ignored. This is primarily for DynamoDB Streams. kinesisClientConfig\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. dynamoDBClientConfig\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. cloudWatchClientConfig\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. taskBackoffTimeMillis\nLifecycleConfig\nThe time to wait to retry failed tasks. metricsBufferTimeMillis\nMetricsConfig\nControls CloudWatch metric publishing. metricsMaxQueueSize\nMetricsConfig\nControls CloudWatch metric publishing. metricsLevel\nMetricsConfig\nControls CloudWatch metric publishing. metricsEnabledDimensions\nMetricsConfig\nControls CloudWatch metric publishing. validateSequenceNumberBeforeCheckpointing\nCheckpointConfig\nThis option has been removed. See Checkpoint Sequence Number Validation. regionName\nConfigsBuilder\nThis option has been removed. See Client Configuration Removal. maxLeasesForWorker\nLeaseManagementConfig\nThe maximum number of leases a single instance of the application should accept. maxLeasesToStealAtOneTime\nLeaseManagementConfig\nThe maximum number of leases an application should attempt to steal at one time. initialLeaseTableReadCapacity\nLeaseManagementConfig\nThe DynamoDB read IOPs that is used if the Kinesis Client Library needs to create a new DynamoDB lease table. initialLeaseTableWriteCapacity\nLeaseManagementConfig\nThe DynamoDB read IOPs that is used if the Kinesis Client Library needs to create a new DynamoDB lease table. initialPositionInStreamExtended\nLeaseManagementConfig\nThe initial position in the stream that the application should start at. This is only used during initial lease creation. skipShardSyncAtWorkerInitializationIfLeasesExist\nCoordinatorConfig\nDisable synchronizing shard data if the lease table contains existing leases. TODO: KinesisEco-438 shardPrioritization\nCoordinatorConfig\nWhich shard prioritization to use. shutdownGraceMillis\nN/A\nThis option has been removed. See MultiLang Removals. timeoutInSeconds\nN/A\nThis option has been removed. See MultiLang Removals. retryGetRecordsInSeconds\nPollingConfig\nConfigures the delay between GetRecords attempts for failures. maxGetRecordsThreadPool\nPollingConfig\nThe thread pool size used for GetRecords. maxLeaseRenewalThreads\nLeaseManagementConfig\nControls the size of the lease renewer thread pool. The more leases that your application could take, the larger this pool should be. recordsFetcherFactory\nPollingConfig\nAllows replacing the factory used to create fetchers that retrieve from streams. logWarningForTaskAfterMillis\nLifecycleConfig\nHow long to wait before a warning is logged if a task hasn't completed. listShardsBackoffTimeInMillis\nRetrievalConfig\nThe number of milliseconds to wait between calls to ListShards when failures occur. maxListShardsRetryAttempts\nRetrievalConfig\nThe maximum number of times that ListShards retries before giving up.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#client-configuration",
"main_header": "Configuring the Amazon Kinesis Client",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#client-configuration",
"text": "Configuring the Amazon Kinesis Client"
},
"links": [],
"text": "Configuration Fields and Their New Classes\n\nOriginal Field\nNew Configuration Class\nDescription applicationName\nConfigsBuilder\nThe name for this the KCL application. Used as the default for the tableName and consumerName. tableName\nConfigsBuilder\nAllows overriding the table name used for the Amazon DynamoDB lease table. streamName\nConfigsBuilder\nThe name of the stream that this application processes records from. kinesisEndpoint\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. dynamoDBEndpoint\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. initialPositionInStreamExtended\nRetrievalConfig\nThe location in the shard from which the KCL begins fetching records, starting with the application's initial run. kinesisCredentialsProvider\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. dynamoDBCredentialsProvider\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. cloudWatchCredentialsProvider\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. failoverTimeMillis\nLeaseManagementConfig\nThe number of milliseconds that must pass before you can consider a lease owner to have failed. workerIdentifier\nConfigsBuilder\nA unique identifier that represents this instantiation of the application processor. This must be unique. shardSyncIntervalMillis\nLeaseManagementConfig\nThe time between shard sync calls. maxRecords\nPollingConfig\nAllows setting the maximum number of records that Kinesis returns. idleTimeBetweenReadsInMillis\nCoordinatorConfig\nThis option has been removed. See Idle Time Removal. callProcessRecordsEvenForEmptyRecordList\nProcessorConfig\nWhen set, the record processor is called even when no records were provided from Kinesis. parentShardPollIntervalMillis\nCoordinatorConfig\nHow often a record processor should poll to see if the parent shard has been completed. cleanupLeasesUponShardCompletion\nLeaseManagementConfig\nWhen set, leases are removed as soon as the child leases have started processing. ignoreUnexpectedChildShards\nLeaseManagementConfig\nWhen set, child shards that have an open shard are ignored. This is primarily for DynamoDB Streams. kinesisClientConfig\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. dynamoDBClientConfig\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. cloudWatchClientConfig\nConfigsBuilder\nThis option has been removed. See Client Configuration Removals. taskBackoffTimeMillis\nLifecycleConfig\nThe time to wait to retry failed tasks. metricsBufferTimeMillis\nMetricsConfig\nControls CloudWatch metric publishing. metricsMaxQueueSize\nMetricsConfig\nControls CloudWatch metric publishing. metricsLevel\nMetricsConfig\nControls CloudWatch metric publishing. metricsEnabledDimensions\nMetricsConfig\nControls CloudWatch metric publishing. validateSequenceNumberBeforeCheckpointing\nCheckpointConfig\nThis option has been removed. See Checkpoint Sequence Number Validation. regionName\nConfigsBuilder\nThis option has been removed. See Client Configuration Removal. maxLeasesForWorker\nLeaseManagementConfig\nThe maximum number of leases a single instance of the application should accept. maxLeasesToStealAtOneTime\nLeaseManagementConfig\nThe maximum number of leases an application should attempt to steal at one time. initialLeaseTableReadCapacity\nLeaseManagementConfig\nThe DynamoDB read IOPs that is used if the Kinesis Client Library needs to create a new DynamoDB lease table. initialLeaseTableWriteCapacity\nLeaseManagementConfig\nThe DynamoDB read IOPs that is used if the Kinesis Client Library needs to create a new DynamoDB lease table. initialPositionInStreamExtended\nLeaseManagementConfig\nThe initial position in the stream that the application should start at. This is only used during initial lease creation. skipShardSyncAtWorkerInitializationIfLeasesExist\nCoordinatorConfig\nDisable synchronizing shard data if the lease table contains existing leases. TODO: KinesisEco-438 shardPrioritization\nCoordinatorConfig\nWhich shard prioritization to use. shutdownGraceMillis\nN/A\nThis option has been removed. See MultiLang Removals. timeoutInSeconds\nN/A\nThis option has been removed. See MultiLang Removals. retryGetRecordsInSeconds\nPollingConfig\nConfigures the delay between GetRecords attempts for failures. maxGetRecordsThreadPool\nPollingConfig\nThe thread pool size used for GetRecords. maxLeaseRenewalThreads\nLeaseManagementConfig\nControls the size of the lease renewer thread pool. The more leases that your application could take, the larger this pool should be. recordsFetcherFactory\nPollingConfig\nAllows replacing the factory used to create fetchers that retrieve from streams. logWarningForTaskAfterMillis\nLifecycleConfig\nHow long to wait before a warning is logged if a task hasn't completed. listShardsBackoffTimeInMillis\nRetrievalConfig\nThe number of milliseconds to wait between calls to ListShards when failures occur. maxListShardsRetryAttempts\nRetrievalConfig\nThe maximum number of times that ListShards retries before giving up.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#client-configuration",
"main_header": "Configuring the Amazon Kinesis Client",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#idle-time-removal",
"text": "Idle Time Removal"
},
"links": [],
"text": "The amount of time between task dispatching checks. You can now configure this time between tasks by setting CoordinatorConfig#shardConsumerDispatchPollIntervalMillis.\n\nThe amount of time to sleep when no records were returned from Kinesis Data Streams. In version 2.0, in enhanced fan-out records are pushed from their respective retriever. Activity on the shard consumer only occurs when a pushed request arrives.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#idle-time-removal",
"main_header": "Idle Time Removal",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#client-configuration-removals",
"text": "Client Configuration Removals"
},
"links": [],
"text": "Removed Field\nEquivalent Configuration kinesisEndpoint\nConfigure the SDK KinesisAsyncClient with preferred endpoint: KinesisAsyncClient.builder().endpointOverride(URI.create(\"https://<kinesis endpoint>\")).build(). dynamoDBEndpoint\nConfigure the SDK DynamoDbAsyncClient with preferred endpoint: DynamoDbAsyncClient.builder().endpointOverride(URI.create(\"https://<dynamodb endpoint>\")).build(). kinesisClientConfig\nConfigure the SDK KinesisAsyncClient with the needed configuration: KinesisAsyncClient.builder().overrideConfiguration(<your configuration>).build(). dynamoDBClientConfig\nConfigure the SDK DynamoDbAsyncClient with the needed configuration: DynamoDbAsyncClient.builder().overrideConfiguration(<your configuration>).build(). cloudWatchClientConfig\nConfigure the SDK CloudWatchAsyncClient with the needed configuration: CloudWatchAsyncClient.builder().overrideConfiguration(<your configuration>).build(). regionName\nConfigure the SDK with the preferred Region. This is the same for all SDK clients. For example, KinesisAsyncClient.builder().region(Region.US_WEST_2).build().",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#client-configuration-removals",
"main_header": "Client Configuration Removals",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#client-configuration-removals",
"text": "Client Configuration Removals"
},
"links": [],
"text": "Removed Field\nEquivalent Configuration kinesisEndpoint\nConfigure the SDK KinesisAsyncClient with preferred endpoint: KinesisAsyncClient.builder().endpointOverride(URI.create(\"https://<kinesis endpoint>\")).build(). dynamoDBEndpoint\nConfigure the SDK DynamoDbAsyncClient with preferred endpoint: DynamoDbAsyncClient.builder().endpointOverride(URI.create(\"https://<dynamodb endpoint>\")).build(). kinesisClientConfig\nConfigure the SDK KinesisAsyncClient with the needed configuration: KinesisAsyncClient.builder().overrideConfiguration(<your configuration>).build(). dynamoDBClientConfig\nConfigure the SDK DynamoDbAsyncClient with the needed configuration: DynamoDbAsyncClient.builder().overrideConfiguration(<your configuration>).build(). cloudWatchClientConfig\nConfigure the SDK CloudWatchAsyncClient with the needed configuration: CloudWatchAsyncClient.builder().overrideConfiguration(<your configuration>).build(). regionName\nConfigure the SDK with the preferred Region. This is the same for all SDK clients. For example, KinesisAsyncClient.builder().region(Region.US_WEST_2).build().",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#client-configuration-removals",
"main_header": "Client Configuration Removals",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#troubleshooting-consumers",
"main_header": "Troubleshooting Kinesis Data Streams Consumers",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#w3aac23c27b5",
"title": "Some Kinesis Data Streams Records are Skipped When Using the Kinesis Client Library"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#records-belonging-to-the-same-shard",
"title": "Records Belonging to the Same Shard are Processed by Different Record Processors at the Same Time"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#consumer-app-reading-slower",
"title": "Consumer Application is Reading at a Slower Rate Than Expected"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#getrecords-returns-empty",
"title": "GetRecords Returns Empty Records Array Even When There is Data in the Stream"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#shard-iterator-expires-unexpectedly",
"title": "Shard Iterator Expires Unexpectedly"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#record-processing-falls-behind",
"title": "Consumer Record Processing Falling Behind"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#unauthorized-kms-consumer",
"title": "Unauthorized KMS master key permission error"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#misc-troubleshooting-consumer",
"title": "Common issues, questions, and troubleshooting ideas for consumers"
}
],
"text": "The following sections offer solutions to some common problems you may find while working with Amazon Kinesis Data Streams consumers.Some Kinesis Data Streams Records are Skipped When Using the Kinesis Client LibraryRecords Belonging to the Same Shard are Processed by Different Record Processors at the Same TimeConsumer Application is Reading at a Slower Rate Than ExpectedGetRecords Returns Empty Records Array Even When There is Data in the StreamShard Iterator Expires UnexpectedlyConsumer Record Processing Falling BehindUnauthorized KMS master key permission errorCommon issues, questions, and troubleshooting ideas for consumers",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#troubleshooting-consumers",
"main_header": "Troubleshooting Kinesis Data Streams Consumers",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"links": [],
"text": "The following sections offer solutions to some common problems you may find while working with Amazon Kinesis Data Streams consumers.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#troubleshooting-consumers",
"main_header": "Troubleshooting Kinesis Data Streams Consumers",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#records-belonging-to-the-same-shard",
"text": "Records Belonging to the Same Shard are Processed by Different Record Processors at the Same Time"
},
"links": [],
"text": "After the current call to processRecords is completed, the KCL invokes the shutdown method on the record processor with shutdown reason 'ZOMBIE'. Your record processors are expected to clean up any resources as appropriate and then exit. When you attempt to checkpoint from a 'zombie' worker, the KCL throws ShutdownException. After receiving this exception, your code is expected to exit the current method cleanly.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#records-belonging-to-the-same-shard",
"main_header": "Records Belonging to the Same Shard are Processed by Different Record Processors at the Same Time",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#consumer-app-reading-slower",
"text": "Consumer Application is Reading at a Slower Rate Than Expected"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"title": "Quotas and Limits"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetRecords.html#API_GetRecords_RequestSyntax",
"title": "limit"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"title": "Resharding, Scaling, and Parallel Processing"
}
],
"text": "Multiple consumer applications have total reads exceeding the per-shard limits. For more information, see Quotas and Limits. In this case, increase the number of shards in the Kinesis data stream.\n\nThe limit that specifies the maximum number of GetRecords per call may have been configured with a low value. If you are using the KCL, you may have configured the worker with a low value for the maxRecords property. In general, we recommend using the system defaults for this property.\n\nThe logic inside your processRecords call may be taking longer than expected for a number of possible reasons; the logic may be CPU intensive, I/O blocking, or bottlenecked on synchronization. To test if this is true, test run empty record processors and compare the read throughput. For information about how to keep up with the incoming data, see Resharding, Scaling, and Parallel Processing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#consumer-app-reading-slower",
"main_header": "Consumer Application is Reading at a Slower Rate Than Expected",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#getrecords-returns-empty",
"text": "GetRecords Returns Empty Records Array Even When There is Data in the Stream"
},
"links": [],
"text": "There is no more data currently in the shard. There is no data near the part of the shard pointed to by the ShardIterator.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#getrecords-returns-empty",
"main_header": "GetRecords Returns Empty Records Array Even When There is Data in the Stream",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#record-processing-falls-behind",
"text": "Consumer Record Processing Falling Behind"
},
"links": [],
"text": "Sudden large increases to GetRecords.IteratorAgeMilliseconds or MillisBehindLatest usually indicate a transient problem, such as API operation failures to a downstream application. You should investigate these sudden increases if either of the metrics consistently display this behavior. A gradual increase to these metrics indicates that a consumer is not keeping up with the stream because it is not processing records fast enough. The most common root causes for this behavior are insufficient physical resources or record processing logic that has not scaled with an increase in stream throughput. You can verify this behavior by looking at the other custom CloudWatch metrics that the KCL emits associated with the processTask operation, including RecordProcessor.processRecords.Time, Success, and RecordsProcessed. If you see an increase in the processRecords.Time metric that correlates with increased throughput, you should analyze your record processing logic to identify why it is not scaling with the increased throughput.\n\nIf you see an increase to the processRecords.Time values that are not correlated with increased throughput, check to see if you are making any blocking calls in the critical path, which are often the cause of slowdowns in record processing. An alternative approach is to increase your parallelism by increasing the number of shards. Finally, confirm you have an adequate amount of physical resources (memory, CPU utilization, etc.) on the underlying processing nodes during peak demand.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#record-processing-falls-behind",
"main_header": "Consumer Record Processing Falling Behind",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#misc-troubleshooting-consumer",
"text": "Common issues, questions, and troubleshooting ideas for consumers"
},
"links": [
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-data-streams-lambda-invocation/",
"title": "Why is Kinesis Data Streams trigger unable to invoke my Lambda function?"
},
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-readprovisionedthroughputexceeded/",
"title": "How do I detect and troubleshoot ReadProvisionedThroughputExceeded exceptions in Kinesis Data Streams?"
},
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-data-stream-latency-issues/",
"title": "Why am I experiencing high latency issues with Kinesis Data Streams?"
},
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-data-stream-500-error/",
"title": "Why is my Kinesis data stream returning a 500 Internal Server Error?"
},
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kcl-kinesis-data-streams/",
"title": "How do I troubleshoot a blocked or stuck KCL application for Kinesis Data Streams?"
},
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-kcl-apps-dynamodb-table/",
"title": "Can I use different Amazon Kinesis Client Library applications with the same Amazon DynamoDB table?"
}
],
"text": "Why is Kinesis Data Streams trigger unable to invoke my Lambda function?\n\nHow do I detect and troubleshoot ReadProvisionedThroughputExceeded exceptions in Kinesis Data Streams? Why am I experiencing high latency issues with Kinesis Data Streams?\n\nWhy is my Kinesis data stream returning a 500 Internal Server Error?\n\nHow do I troubleshoot a blocked or stuck KCL application for Kinesis Data Streams?\n\nCan I use different Amazon Kinesis Client Library applications with the same Amazon DynamoDB table?",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#misc-troubleshooting-consumer",
"main_header": "Common issues, questions, and troubleshooting ideas for consumers",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#advanced-consumers",
"text": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html#advanced-consumers",
"main_header": "Advanced Topics for Amazon Kinesis Data Streams Consumers",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-low-latency",
"text": "Low-Latency Processing"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html#kinesis-low-latency",
"main_header": "Low-Latency Processing",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-low-latency",
"text": "Low-Latency Processing"
},
"links": [],
"text": "NoteBecause Kinesis Data Streams has a limit of 5 GetRecords calls per second, per shard, setting the idleTimeBetweenReadsInMillis property lower than 200ms may result in your application observing the ProvisionedThroughputExceededException exception. Too many of these exceptions can result in exponential back-offs and thereby cause significant unexpected latencies in processing. If you set this property to be at or just above 200 ms and have more than one processing application, you will experience similar throttling.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html#kinesis-low-latency",
"main_header": "Low-Latency Processing",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-low-latency",
"text": "Low-Latency Processing"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html#kinesis-low-latency",
"main_header": "Low-Latency Processing",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-low-latency",
"text": "Low-Latency Processing"
},
"links": [],
"text": "Because Kinesis Data Streams has a limit of 5 GetRecords calls per second, per shard, setting the idleTimeBetweenReadsInMillis property lower than 200ms may result in your application observing the ProvisionedThroughputExceededException exception. Too many of these exceptions can result in exponential back-offs and thereby cause significant unexpected latencies in processing. If you set this property to be at or just above 200 ms and have more than one processing application, you will experience similar throttling.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html#kinesis-low-latency",
"main_header": "Low-Latency Processing",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-low-latency",
"text": "Low-Latency Processing"
},
"links": [],
"text": "Because Kinesis Data Streams has a limit of 5 GetRecords calls per second, per shard, setting the idleTimeBetweenReadsInMillis property lower than 200ms may result in your application observing the ProvisionedThroughputExceededException exception. Too many of these exceptions can result in exponential back-offs and thereby cause significant unexpected latencies in processing. If you set this property to be at or just above 200 ms and have more than one processing application, you will experience similar throttling.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html#kinesis-low-latency",
"main_header": "Low-Latency Processing",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-deaggregation",
"text": "Using AWS Lambda with the Kinesis Producer Library"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-deaggregation.html#kinesis-record-deaggregation",
"main_header": "Using AWS Lambda with the Kinesis Producer Library",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-scaling",
"text": "Resharding, Scaling, and Parallel Processing"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html#kinesis-record-processor-scaling",
"main_header": "Resharding, Scaling, and Parallel Processing",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-scaling",
"text": "Resharding, Scaling, and Parallel Processing"
},
"h2": {
"urllink": "#kinesis-record-processor-scaling-example",
"text": "Example: Resharding, Scaling, and Parallel Processing"
},
"links": [],
"text": "For example, if your application is running on one EC2 instance, and is processing one Kinesis data stream that has four shards. This one instance has one KCL worker and four record processors (one record processor for every shard). These four record processors run in parallel within the same process. Next, if you scale the application to use another instance, you have two instances processing one stream that has four shards. When the KCL worker starts up on the second instance, it load-balances with the first instance, so that each instance now processes two shards. If you then decide to split the four shards into five shards. The KCL again coordinates the processing across instances: one instance processes three shards, and the other processes two shards. A similar coordination occurs when you merge shards.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html#kinesis-record-processor-scaling-example",
"main_header": "Example: Resharding, Scaling, and Parallel Processing",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-scaling",
"text": "Resharding, Scaling, and Parallel Processing"
},
"h2": {
"urllink": "#kinesis-record-processor-scaling-example",
"text": "Example: Resharding, Scaling, and Parallel Processing"
},
"links": [],
"text": "Increasing the instance size (because all record processors run in parallel within a process)\n\nIncreasing the number of instances up to the maximum number of open shards (because shards can be processed independently)\n\nIncreasing the number of shards (which increases the level of parallelism)",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html#kinesis-record-processor-scaling-example",
"main_header": "Example: Resharding, Scaling, and Parallel Processing",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates",
"main_header": "Handling Duplicate Records",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-producer",
"text": "Producer Retries"
},
"links": [
{
"url": "https://docs.aws.amazon.com/sdk-for-java/latest/reference/com/amazonaws/ClientConfiguration.html",
"title": "configuration retries a failed PutRecord call up to three times."
}
],
"text": "NoteIf you use the AWS SDK PutRecord, the default configuration retries a failed PutRecord call up to three times.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-producer",
"main_header": "Producer Retries",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-producer",
"text": "Producer Retries"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-producer",
"main_header": "Producer Retries",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-producer",
"text": "Producer Retries"
},
"links": [
{
"url": "https://docs.aws.amazon.com/sdk-for-java/latest/reference/com/amazonaws/ClientConfiguration.html",
"title": "configuration retries a failed PutRecord call up to three times."
}
],
"text": "If you use the AWS SDK PutRecord, the default configuration retries a failed PutRecord call up to three times.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-producer",
"main_header": "Producer Retries",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-producer",
"text": "Producer Retries"
},
"links": [
{
"url": "https://docs.aws.amazon.com/sdk-for-java/latest/reference/com/amazonaws/ClientConfiguration.html",
"title": "configuration retries a failed PutRecord call up to three times."
}
],
"text": "If you use the AWS SDK PutRecord, the default configuration retries a failed PutRecord call up to three times.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-producer",
"main_header": "Producer Retries",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-consumer",
"text": "Consumer Retries"
},
"links": [],
"text": "A worker terminates unexpectedly Worker instances are added or removed Shards are merged or split The application is deployed",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-consumer",
"main_header": "Consumer Retries",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-consumer",
"text": "Consumer Retries"
},
"h3": {
"urllink": "#kinesis-record-processor-duplicates-consumer-example",
"text": "Example: Consumer Retries Resulting in Redelivered Records"
},
"links": [],
"text": "A worker reads the next batch of records from the shard, records 10001 to 20000. The worker then passes the batch of records to the associated record processor. The record processor aggregates the data, creates an Amazon S3 file, and uploads the file to Amazon S3 successfully. Worker terminates unexpectedly before a new checkpoint can occur. Application, worker, and record processor restart. Worker now begins reading from the last successful checkpoint, in this case 10001.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-consumer-example",
"main_header": "Example: Consumer Retries Resulting in Redelivered Records",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-consumer",
"text": "Consumer Retries"
},
"h3": {
"urllink": "#kinesis-record-processor-duplicates-consumer-resilience",
"text": "Being Resilient to Consumer Retries"
},
"links": [],
"text": "Record Processor uses a fixed number of records per Amazon S3 file, such as 5000. The file name uses this schema: Amazon S3 prefix, shard-id, and First-Sequence-Num. In this case, it could be something like sample-shard000001-10001. After you upload the Amazon S3 file, checkpoint by specifying Last-Sequence-Num. In this case, you would checkpoint at record number 15000.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-consumer-resilience",
"main_header": "Being Resilient to Consumer Retries",
"images": [],
"container_type": "div",
"children_tags": [
"ol"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-additional-considerations",
"text": "Handling Startup, Shutdown, and Throttling"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-additional-considerations",
"main_header": "Handling Startup, Shutdown, and Throttling",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-additional-considerations",
"text": "Handling Startup, Shutdown, and Throttling"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-producer-consumer-coordination",
"title": "Starting Up Data Producers and Data Consumers"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#developing-consumers-with-kcl-shutdown",
"title": "Shutting Down an Amazon Kinesis Data Streams Application"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-read-throttling",
"title": "Read Throttling"
}
],
"text": "ContentsStarting Up Data Producers and Data ConsumersShutting Down an Amazon Kinesis Data Streams ApplicationRead Throttling",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-additional-considerations",
"main_header": "Handling Startup, Shutdown, and Throttling",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-additional-considerations",
"text": "Handling Startup, Shutdown, and Throttling"
},
"links": [],
"text": "Contents",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-additional-considerations",
"main_header": "Handling Startup, Shutdown, and Throttling",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#monitoring",
"text": "Monitoring Amazon Kinesis Data Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html#monitoring",
"main_header": "Monitoring Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring",
"text": "Monitoring Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"title": "CloudWatch metrics"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/agent-health.html",
"title": "Kinesis Agent"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"title": "API logging"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"title": "Kinesis Client Library"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"title": "Kinesis Producer Library"
}
],
"text": "CloudWatch metrics\u00e2\u0080\u0094 Kinesis Data Streams sends Amazon CloudWatch custom metrics with detailed monitoring for each stream.\n\nKinesis Agent\u00e2\u0080\u0094 The Kinesis Agent publishes custom CloudWatch metrics to help assess if the agent is working as expected.\n\nAPI logging\u00e2\u0080\u0094 Kinesis Data Streams uses AWS CloudTrail to log API calls and store the data in an Amazon S3 bucket.\n\nKinesis Client Library\u00e2\u0080\u0094 Kinesis Client Library (KCL) provides metrics per shard, worker, and KCL application.\n\nKinesis Producer Library\u00e2\u0080\u0094 Kinesis Producer Library (KPL) provides metrics per shard, worker, and KPL application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html#monitoring",
"main_header": "Monitoring Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring",
"text": "Monitoring Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-data-streams-troubleshoot/",
"title": "Which metrics should I use to monitor and troubleshoot Kinesis Data Streams issues?"
},
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-data-streams-iteratorage-metric/",
"title": "Why does the IteratorAgeMilliseconds value in Kinesis Data Streams keep increasing?"
}
],
"text": "Which metrics should I use to monitor and troubleshoot Kinesis Data Streams issues?\n\nWhy does the IteratorAgeMilliseconds value in Kinesis Data Streams keep increasing?",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html#monitoring",
"main_header": "Monitoring Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#monitoring-with-cloudwatch",
"main_header": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_EnableEnhancedMonitoring.html",
"title": "EnableEnhancedMonitoring"
},
{
"url": "https://aws.amazon.com/cloudwatch",
"title": "Amazon CloudWatch product page"
}
],
"text": "Type\nDescription Basic (stream-level) Stream-level data is sent automatically every minute at no charge. Enhanced (shard-level) Shard-level data is sent every minute for an additional cost. To get this level of data, you must specifically enable it for the stream using the EnableEnhancedMonitoring operation. \nFor information about pricing, see the Amazon CloudWatch product page.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#monitoring-with-cloudwatch",
"main_header": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_EnableEnhancedMonitoring.html",
"title": "EnableEnhancedMonitoring"
},
{
"url": "https://aws.amazon.com/cloudwatch",
"title": "Amazon CloudWatch product page"
}
],
"text": "Type\nDescription Basic (stream-level) Stream-level data is sent automatically every minute at no charge. Enhanced (shard-level) Shard-level data is sent every minute for an additional cost. To get this level of data, you must specifically enable it for the stream using the EnableEnhancedMonitoring operation. \nFor information about pricing, see the Amazon CloudWatch product page.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#monitoring-with-cloudwatch",
"main_header": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics-stream",
"title": "Basic Stream-level Metrics"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics-shard",
"title": "Enhanced Shard-level Metrics"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metricdimensions",
"title": "Dimensions for Amazon Kinesis Data Streams Metrics"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metric-use",
"title": "Recommended Amazon Kinesis Data Streams Metrics"
}
],
"text": "TopicsBasic Stream-level MetricsEnhanced Shard-level MetricsDimensions for Amazon Kinesis Data Streams MetricsRecommended Amazon Kinesis Data Streams Metrics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics",
"main_header": "Amazon Kinesis Data Streams Dimensions and Metrics",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics",
"main_header": "Amazon Kinesis Data Streams Dimensions and Metrics",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"h3": {
"urllink": "#kinesis-metrics-stream",
"text": "Basic Stream-level Metrics"
},
"links": [],
"text": "Metric\nDescription GetRecords.Bytes\n\nThe number of bytes retrieved from the Kinesis stream, measured over the specified time period. Minimum, Maximum, and Average statistics represent the bytes in a single GetRecords operation for the stream in the specified time period.\nShard-level metric name: OutgoingBytes\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Bytes GetRecords.IteratorAge\n\nThis metric is deprecated. Use GetRecords.IteratorAgeMilliseconds. GetRecords.IteratorAgeMilliseconds\n\nThe age of the last record in all GetRecords calls made against a Kinesis stream, measured over the specified time period. Age is the difference between the current time and when the last record of the GetRecords call was written to the stream. The Minimum and Maximum statistics can be used to track the progress of Kinesis consumer applications. A value of zero indicates that the records being read are completely caught up with the stream.\nShard-level metric name: IteratorAgeMilliseconds\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Samples\nUnits: Milliseconds GetRecords.Latency\n\nThe time taken per GetRecords operation, measured over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average\nUnits: Milliseconds GetRecords.Records\n\nThe number of records retrieved from the shard, measured over the specified time period. Minimum, Maximum, and Average statistics represent the records in a single GetRecords operation for the stream in the specified time period.\nShard-level metric name: OutgoingRecords\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count GetRecords.Success\n\nThe number of successful GetRecords operations per stream, measured over the specified time period.\nDimensions: StreamName\nStatistics: Average, Sum, Samples\nUnits: Count IncomingBytes\n\nThe number of bytes successfully put to the Kinesis stream over the specified time period. This metric includes bytes from PutRecord and PutRecords operations. Minimum, Maximum, and Average statistics represent the bytes in a single put operation for the stream in the specified time period.\nShard-level metric name: IncomingBytes\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Bytes IncomingRecords\n\nThe number of records successfully put to the Kinesis stream over the specified time period. This metric includes record counts from PutRecord and PutRecords operations. Minimum, Maximum, and Average statistics represent the records in a single put operation for the stream in the specified time period.\nShard-level metric name: IncomingRecords\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count PutRecord.Bytes\n\nThe number of bytes put to the Kinesis stream using the PutRecord operation over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Bytes PutRecord.Latency\n\nThe time taken per PutRecord operation, measured over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average\nUnits: Milliseconds PutRecord.Success\n\nThe number of successful PutRecord operations per Kinesis stream, measured over the specified time period. Average reflects the percentage of successful writes to a stream.\nDimensions: StreamName\nStatistics: Average, Sum, Samples\nUnits: Count PutRecords.Bytes\n\nThe number of bytes put to the Kinesis stream using the PutRecords operation over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Bytes PutRecords.Latency\n\nThe time taken per PutRecords operation, measured over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average\nUnits: Milliseconds PutRecords.Records\n\nThis metric is deprecated. Use PutRecords.SuccessfulRecords.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count PutRecords.Success\n\nThe number of PutRecords operations where at least one record succeeded, per Kinesis stream, measured over the specified time period.\nDimensions: StreamName\nStatistics: Average, Sum, Samples\nUnits: Count PutRecords.TotalRecords\n\nThe total number of records sent in a PutRecords operation per Kinesis data stream, measured over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count PutRecords.SuccessfulRecords\n\nThe number of successful records in a PutRecords operation per Kinesis data stream, measured over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count PutRecords.FailedRecords\n\nThe number of records rejected due to internal failures in a PutRecords operation per Kinesis data stream, measured over the specified time period. Occasional internal failures are to be expected and should be retried.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count PutRecords.ThrottledRecords\n\nThe number of records rejected due to throttling in a PutRecords operation per Kinesis data stream, measured over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count ReadProvisionedThroughputExceeded\n\nThe number of GetRecords calls throttled for the stream over the specified time period. The most commonly used statistic for this metric is Average.\nWhen the Minimum statistic has a value of 1, all records were throttled for the stream during the specified time period. \nWhen the Maximum statistic has a value of 0 (zero), no records were throttled for the stream during the specified time period.\nShard-level metric name: ReadProvisionedThroughputExceeded\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count SubscribeToShard.RateExceeded\nThis metric is emitted when a new subscription attempt fails because there already is an active subscription by the same consumer or if you exceed the number of calls per second allowed for this operation.Dimensions: StreamName, ConsumerName SubscribeToShard.Success\n\nThis metric records whether the SubscribeToShard subscription was successfully established. The subscription only lives for at most 5 minutes. Therefore, this metric gets emitted at least once every 5 minutes.\nDimensions: StreamName, ConsumerName SubscribeToShardEvent.Bytes\n\nThe number of bytes received from the shard, measured over the specified time period. Minimum, Maximum, and Average statistics represent the bytes published in a single event for the specified time period.\nShard-level metric name: OutgoingBytes\nDimensions: StreamName, ConsumerName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Bytes SubscribeToShardEvent.MillisBehindLatest\n\nThe difference between the current time and when the last record of the SubscribeToShard event was written to the stream.\nDimensions: StreamName, ConsumerName\nStatistics: Minimum, Maximum, Average, Samples\nUnits: Milliseconds SubscribeToShardEvent.Records\n\nThe number of records received from the shard, measured over the specified time period. Minimum, Maximum, and Average statistics represent the records in a single event for the specified time period.\nShard-level metric name: OutgoingRecords\nDimensions: StreamName, ConsumerName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count SubscribeToShardEvent.Success\nThis metric is emitted every time an event is published successfully. It is only emitted when there's an active subscription.Dimensions: StreamName, ConsumerNameStatistics: Minimum, Maximum, Average, Sum, SamplesUnits: Count WriteProvisionedThroughputExceeded\n\nThe number of records rejected due to throttling for the stream over the specified time period. This metric includes throttling from PutRecord and PutRecords operations. The most commonly used statistic for this metric is Average.\nWhen the Minimum statistic has a non-zero value, records were being throttled for the stream during the specified time period. \nWhen the Maximum statistic has a value of 0 (zero), no records were being throttled for the stream during the specified time period.\nShard-level metric name: WriteProvisionedThroughputExceeded\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics-stream",
"main_header": "Basic Stream-level Metrics",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"h3": {
"urllink": "#kinesis-metrics-stream",
"text": "Basic Stream-level Metrics"
},
"links": [],
"text": "Metric\nDescription GetRecords.Bytes\n\nThe number of bytes retrieved from the Kinesis stream, measured over the specified time period. Minimum, Maximum, and Average statistics represent the bytes in a single GetRecords operation for the stream in the specified time period.\nShard-level metric name: OutgoingBytes\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Bytes GetRecords.IteratorAge\n\nThis metric is deprecated. Use GetRecords.IteratorAgeMilliseconds. GetRecords.IteratorAgeMilliseconds\n\nThe age of the last record in all GetRecords calls made against a Kinesis stream, measured over the specified time period. Age is the difference between the current time and when the last record of the GetRecords call was written to the stream. The Minimum and Maximum statistics can be used to track the progress of Kinesis consumer applications. A value of zero indicates that the records being read are completely caught up with the stream.\nShard-level metric name: IteratorAgeMilliseconds\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Samples\nUnits: Milliseconds GetRecords.Latency\n\nThe time taken per GetRecords operation, measured over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average\nUnits: Milliseconds GetRecords.Records\n\nThe number of records retrieved from the shard, measured over the specified time period. Minimum, Maximum, and Average statistics represent the records in a single GetRecords operation for the stream in the specified time period.\nShard-level metric name: OutgoingRecords\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count GetRecords.Success\n\nThe number of successful GetRecords operations per stream, measured over the specified time period.\nDimensions: StreamName\nStatistics: Average, Sum, Samples\nUnits: Count IncomingBytes\n\nThe number of bytes successfully put to the Kinesis stream over the specified time period. This metric includes bytes from PutRecord and PutRecords operations. Minimum, Maximum, and Average statistics represent the bytes in a single put operation for the stream in the specified time period.\nShard-level metric name: IncomingBytes\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Bytes IncomingRecords\n\nThe number of records successfully put to the Kinesis stream over the specified time period. This metric includes record counts from PutRecord and PutRecords operations. Minimum, Maximum, and Average statistics represent the records in a single put operation for the stream in the specified time period.\nShard-level metric name: IncomingRecords\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count PutRecord.Bytes\n\nThe number of bytes put to the Kinesis stream using the PutRecord operation over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Bytes PutRecord.Latency\n\nThe time taken per PutRecord operation, measured over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average\nUnits: Milliseconds PutRecord.Success\n\nThe number of successful PutRecord operations per Kinesis stream, measured over the specified time period. Average reflects the percentage of successful writes to a stream.\nDimensions: StreamName\nStatistics: Average, Sum, Samples\nUnits: Count PutRecords.Bytes\n\nThe number of bytes put to the Kinesis stream using the PutRecords operation over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Bytes PutRecords.Latency\n\nThe time taken per PutRecords operation, measured over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average\nUnits: Milliseconds PutRecords.Records\n\nThis metric is deprecated. Use PutRecords.SuccessfulRecords.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count PutRecords.Success\n\nThe number of PutRecords operations where at least one record succeeded, per Kinesis stream, measured over the specified time period.\nDimensions: StreamName\nStatistics: Average, Sum, Samples\nUnits: Count PutRecords.TotalRecords\n\nThe total number of records sent in a PutRecords operation per Kinesis data stream, measured over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count PutRecords.SuccessfulRecords\n\nThe number of successful records in a PutRecords operation per Kinesis data stream, measured over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count PutRecords.FailedRecords\n\nThe number of records rejected due to internal failures in a PutRecords operation per Kinesis data stream, measured over the specified time period. Occasional internal failures are to be expected and should be retried.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count PutRecords.ThrottledRecords\n\nThe number of records rejected due to throttling in a PutRecords operation per Kinesis data stream, measured over the specified time period.\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count ReadProvisionedThroughputExceeded\n\nThe number of GetRecords calls throttled for the stream over the specified time period. The most commonly used statistic for this metric is Average.\nWhen the Minimum statistic has a value of 1, all records were throttled for the stream during the specified time period. \nWhen the Maximum statistic has a value of 0 (zero), no records were throttled for the stream during the specified time period.\nShard-level metric name: ReadProvisionedThroughputExceeded\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count SubscribeToShard.RateExceeded\nThis metric is emitted when a new subscription attempt fails because there already is an active subscription by the same consumer or if you exceed the number of calls per second allowed for this operation.Dimensions: StreamName, ConsumerName SubscribeToShard.Success\n\nThis metric records whether the SubscribeToShard subscription was successfully established. The subscription only lives for at most 5 minutes. Therefore, this metric gets emitted at least once every 5 minutes.\nDimensions: StreamName, ConsumerName SubscribeToShardEvent.Bytes\n\nThe number of bytes received from the shard, measured over the specified time period. Minimum, Maximum, and Average statistics represent the bytes published in a single event for the specified time period.\nShard-level metric name: OutgoingBytes\nDimensions: StreamName, ConsumerName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Bytes SubscribeToShardEvent.MillisBehindLatest\n\nThe difference between the current time and when the last record of the SubscribeToShard event was written to the stream.\nDimensions: StreamName, ConsumerName\nStatistics: Minimum, Maximum, Average, Samples\nUnits: Milliseconds SubscribeToShardEvent.Records\n\nThe number of records received from the shard, measured over the specified time period. Minimum, Maximum, and Average statistics represent the records in a single event for the specified time period.\nShard-level metric name: OutgoingRecords\nDimensions: StreamName, ConsumerName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count SubscribeToShardEvent.Success\nThis metric is emitted every time an event is published successfully. It is only emitted when there's an active subscription.Dimensions: StreamName, ConsumerNameStatistics: Minimum, Maximum, Average, Sum, SamplesUnits: Count WriteProvisionedThroughputExceeded\n\nThe number of records rejected due to throttling for the stream over the specified time period. This metric includes throttling from PutRecord and PutRecords operations. The most commonly used statistic for this metric is Average.\nWhen the Minimum statistic has a non-zero value, records were being throttled for the stream during the specified time period. \nWhen the Maximum statistic has a value of 0 (zero), no records were being throttled for the stream during the specified time period.\nShard-level metric name: WriteProvisionedThroughputExceeded\nDimensions: StreamName\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics-stream",
"main_header": "Basic Stream-level Metrics",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"h3": {
"urllink": "#kinesis-metrics-shard",
"text": "Enhanced Shard-level Metrics"
},
"links": [],
"text": "Metric\nDescription IncomingBytes\n\nThe number of bytes successfully put to the shard over the specified time period. This metric includes bytes from PutRecord and PutRecords operations. Minimum, Maximum, and Average statistics represent the bytes in a single put operation for the shard in the specified time period.\nStream-level metric name: IncomingBytes\nDimensions: StreamName, ShardId\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Bytes IncomingRecords\n\nThe number of records successfully put to the shard over the specified time period. This metric includes record counts from PutRecord and PutRecords operations. Minimum, Maximum, and Average statistics represent the records in a single put operation for the shard in the specified time period.\nStream-level metric name: IncomingRecords\nDimensions: StreamName, ShardId\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count IteratorAgeMilliseconds\n\nThe age of the last record in all GetRecords calls made against a shard, measured over the specified time period. Age is the difference between the current time and when the last record of the GetRecords call was written to the stream. The Minimum and Maximum statistics can be used to track the progress of Kinesis consumer applications. A value of 0 (zero) indicates that the records being read are completely caught up with the stream.\nStream-level metric name: GetRecords.IteratorAgeMilliseconds\nDimensions: StreamName, ShardId\nStatistics: Minimum, Maximum, Average, Samples\nUnits: Milliseconds OutgoingBytes\n\nThe number of bytes retrieved from the shard, measured over the specified time period. Minimum, Maximum, and Average statistics represent the bytes returned in a single GetRecords operation or published in a single SubscribeToShard event for the shard in the specified time period.\nStream-level metric name: GetRecords.Bytes\nDimensions: StreamName, ShardId\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Bytes OutgoingRecords\n\nThe number of records retrieved from the shard, measured over the specified time period. Minimum, Maximum, and Average statistics represent the records returned in a single GetRecords operation or published in a single SubscribeToShard event for the shard in the specified time period.\nStream-level metric name: GetRecords.Records\nDimensions: StreamName, ShardId\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count ReadProvisionedThroughputExceeded\n\nThe number of GetRecords calls throttled for the shard over the specified time period. This exception count covers all dimensions of the following limits: 5 reads per shard per second or 2 MB per second per shard. The most commonly used statistic for this metric is Average.\nWhen the Minimum statistic has a value of 1, all records were throttled for the shard during the specified time period. \nWhen the Maximum statistic has a value of 0 (zero), no records were throttled for the shard during the specified time period.\nStream-level metric name: ReadProvisionedThroughputExceeded\nDimensions: StreamName, ShardId\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count WriteProvisionedThroughputExceeded\n\nThe number of records rejected due to throttling for the shard over the specified time period. This metric includes throttling from PutRecord and PutRecords operations and covers all dimensions of the following limits: 1,000 records per second per shard or 1 MB per second per shard. The most commonly used statistic for this metric is Average.\nWhen the Minimum statistic has a non-zero value, records were being throttled for the shard during the specified time period. \nWhen the Maximum statistic has a value of 0 (zero), no records were being throttled for the shard during the specified time period.\nStream-level metric name: WriteProvisionedThroughputExceeded\nDimensions: StreamName, ShardId\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics-shard",
"main_header": "Enhanced Shard-level Metrics",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"h3": {
"urllink": "#kinesis-metrics-shard",
"text": "Enhanced Shard-level Metrics"
},
"links": [],
"text": "Metric\nDescription IncomingBytes\n\nThe number of bytes successfully put to the shard over the specified time period. This metric includes bytes from PutRecord and PutRecords operations. Minimum, Maximum, and Average statistics represent the bytes in a single put operation for the shard in the specified time period.\nStream-level metric name: IncomingBytes\nDimensions: StreamName, ShardId\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Bytes IncomingRecords\n\nThe number of records successfully put to the shard over the specified time period. This metric includes record counts from PutRecord and PutRecords operations. Minimum, Maximum, and Average statistics represent the records in a single put operation for the shard in the specified time period.\nStream-level metric name: IncomingRecords\nDimensions: StreamName, ShardId\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count IteratorAgeMilliseconds\n\nThe age of the last record in all GetRecords calls made against a shard, measured over the specified time period. Age is the difference between the current time and when the last record of the GetRecords call was written to the stream. The Minimum and Maximum statistics can be used to track the progress of Kinesis consumer applications. A value of 0 (zero) indicates that the records being read are completely caught up with the stream.\nStream-level metric name: GetRecords.IteratorAgeMilliseconds\nDimensions: StreamName, ShardId\nStatistics: Minimum, Maximum, Average, Samples\nUnits: Milliseconds OutgoingBytes\n\nThe number of bytes retrieved from the shard, measured over the specified time period. Minimum, Maximum, and Average statistics represent the bytes returned in a single GetRecords operation or published in a single SubscribeToShard event for the shard in the specified time period.\nStream-level metric name: GetRecords.Bytes\nDimensions: StreamName, ShardId\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Bytes OutgoingRecords\n\nThe number of records retrieved from the shard, measured over the specified time period. Minimum, Maximum, and Average statistics represent the records returned in a single GetRecords operation or published in a single SubscribeToShard event for the shard in the specified time period.\nStream-level metric name: GetRecords.Records\nDimensions: StreamName, ShardId\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count ReadProvisionedThroughputExceeded\n\nThe number of GetRecords calls throttled for the shard over the specified time period. This exception count covers all dimensions of the following limits: 5 reads per shard per second or 2 MB per second per shard. The most commonly used statistic for this metric is Average.\nWhen the Minimum statistic has a value of 1, all records were throttled for the shard during the specified time period. \nWhen the Maximum statistic has a value of 0 (zero), no records were throttled for the shard during the specified time period.\nStream-level metric name: ReadProvisionedThroughputExceeded\nDimensions: StreamName, ShardId\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count WriteProvisionedThroughputExceeded\n\nThe number of records rejected due to throttling for the shard over the specified time period. This metric includes throttling from PutRecord and PutRecords operations and covers all dimensions of the following limits: 1,000 records per second per shard or 1 MB per second per shard. The most commonly used statistic for this metric is Average.\nWhen the Minimum statistic has a non-zero value, records were being throttled for the shard during the specified time period. \nWhen the Maximum statistic has a value of 0 (zero), no records were being throttled for the shard during the specified time period.\nStream-level metric name: WriteProvisionedThroughputExceeded\nDimensions: StreamName, ShardId\nStatistics: Minimum, Maximum, Average, Sum, Samples\nUnits: Count",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics-shard",
"main_header": "Enhanced Shard-level Metrics",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"h3": {
"urllink": "#kinesis-metricdimensions",
"text": "Dimensions for Amazon Kinesis Data Streams Metrics"
},
"links": [],
"text": "Dimension Description StreamName The name of the Kinesis stream. All available statistics are filtered by StreamName.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metricdimensions",
"main_header": "Dimensions for Amazon Kinesis Data Streams Metrics",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"h3": {
"urllink": "#kinesis-metricdimensions",
"text": "Dimensions for Amazon Kinesis Data Streams Metrics"
},
"links": [],
"text": "Dimension Description StreamName The name of the Kinesis stream. All available statistics are filtered by StreamName.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metricdimensions",
"main_header": "Dimensions for Amazon Kinesis Data Streams Metrics",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"h3": {
"urllink": "#kinesis-metric-use",
"text": "Recommended Amazon Kinesis Data Streams Metrics"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#record-processing-falls-behind",
"title": "Consumer Record Processing Falling Behind"
}
],
"text": "Metric\nUsage Notes GetRecords.IteratorAgeMilliseconds Tracks the read position across all shards and consumers in the stream. If an iterator's age passes 50% of the retention period (by default, 24 hours, configurable up to 7 days), there is risk for data loss due to record expiration. We recommend that you use CloudWatch alarms on the Maximum statistic to alert you before this loss is a risk. For an example scenario that uses this metric, see Consumer Record Processing Falling Behind. ReadProvisionedThroughputExceeded When your consumer-side record processing is falling behind, it is sometimes difficult to know where the bottleneck is. Use this metric to determine if your reads are being throttled due to exceeding your read throughput limits. The most commonly used statistic for this metric is Average. WriteProvisionedThroughputExceeded\nThis is for the same purpose as the ReadProvisionedThroughputExceeded metric, but for the producer (put) side of the stream. The most commonly used statistic for this metric is Average. PutRecord.Success, PutRecords.Success\nWe recommend using CloudWatch alarms on the Average statistic to indicate when records are failing to the stream. Choose one or both put types depending on what your producer uses. If using the Kinesis Producer Library (KPL), use PutRecords.Success. GetRecords.Success\nWe recommend using CloudWatch alarms on the Average statistic to indicate when records are failing from the stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metric-use",
"main_header": "Recommended Amazon Kinesis Data Streams Metrics",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"h3": {
"urllink": "#kinesis-metric-use",
"text": "Recommended Amazon Kinesis Data Streams Metrics"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#record-processing-falls-behind",
"title": "Consumer Record Processing Falling Behind"
}
],
"text": "Metric\nUsage Notes GetRecords.IteratorAgeMilliseconds Tracks the read position across all shards and consumers in the stream. If an iterator's age passes 50% of the retention period (by default, 24 hours, configurable up to 7 days), there is risk for data loss due to record expiration. We recommend that you use CloudWatch alarms on the Maximum statistic to alert you before this loss is a risk. For an example scenario that uses this metric, see Consumer Record Processing Falling Behind. ReadProvisionedThroughputExceeded When your consumer-side record processing is falling behind, it is sometimes difficult to know where the bottleneck is. Use this metric to determine if your reads are being throttled due to exceeding your read throughput limits. The most commonly used statistic for this metric is Average. WriteProvisionedThroughputExceeded\nThis is for the same purpose as the ReadProvisionedThroughputExceeded metric, but for the producer (put) side of the stream. The most commonly used statistic for this metric is Average. PutRecord.Success, PutRecords.Success\nWe recommend using CloudWatch alarms on the Average statistic to indicate when records are failing to the stream. Choose one or both put types depending on what your producer uses. If using the Kinesis Producer Library (KPL), use PutRecords.Success. GetRecords.Success\nWe recommend using CloudWatch alarms on the Average statistic to indicate when records are failing from the stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metric-use",
"main_header": "Recommended Amazon Kinesis Data Streams Metrics",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#cloudwatch-metrics",
"text": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams"
},
"links": [
{
"url": "https://console.aws.amazon.com/cloudwatch/",
"title": "https://console.aws.amazon.com/cloudwatch/"
}
],
"text": "To access metrics using the CloudWatch consoleOpen the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.\nOn the navigation bar, choose a Region.\n\nIn the navigation pane, choose Metrics.\n\nIn the CloudWatch Metrics by Category pane, choose Kinesis Metrics.\n\nClick the relevant row to view the statistics for the specified MetricName and StreamName. \nNote: Most console statistic names match the corresponding CloudWatch metric names listed above, except for Read Throughput and Write Throughput. These statistics are calculated over 5-minute intervals: Write Throughput monitors the IncomingBytes CloudWatch metric, and Read Throughput monitors GetRecords.Bytes.\n\n(Optional) In the graph pane, select a statistic and a time period, and then create a CloudWatch alarm using these settings.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#cloudwatch-metrics",
"main_header": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#cloudwatch-metrics",
"text": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams"
},
"links": [],
"text": "To access metrics using the CloudWatch console",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#cloudwatch-metrics",
"main_header": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#agent-health",
"text": "Monitoring Kinesis Data Streams Agent Health with Amazon CloudWatch"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/agent-health.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/agent-health.html#agent-health",
"main_header": "Monitoring Kinesis Data Streams Agent Health with Amazon CloudWatch",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#agent-health",
"text": "Monitoring Kinesis Data Streams Agent Health with Amazon CloudWatch"
},
"h2": {
"urllink": "#agent-metrics",
"text": "Monitoring with CloudWatch"
},
"links": [],
"text": "Metric\nDescription BytesSent\n\nThe number of bytes sent to Kinesis Data Streams over the specified time period.\nUnits: Bytes RecordSendAttempts\n\nThe number of records attempted (either first time, or as a retry) in a call to PutRecords over the specified time period.\nUnits: Count RecordSendErrors\n\nThe number of records that returned failure status in a call to PutRecords, including retries, over the specified time period.\nUnits: Count ServiceErrors\n\nThe number of calls to PutRecords that resulted in a service error (other than a throttling error) over the specified time period. \nUnits: Count",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/agent-health.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/agent-health.html#agent-metrics",
"main_header": "Monitoring with CloudWatch",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#agent-health",
"text": "Monitoring Kinesis Data Streams Agent Health with Amazon CloudWatch"
},
"h2": {
"urllink": "#agent-metrics",
"text": "Monitoring with CloudWatch"
},
"links": [],
"text": "Metric\nDescription BytesSent\n\nThe number of bytes sent to Kinesis Data Streams over the specified time period.\nUnits: Bytes RecordSendAttempts\n\nThe number of records attempted (either first time, or as a retry) in a call to PutRecords over the specified time period.\nUnits: Count RecordSendErrors\n\nThe number of records that returned failure status in a call to PutRecords, including retries, over the specified time period.\nUnits: Count ServiceErrors\n\nThe number of calls to PutRecords that resulted in a service error (other than a throttling error) over the specified time period. \nUnits: Count",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/agent-health.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/agent-health.html#agent-metrics",
"main_header": "Monitoring with CloudWatch",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#logging-using-cloudtrail",
"text": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html#logging-using-cloudtrail",
"main_header": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#logging-using-cloudtrail",
"text": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail"
},
"h2": {
"urllink": "#service-name-info-in-cloudtrail",
"text": "Kinesis Data Streams Information in CloudTrail"
},
"links": [
{
"url": "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-create-and-update-a-trail.html",
"title": "Overview for Creating a Trail"
},
{
"url": "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-aws-service-specific-topics.html#cloudtrail-aws-service-specific-topics-integrations",
"title": "CloudTrail Supported Services and Integrations"
},
{
"url": "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/getting_notifications_top_level.html",
"title": "Configuring Amazon SNS Notifications for CloudTrail"
},
{
"url": "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html",
"title": "Receiving CloudTrail Log Files from Multiple Regions"
},
{
"url": "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-receive-logs-from-multiple-accounts.html",
"title": "Receiving CloudTrail Log Files from Multiple Accounts"
}
],
"text": "Overview for Creating a Trail\n\nCloudTrail Supported Services and Integrations\n\nConfiguring Amazon SNS Notifications for CloudTrail\n\nReceiving CloudTrail Log Files from Multiple Regions and Receiving CloudTrail Log Files from Multiple Accounts",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html#service-name-info-in-cloudtrail",
"main_header": "Kinesis Data Streams Information in CloudTrail",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#logging-using-cloudtrail",
"text": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail"
},
"h2": {
"urllink": "#service-name-info-in-cloudtrail",
"text": "Kinesis Data Streams Information in CloudTrail"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_AddTagsToStream.html",
"title": "AddTagsToStream"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_CreateStream.html",
"title": "CreateStream"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DecreaseStreamRetentionPeriod.html",
"title": "DecreaseStreamRetentionPeriod"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DeleteStream.html",
"title": "DeleteStream"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DeregisterStreamConsumer.html",
"title": "DeregisterStreamConsumer"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DescribeStream.html",
"title": "DescribeStream"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DescribeStreamConsumer.html",
"title": "DescribeStreamConsumer"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DisableEnhancedMonitoring.html",
"title": "DisableEnhancedMonitoring"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_EnableEnhancedMonitoring.html",
"title": "EnableEnhancedMonitoring"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_IncreaseStreamRetentionPeriod.html",
"title": "IncreaseStreamRetentionPeriod"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ListStreamConsumers.html",
"title": "ListStreamConsumers"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ListStreams.html",
"title": "ListStreams"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ListTagsForStream.html",
"title": "ListTagsForStream"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_MergeShards.html",
"title": "MergeShards"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_RegisterStreamConsumer.html",
"title": "RegisterStreamConsumer"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_RemoveTagsFromStream.html",
"title": "RemoveTagsFromStream"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_SplitShard.html",
"title": "SplitShard"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_StartStreamEncryption.html",
"title": "StartStreamEncryption"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_StopStreamEncryption.html",
"title": "StopStreamEncryption"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_UpdateShardCount.html",
"title": "UpdateShardCount"
}
],
"text": "AddTagsToStream\n\nCreateStream\n\nDecreaseStreamRetentionPeriod\n\nDeleteStream\n\nDeregisterStreamConsumer\n\nDescribeStream\n\nDescribeStreamConsumer\n\nDisableEnhancedMonitoring\n\nEnableEnhancedMonitoring\n\nIncreaseStreamRetentionPeriod\n\nListStreamConsumers\n\nListStreams\n\nListTagsForStream\n\nMergeShards\n\nRegisterStreamConsumer\n\nRemoveTagsFromStream\n\nSplitShard\n\nStartStreamEncryption\n\nStopStreamEncryption\n\nUpdateShardCount",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html#service-name-info-in-cloudtrail",
"main_header": "Kinesis Data Streams Information in CloudTrail",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#logging-using-cloudtrail",
"text": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail"
},
"h2": {
"urllink": "#service-name-info-in-cloudtrail",
"text": "Kinesis Data Streams Information in CloudTrail"
},
"links": [],
"text": "Whether the request was made with root or AWS Identity and Access Management (IAM) user credentials.\n\nWhether the request was made with temporary security credentials for a role or federated user.\n\nWhether the request was made by another AWS service.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html#service-name-info-in-cloudtrail",
"main_header": "Kinesis Data Streams Information in CloudTrail",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#monitoring-with-kcl",
"main_header": "Monitoring the Kinesis Client Library with Amazon CloudWatch",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#metrics-namespace",
"title": "Metrics and Namespace"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#metric-levels",
"title": "Metric Levels and Dimensions"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#metrics-config",
"title": "Metric Configuration"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-list",
"title": "List of Metrics"
}
],
"text": "TopicsMetrics and NamespaceMetric Levels and DimensionsMetric ConfigurationList of Metrics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#monitoring-with-kcl",
"main_header": "Monitoring the Kinesis Client Library with Amazon CloudWatch",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#monitoring-with-kcl",
"main_header": "Monitoring the Kinesis Client Library with Amazon CloudWatch",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#metric-levels",
"text": "Metric Levels and Dimensions"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-list",
"title": "List of Metrics"
},
{
"url": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Dimension",
"title": "Dimensions"
}
],
"text": "metric levels\n\nEvery metric is assigned an individual level. When you set a metrics reporting level, metrics with an individual level below the reporting level are not sent to CloudWatch. The levels are: NONE, SUMMARY, and DETAILED. The default setting is DETAILED; that is, all metrics are sent to CloudWatch. A reporting level of NONE means that no metrics are sent at all. For information about which levels are assigned to what metrics, see List of Metrics.\n\nenabled dimensions\n\nEvery KCL metric has associated dimensions that also get sent to CloudWatch. In KCL 2.x, if KCL is configured to process a single data stream, all the metrics dimensions (Operation, ShardId, and WorkerIdentifier) are enabled by default. Also, in KCL 2.x, if KCL is configured to process a single data stream, Operation dimension cannot be disabled. In KCL 2.x, if KCL is configured to process multiple data streams, all the metrics dimentions (Operation, ShardId, StreamId, and WorkerIdentifier) are enabled by default. Also, in KCL 2.x, if KCL is configured to process multiple data streams, the Operation and the StreamId dimensions cannot be disabled. StreamId dimention is available only for the per-shard metrics.\n In KCL 1.x, only the Operation and the ShardId dimensions are enabled by default, and the WorkerIdentifier dimension is disabled. In KCL 1.x, the Operation dimension cannot be disabled.\nFor more information about CloudWatch metric dimensions, see the Dimensions section in the Amazon CloudWatch Concepts topic, in the Amazon CloudWatch User Guide.\nWhen the WorkerIdentifier dimension is enabled, if a different value is used for the worker ID property every time a particular KCL worker restarts, new sets of metrics with new WorkerIdentifier dimension values are sent to CloudWatch. If you need the WorkerIdentifier dimension value to be the same across specific KCL worker restarts, you must explicitly specify the same worker ID value during initialization for each worker. Note that the worker ID value for each active KCL worker must be unique across all KCL workers.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#metric-levels",
"main_header": "Metric Levels and Dimensions",
"images": [],
"container_type": "div",
"children_tags": [
"dl"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-per-app",
"title": "Per-KCL-Application Metrics"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-per-worker",
"title": "Per-Worker Metrics"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-per-shard",
"title": "Per-Shard Metrics"
}
],
"text": "TopicsPer-KCL-Application MetricsPer-Worker MetricsPer-Shard Metrics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-list",
"main_header": "List of Metrics",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-list",
"main_header": "List of Metrics",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#init-task",
"title": "InitializeTask"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#shutdown-task",
"title": "ShutdownTask"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#shard-sync-task",
"title": "ShardSyncTask"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#block-parent-task",
"title": "BlockOnParentTask"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#periodic-task",
"title": "PeriodicShardSyncManager"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#multi-task",
"title": "MultistreamTracker"
}
],
"text": "TopicsInitializeTaskShutdownTaskShardSyncTaskBlockOnParentTaskPeriodicShardSyncManagerMultistreamTracker",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-per-app",
"main_header": "Per-KCL-Application Metrics",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-per-app",
"main_header": "Per-KCL-Application Metrics",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#init-task",
"text": "InitializeTask"
},
"links": [],
"text": "Metric\nDescription KinesisDataFetcher.getIterator.Success\n\nNumber of successful GetShardIterator operations per KCL application. \nMetric level: Detailed\nUnits: Count KinesisDataFetcher.getIterator.Time\n\nTime taken per GetShardIterator operation for the given KCL application.\nMetric level: Detailed\nUnits: Milliseconds RecordProcessor.initialize.Time\n\nTime taken by the record processor\u00e2\u0080\u0099s initialize method.\nMetric level: Summary\nUnits: Milliseconds Success\n\nNumber of successful record processor initializations. \nMetric level: Summary\nUnits: Count Time\n\nTime taken by the KCL worker for the record processor initialization.\nMetric level: Summary\nUnits: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#init-task",
"main_header": "InitializeTask",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#init-task",
"text": "InitializeTask"
},
"links": [],
"text": "Metric\nDescription KinesisDataFetcher.getIterator.Success\n\nNumber of successful GetShardIterator operations per KCL application. \nMetric level: Detailed\nUnits: Count KinesisDataFetcher.getIterator.Time\n\nTime taken per GetShardIterator operation for the given KCL application.\nMetric level: Detailed\nUnits: Milliseconds RecordProcessor.initialize.Time\n\nTime taken by the record processor\u00e2\u0080\u0099s initialize method.\nMetric level: Summary\nUnits: Milliseconds Success\n\nNumber of successful record processor initializations. \nMetric level: Summary\nUnits: Count Time\n\nTime taken by the KCL worker for the record processor initialization.\nMetric level: Summary\nUnits: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#init-task",
"main_header": "InitializeTask",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#shutdown-task",
"text": "ShutdownTask"
},
"links": [],
"text": "Metric\nDescription CreateLease.Success\n\nNumber of times that new child shards are successfully added into the KCL application DynamoDB table following parent shard shutdown.\nMetric level: Detailed\nUnits: Count CreateLease.Time\n\nTime taken for adding new child shard information in the KCL application DynamoDB table.\nMetric level: Detailed\nUnits: Milliseconds UpdateLease.Success\n\nNumber of successful final checkpoints during the record processor shutdown.\nMetric level: Detailed\nUnits: Count UpdateLease.Time\n\nTime taken by the checkpoint operation during the record processor shutdown.\nMetric level: Detailed\nUnits: Milliseconds RecordProcessor.shutdown.Time\n\nTime taken by the record processor\u00e2\u0080\u0099s shutdown method.\nMetric level: Summary\nUnits: Milliseconds Success\n\nNumber of successful shutdown tasks.\nMetric level: Summary\nUnits: Count Time\n\nTime taken by the KCL worker for the shutdown task.\nMetric level: Summary\nUnits: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#shutdown-task",
"main_header": "ShutdownTask",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#shutdown-task",
"text": "ShutdownTask"
},
"links": [],
"text": "Metric\nDescription CreateLease.Success\n\nNumber of times that new child shards are successfully added into the KCL application DynamoDB table following parent shard shutdown.\nMetric level: Detailed\nUnits: Count CreateLease.Time\n\nTime taken for adding new child shard information in the KCL application DynamoDB table.\nMetric level: Detailed\nUnits: Milliseconds UpdateLease.Success\n\nNumber of successful final checkpoints during the record processor shutdown.\nMetric level: Detailed\nUnits: Count UpdateLease.Time\n\nTime taken by the checkpoint operation during the record processor shutdown.\nMetric level: Detailed\nUnits: Milliseconds RecordProcessor.shutdown.Time\n\nTime taken by the record processor\u00e2\u0080\u0099s shutdown method.\nMetric level: Summary\nUnits: Milliseconds Success\n\nNumber of successful shutdown tasks.\nMetric level: Summary\nUnits: Count Time\n\nTime taken by the KCL worker for the shutdown task.\nMetric level: Summary\nUnits: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#shutdown-task",
"main_header": "ShutdownTask",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#shard-sync-task",
"text": "ShardSyncTask"
},
"links": [],
"text": "Metric\nDescription CreateLease.Success\n\nNumber of successful attempts to add new shard information into the KCL application DynamoDB table.\nMetric level: Detailed\nUnits: Count CreateLease.Time\n\nTime taken for adding new shard information in the KCL application DynamoDB table.\nMetric level: Detailed\nUnits: Milliseconds Success\n\nNumber of successful shard sync operations.\nMetric level: Summary\nUnits: Count Time\n\nTime taken for the shard sync operation.\nMetric level: Summary\nUnits: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#shard-sync-task",
"main_header": "ShardSyncTask",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#shard-sync-task",
"text": "ShardSyncTask"
},
"links": [],
"text": "Metric\nDescription CreateLease.Success\n\nNumber of successful attempts to add new shard information into the KCL application DynamoDB table.\nMetric level: Detailed\nUnits: Count CreateLease.Time\n\nTime taken for adding new shard information in the KCL application DynamoDB table.\nMetric level: Detailed\nUnits: Milliseconds Success\n\nNumber of successful shard sync operations.\nMetric level: Summary\nUnits: Count Time\n\nTime taken for the shard sync operation.\nMetric level: Summary\nUnits: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#shard-sync-task",
"main_header": "ShardSyncTask",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#block-parent-task",
"text": "BlockOnParentTask"
},
"links": [],
"text": "Metric\nDescription Success\n\nNumber of successful checks for parent shard completion.\nMetric level: Summary\nUnits: Count Time\n\nTime taken for parent shards completion.\nMetric level: Summary\nUnit: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#block-parent-task",
"main_header": "BlockOnParentTask",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#block-parent-task",
"text": "BlockOnParentTask"
},
"links": [],
"text": "Metric\nDescription Success\n\nNumber of successful checks for parent shard completion.\nMetric level: Summary\nUnits: Count Time\n\nTime taken for parent shards completion.\nMetric level: Summary\nUnit: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#block-parent-task",
"main_header": "BlockOnParentTask",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#periodic-task",
"text": "PeriodicShardSyncManager"
},
"links": [],
"text": "Metric\nDescription NumStreamsToSync\n\nThe number of data streams (per AWS account) being processed by the consumer application that contain partial leases and that must be handed off for synchronization. \nMetric level: Summary\nUnits: Count NumStreamsWithPartialLeases\n\nThe number of data streams (per AWS account) that the consumer application is processing that contain partial leases. \nMetric level: Summary\nUnits: Count Success\n\nThe number of times PeriodicShardSyncManager was able to successfully identify partial leases in the data streams that the consumer application is processing. \nMetric level: Summary\nUnits: Count Time\n\nThe amount of the time (in miliseconds) that the PeriodicShardSyncManager takes to examine the data streams that the consumer application is processing, in order to determine which data streams require shard synchronization. \nMetric level: Summary\nUnits: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#periodic-task",
"main_header": "PeriodicShardSyncManager",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#periodic-task",
"text": "PeriodicShardSyncManager"
},
"links": [],
"text": "Metric\nDescription NumStreamsToSync\n\nThe number of data streams (per AWS account) being processed by the consumer application that contain partial leases and that must be handed off for synchronization. \nMetric level: Summary\nUnits: Count NumStreamsWithPartialLeases\n\nThe number of data streams (per AWS account) that the consumer application is processing that contain partial leases. \nMetric level: Summary\nUnits: Count Success\n\nThe number of times PeriodicShardSyncManager was able to successfully identify partial leases in the data streams that the consumer application is processing. \nMetric level: Summary\nUnits: Count Time\n\nThe amount of the time (in miliseconds) that the PeriodicShardSyncManager takes to examine the data streams that the consumer application is processing, in order to determine which data streams require shard synchronization. \nMetric level: Summary\nUnits: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#periodic-task",
"main_header": "PeriodicShardSyncManager",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#multi-task",
"text": "MultistreamTracker"
},
"links": [],
"text": "Metric\nDescription DeletedStreams.Count\n\nThe number of data streams deleted at this time period.\nMetric level: Summary\nUnits: Count ActiveStreams.Count\n\nThe number of active data streams being processed.\nMetric level: Summary\nUnits: Count StreamsPendingDeletion.Count\n\nThe number of data streams that are pending deletion based on FormerStreamsLeasesDeletionStrategy. \nMetric level: Summary\nUnits: Count",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#multi-task",
"main_header": "MultistreamTracker",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#multi-task",
"text": "MultistreamTracker"
},
"links": [],
"text": "Metric\nDescription DeletedStreams.Count\n\nThe number of data streams deleted at this time period.\nMetric level: Summary\nUnits: Count ActiveStreams.Count\n\nThe number of active data streams being processed.\nMetric level: Summary\nUnits: Count StreamsPendingDeletion.Count\n\nThe number of data streams that are pending deletion based on FormerStreamsLeasesDeletionStrategy. \nMetric level: Summary\nUnits: Count",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#multi-task",
"main_header": "MultistreamTracker",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-worker",
"text": "Per-Worker Metrics"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#renew-leases",
"title": "RenewAllLeases"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#take-leases",
"title": "TakeLeases"
}
],
"text": "TopicsRenewAllLeasesTakeLeases",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-per-worker",
"main_header": "Per-Worker Metrics",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-worker",
"text": "Per-Worker Metrics"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-per-worker",
"main_header": "Per-Worker Metrics",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-worker",
"text": "Per-Worker Metrics"
},
"h4": {
"urllink": "#renew-leases",
"text": "RenewAllLeases"
},
"links": [],
"text": "Metric\nDescription RenewLease.Success\n\nNumber of successful lease renewals by the worker.\nMetric level: Detailed\nUnits: Count RenewLease.Time\n\nTime taken by the lease renewal operation.\nMetric level: Detailed\nUnits: Milliseconds CurrentLeases\n\nNumber of shard leases owned by the worker after all leases are renewed.\nMetric level: Summary\nUnits: Count LostLeases\n\nNumber of shard leases that were lost following an attempt to renew all leases owned by the worker.\nMetric level: Summary\nUnits: Count Success\n\nNumber of times lease renewal operation was successful for the worker.\nMetric level: Summary\nUnits: Count Time\n\nTime taken for renewing all leases for the worker.\nMetric level: Summary\nUnits: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#renew-leases",
"main_header": "RenewAllLeases",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-worker",
"text": "Per-Worker Metrics"
},
"h4": {
"urllink": "#renew-leases",
"text": "RenewAllLeases"
},
"links": [],
"text": "Metric\nDescription RenewLease.Success\n\nNumber of successful lease renewals by the worker.\nMetric level: Detailed\nUnits: Count RenewLease.Time\n\nTime taken by the lease renewal operation.\nMetric level: Detailed\nUnits: Milliseconds CurrentLeases\n\nNumber of shard leases owned by the worker after all leases are renewed.\nMetric level: Summary\nUnits: Count LostLeases\n\nNumber of shard leases that were lost following an attempt to renew all leases owned by the worker.\nMetric level: Summary\nUnits: Count Success\n\nNumber of times lease renewal operation was successful for the worker.\nMetric level: Summary\nUnits: Count Time\n\nTime taken for renewing all leases for the worker.\nMetric level: Summary\nUnits: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#renew-leases",
"main_header": "RenewAllLeases",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-worker",
"text": "Per-Worker Metrics"
},
"h4": {
"urllink": "#take-leases",
"text": "TakeLeases"
},
"links": [],
"text": "Metric\nDescription ListLeases.Success\n\nNumber of times all shard leases were successfully retrieved from the KCL application DynamoDB table.\nMetric level: Detailed\nUnits: Count ListLeases.Time\n\nTime taken to retrieve all shard leases from the KCL application DynamoDB table.\nMetric level: Detailed\nUnits: Milliseconds TakeLease.Success\n\nNumber of times the worker successfully took shard leases from other KCL workers.\nMetric level: Detailed\nUnits: Count TakeLease.Time\n\nTime taken to update the lease table with leases taken by the worker.\nMetric level: Detailed\nUnits: Milliseconds NumWorkers\n\nTotal number of workers, as identified by a specific worker.\nMetric level: Summary\nUnits: Count NeededLeases\n\nNumber of shard leases that the current worker needs for a balanced shard-processing load.\nMetric level: Detailed\nUnits: Count LeasesToTake\n\nNumber of leases that the worker will attempt to take.\nMetric level: Detailed\nUnits: Count TakenLeases\n\nNumber of leases taken successfully by the worker.\nMetric level: Summary\nUnits: Count TotalLeases\n\nTotal number of shards that the KCL application is processing.\nMetric level: Detailed\nUnits: Count ExpiredLeases\n\nTotal number of shards that are not being processed by any worker, as identified by the specific worker.\nMetric level: Summary\nUnits: Count Success\n\nNumber of times the TakeLeases operation successfully completed.\nMetric level: Summary\nUnits: Count Time\n\nTime taken by the TakeLeases operation for a worker.\nMetric level: Summary\nUnits: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#take-leases",
"main_header": "TakeLeases",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-worker",
"text": "Per-Worker Metrics"
},
"h4": {
"urllink": "#take-leases",
"text": "TakeLeases"
},
"links": [],
"text": "Metric\nDescription ListLeases.Success\n\nNumber of times all shard leases were successfully retrieved from the KCL application DynamoDB table.\nMetric level: Detailed\nUnits: Count ListLeases.Time\n\nTime taken to retrieve all shard leases from the KCL application DynamoDB table.\nMetric level: Detailed\nUnits: Milliseconds TakeLease.Success\n\nNumber of times the worker successfully took shard leases from other KCL workers.\nMetric level: Detailed\nUnits: Count TakeLease.Time\n\nTime taken to update the lease table with leases taken by the worker.\nMetric level: Detailed\nUnits: Milliseconds NumWorkers\n\nTotal number of workers, as identified by a specific worker.\nMetric level: Summary\nUnits: Count NeededLeases\n\nNumber of shard leases that the current worker needs for a balanced shard-processing load.\nMetric level: Detailed\nUnits: Count LeasesToTake\n\nNumber of leases that the worker will attempt to take.\nMetric level: Detailed\nUnits: Count TakenLeases\n\nNumber of leases taken successfully by the worker.\nMetric level: Summary\nUnits: Count TotalLeases\n\nTotal number of shards that the KCL application is processing.\nMetric level: Detailed\nUnits: Count ExpiredLeases\n\nTotal number of shards that are not being processed by any worker, as identified by the specific worker.\nMetric level: Summary\nUnits: Count Success\n\nNumber of times the TakeLeases operation successfully completed.\nMetric level: Summary\nUnits: Count Time\n\nTime taken by the TakeLeases operation for a worker.\nMetric level: Summary\nUnits: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#take-leases",
"main_header": "TakeLeases",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-shard",
"text": "Per-Shard Metrics"
},
"h4": {
"urllink": "#process-task",
"text": "ProcessTask"
},
"links": [],
"text": "Metric\nDescription KinesisDataFetcher.getRecords.Success\n\nNumber of successful GetRecords operations per Kinesis data stream shard. \nMetric level: Detailed\nUnits: Count KinesisDataFetcher.getRecords.Time\n\nTime taken per GetRecords operation for the Kinesis data stream shard.\nMetric level: Detailed\nUnits: Milliseconds UpdateLease.Success\n\nNumber of successful checkpoints made by the record processor for the given shard.\nMetric level: Detailed\nUnits: Count UpdateLease.Time\n\nTime taken for each checkpoint operation for the given shard.\nMetric level: Detailed\nUnits: Milliseconds DataBytesProcessed\n\nTotal size of records processed in bytes on each ProcessTask invocation.\nMetric level: Summary\nUnits: Byte RecordsProcessed\n\nNumber of records processed on each ProcessTask invocation.\nMetric level: Summary\nUnits: Count ExpiredIterator\n\nNumber of ExpiredIteratorException received when calling GetRecords.\nMetric level: Summary\nUnits: Count MillisBehindLatest\nTime that the current iterator is behind from the latest record (tip) in the shard. This value is less than or equal to the difference in time between the latest record in a response and the current time. This is a more accurate reflection of how far a shard is from the tip than comparing time stamps in the last response record. This value applies to the latest batch of records, not an average of all time stamps in each record.Metric level: SummaryUnits: Milliseconds RecordProcessor.processRecords.Time\n\nTime taken by the record processor\u00e2\u0080\u0099s processRecords method.\nMetric level: Summary\nUnits: Milliseconds Success\n\nNumber of successful process task operations.\nMetric level: Summary\nUnits: Count Time\n\nTime taken for the process task operation.\nMetric level: Summary\nUnits: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#process-task",
"main_header": "ProcessTask",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-shard",
"text": "Per-Shard Metrics"
},
"h4": {
"urllink": "#process-task",
"text": "ProcessTask"
},
"links": [],
"text": "Metric\nDescription KinesisDataFetcher.getRecords.Success\n\nNumber of successful GetRecords operations per Kinesis data stream shard. \nMetric level: Detailed\nUnits: Count KinesisDataFetcher.getRecords.Time\n\nTime taken per GetRecords operation for the Kinesis data stream shard.\nMetric level: Detailed\nUnits: Milliseconds UpdateLease.Success\n\nNumber of successful checkpoints made by the record processor for the given shard.\nMetric level: Detailed\nUnits: Count UpdateLease.Time\n\nTime taken for each checkpoint operation for the given shard.\nMetric level: Detailed\nUnits: Milliseconds DataBytesProcessed\n\nTotal size of records processed in bytes on each ProcessTask invocation.\nMetric level: Summary\nUnits: Byte RecordsProcessed\n\nNumber of records processed on each ProcessTask invocation.\nMetric level: Summary\nUnits: Count ExpiredIterator\n\nNumber of ExpiredIteratorException received when calling GetRecords.\nMetric level: Summary\nUnits: Count MillisBehindLatest\nTime that the current iterator is behind from the latest record (tip) in the shard. This value is less than or equal to the difference in time between the latest record in a response and the current time. This is a more accurate reflection of how far a shard is from the tip than comparing time stamps in the last response record. This value applies to the latest batch of records, not an average of all time stamps in each record.Metric level: SummaryUnits: Milliseconds RecordProcessor.processRecords.Time\n\nTime taken by the record processor\u00e2\u0080\u0099s processRecords method.\nMetric level: Summary\nUnits: Milliseconds Success\n\nNumber of successful process task operations.\nMetric level: Summary\nUnits: Count Time\n\nTime taken for the process task operation.\nMetric level: Summary\nUnits: Milliseconds",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#process-task",
"main_header": "ProcessTask",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#monitoring-with-kpl",
"main_header": "Monitoring the Kinesis Producer Library with Amazon CloudWatch",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics",
"title": "Metrics, Dimensions, and Namespaces"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics-granularity",
"title": "Metric Level and Granularity"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics-local-upload",
"title": "Local Access and Amazon CloudWatch Upload"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics-list",
"title": "List of Metrics"
}
],
"text": "TopicsMetrics, Dimensions, and Namespaces Metric Level and Granularity Local Access and Amazon CloudWatch UploadList of Metrics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#monitoring-with-kpl",
"main_header": "Monitoring the Kinesis Producer Library with Amazon CloudWatch",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#monitoring-with-kpl",
"main_header": "Monitoring the Kinesis Producer Library with Amazon CloudWatch",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kpl-metrics-granularity",
"text": "Metric Level and Granularity"
},
"links": [],
"text": "metric level\n\nThis is a rough gauge of how important a metric is. Every metric is assigned a level. When you set a level, metrics with levels below that are not sent to CloudWatch. The levels are NONE, SUMMARY, and DETAILED. The default setting is DETAILED; that is, all metrics. NONE means no metrics at all, so no metrics are actually assigned to that level.\n\ngranularity\n\nThis controls whether the same metric is emitted at additional levels of granularity. The levels are GLOBAL, STREAM, and SHARD. The default setting is SHARD, which contains the most granular metrics.\nWhen SHARD is chosen, metrics are emitted with the stream name and shard ID as dimensions. In addition, the same metric is also emitted with only the stream name dimension, and the metric without the stream name. This means that, for a particular metric, two streams with two shards each will produce seven CloudWatch metrics: one for each shard, one for each stream, and one overall; all describing the same statistics but at different levels of granularity. For an illustration, see the following diagram.\nThe different granularity levels form a hierarchy, and all the metrics in the system form trees, rooted at the metric names:\nMetricName (GLOBAL): Metric X Metric Y | | ----------------- ------------ | | | |\nStreamName (STREAM): Stream A Stream B Stream A Stream B | | -------- --------- | | | |\nShardID (SHARD): Shard 0 Shard 1  Shard 0 Shard 1\nNot all metrics are available at the shard level; some are stream level or global by nature. These are not produced at the shard level, even if you have enabled shard-level metrics (Metric Y in the preceding diagram).\nWhen you specify an additional dimension, you need to provide values for tuple:<DimensionName, DimensionValue, Granularity>. The granularity is used to determine where the custom dimension is inserted in the hierarchy: GLOBAL means that the additional dimension is inserted after the metric name, STREAM means it's inserted after the stream name, and SHARD means it's inserted after the shard ID. If multiple additional dimensions are given per granularity level, they are inserted in the order given.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics-granularity",
"main_header": "Metric Level and Granularity",
"images": [],
"container_type": "div",
"children_tags": [
"dl"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kpl-metrics-list",
"text": "List of Metrics"
},
"links": [],
"text": "Metric\nDescription UserRecordsReceived\n\nCount of how many logical user records were received by the KPL core for put operations. Not available at shard level.\nMetric level: Detailed \nUnit: Count UserRecordsPending\n\nPeriodic sample of how many user records are currently pending. A record is pending if it is either currently buffered and waiting for to be sent, or sent and in-flight to the backend service. Not available at shard level. \nThe KPL provides a dedicated method to retrieve this metric at the global level for customers to manage their put rate.\nMetric level: Detailed \nUnit: Count UserRecordsPut\n\nCount of how many logical user records were put successfully. \nThe KPL does not count failed records for this metric. This allows the average to give the success rate, the count to give the total attempts, and the difference between the count and sum to give the failure count.\nMetric level: Summary \nUnit: Count UserRecordsDataPut\n\nBytes in the logical user records successfully put.\nMetric level: Detailed \nUnit: Bytes KinesisRecordsPut\n\nCount of how many Kinesis Data Streams records were put successfully (each Kinesis Data Streams record can contain multiple user records). \nThe KPL outputs a zero for failed records. This allows the average to give the success rate, the count to give the total attempts, and the difference between the count and sum to give the failure count.\nMetric level: Summary \nUnit: Count KinesisRecordsDataPut\n\nBytes in the Kinesis Data Streams records. \nMetric level: Detailed \nUnit: Bytes ErrorsByCode\n\nCount of each type of error code. This introduces an additional dimension of ErrorCode, in addition to the normal dimensions such as StreamName and ShardId. Not every error can be traced to a shard. The errors that cannot be traced are only emitted at stream or global levels. This metric captures information about such things as throttling, shard map changes, internal failures, service unavailable, timeouts, and so on. \nKinesis Data Streams API errors are counted one time per Kinesis Data Streams record. Multiple user records within a Kinesis Data Streams record do not generate multiple counts.\nMetric level: Summary \nUnit: Count AllErrors\n\nThis is triggered by the same errors as Errors by Code, but does not distinguish between types. This is useful as a general monitor of the error rate without requiring a manual sum of the counts from all the different types of errors.\nMetric level: Summary \nUnit: Count RetriesPerRecord\n\nNumber of retries performed per user record. Zero is emitted for records that succeed in one try.\nData is emitted at the moment a user record finishes (when it either succeeds or can no longer be retried). If record time-to-live is a large value, this metric may be significantly delayed.\nMetric level: Detailed \nUnit: Count BufferingTime\n\nThe time between a user record arriving at the KPL and leaving for the backend. This information is transmitted back to the user on a per-record basis, but is also available as an aggregated statistic.\nMetric level: Summary \nUnit: Milliseconds Request Time\n\nThe time it takes to perform PutRecordsRequests.\nMetric level: Detailed \nUnit: Milliseconds User Records per Kinesis Record\n\nThe number of logical user records aggregated into a single Kinesis Data Streams record.\nMetric level: Detailed \nUnit: Count Amazon Kinesis Records per PutRecordsRequest\n\nThe number of Kinesis Data Streams records aggregated into a single PutRecordsRequest. Not available at shard level.\nMetric level: Detailed \nUnit: Count User Records per PutRecordsRequest\n\nThe total number of user records contained within a PutRecordsRequest. This is roughly equivalent to the product of the previous two metrics. Not available at shard level.\nMetric level: Detailed \nUnit: Count",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics-list",
"main_header": "List of Metrics",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kpl-metrics-list",
"text": "List of Metrics"
},
"links": [],
"text": "Metric\nDescription UserRecordsReceived\n\nCount of how many logical user records were received by the KPL core for put operations. Not available at shard level.\nMetric level: Detailed \nUnit: Count UserRecordsPending\n\nPeriodic sample of how many user records are currently pending. A record is pending if it is either currently buffered and waiting for to be sent, or sent and in-flight to the backend service. Not available at shard level. \nThe KPL provides a dedicated method to retrieve this metric at the global level for customers to manage their put rate.\nMetric level: Detailed \nUnit: Count UserRecordsPut\n\nCount of how many logical user records were put successfully. \nThe KPL does not count failed records for this metric. This allows the average to give the success rate, the count to give the total attempts, and the difference between the count and sum to give the failure count.\nMetric level: Summary \nUnit: Count UserRecordsDataPut\n\nBytes in the logical user records successfully put.\nMetric level: Detailed \nUnit: Bytes KinesisRecordsPut\n\nCount of how many Kinesis Data Streams records were put successfully (each Kinesis Data Streams record can contain multiple user records). \nThe KPL outputs a zero for failed records. This allows the average to give the success rate, the count to give the total attempts, and the difference between the count and sum to give the failure count.\nMetric level: Summary \nUnit: Count KinesisRecordsDataPut\n\nBytes in the Kinesis Data Streams records. \nMetric level: Detailed \nUnit: Bytes ErrorsByCode\n\nCount of each type of error code. This introduces an additional dimension of ErrorCode, in addition to the normal dimensions such as StreamName and ShardId. Not every error can be traced to a shard. The errors that cannot be traced are only emitted at stream or global levels. This metric captures information about such things as throttling, shard map changes, internal failures, service unavailable, timeouts, and so on. \nKinesis Data Streams API errors are counted one time per Kinesis Data Streams record. Multiple user records within a Kinesis Data Streams record do not generate multiple counts.\nMetric level: Summary \nUnit: Count AllErrors\n\nThis is triggered by the same errors as Errors by Code, but does not distinguish between types. This is useful as a general monitor of the error rate without requiring a manual sum of the counts from all the different types of errors.\nMetric level: Summary \nUnit: Count RetriesPerRecord\n\nNumber of retries performed per user record. Zero is emitted for records that succeed in one try.\nData is emitted at the moment a user record finishes (when it either succeeds or can no longer be retried). If record time-to-live is a large value, this metric may be significantly delayed.\nMetric level: Detailed \nUnit: Count BufferingTime\n\nThe time between a user record arriving at the KPL and leaving for the backend. This information is transmitted back to the user on a per-record basis, but is also available as an aggregated statistic.\nMetric level: Summary \nUnit: Milliseconds Request Time\n\nThe time it takes to perform PutRecordsRequests.\nMetric level: Detailed \nUnit: Milliseconds User Records per Kinesis Record\n\nThe number of logical user records aggregated into a single Kinesis Data Streams record.\nMetric level: Detailed \nUnit: Count Amazon Kinesis Records per PutRecordsRequest\n\nThe number of Kinesis Data Streams records aggregated into a single PutRecordsRequest. Not available at shard level.\nMetric level: Detailed \nUnit: Count User Records per PutRecordsRequest\n\nThe total number of user records contained within a PutRecordsRequest. This is roughly equivalent to the product of the previous two metrics. Not available at shard level.\nMetric level: Detailed \nUnit: Count",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics-list",
"main_header": "List of Metrics",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#security",
"text": "Security in Amazon Kinesis Data Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security.html#security",
"main_header": "Security in Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#security",
"text": "Security in Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://aws.amazon.com/compliance/programs/",
"title": "AWS compliance programs"
},
{
"url": "https://aws.amazon.com/compliance/services-in-scope/",
"title": "AWS Services in Scope by Compliance Program"
}
],
"text": "Security of the cloud \u00e2\u0080\u0093 AWS is responsible for protecting the infrastructure that runs AWS services in the AWS Cloud. AWS also provides you with services that you can use securely. The effectiveness of our security is regularly tested and verified by third-party auditors as part of the AWS compliance programs. To learn about the compliance programs that apply to Kinesis Data Streams, see AWS Services in Scope by Compliance Program.\n\nSecurity in the cloud \u00e2\u0080\u0093 Your responsibility is determined by the AWS service that you use. You are also responsible for other factors including the sensitivity of your data, your organization\u00e2\u0080\u0099s requirements, and applicable laws and regulations.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security.html#security",
"main_header": "Security in Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#server-side-encryption",
"text": "Data Protection in Amazon Kinesis Data Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html#server-side-encryption",
"main_header": "Data Protection in Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#server-side-encryption",
"text": "Data Protection in Amazon Kinesis Data Streams"
},
"links": [
{
"url": "http://aws.amazon.com/compliance/fips/",
"title": "Federal Information Processing Standard (FIPS) 140-2"
}
],
"text": "NoteIf you require FIPS 140-2 validated cryptographic modules when accessing AWS through a command line interface or an API, use a FIPS endpoint. For more information about the available FIPS endpoints, see Federal Information Processing Standard (FIPS) 140-2.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html#server-side-encryption",
"main_header": "Data Protection in Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#server-side-encryption",
"text": "Data Protection in Amazon Kinesis Data Streams"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html#server-side-encryption",
"main_header": "Data Protection in Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#server-side-encryption",
"text": "Data Protection in Amazon Kinesis Data Streams"
},
"links": [
{
"url": "http://aws.amazon.com/compliance/fips/",
"title": "Federal Information Processing Standard (FIPS) 140-2"
}
],
"text": "If you require FIPS 140-2 validated cryptographic modules when accessing AWS through a command line interface or an API, use a FIPS endpoint. For more information about the available FIPS endpoints, see Federal Information Processing Standard (FIPS) 140-2.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html#server-side-encryption",
"main_header": "Data Protection in Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#server-side-encryption",
"text": "Data Protection in Amazon Kinesis Data Streams"
},
"links": [
{
"url": "http://aws.amazon.com/compliance/fips/",
"title": "Federal Information Processing Standard (FIPS) 140-2"
}
],
"text": "If you require FIPS 140-2 validated cryptographic modules when accessing AWS through a command line interface or an API, use a FIPS endpoint. For more information about the available FIPS endpoints, see Federal Information Processing Standard (FIPS) 140-2.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html#server-side-encryption",
"main_header": "Data Protection in Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#what-is-sse",
"text": "What Is Server-Side Encryption for Kinesis Data Streams?"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html#what-is-sse",
"main_header": "What Is Server-Side Encryption for Kinesis Data Streams?",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#what-is-sse",
"text": "What Is Server-Side Encryption for Kinesis Data Streams?"
},
"links": [],
"text": "NoteServer-side encryption encrypts incoming data only after encryption is enabled. Preexisting data in an unencrypted stream is not encrypted after server-side encryption is enabled.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html#what-is-sse",
"main_header": "What Is Server-Side Encryption for Kinesis Data Streams?",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#what-is-sse",
"text": "What Is Server-Side Encryption for Kinesis Data Streams?"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html#what-is-sse",
"main_header": "What Is Server-Side Encryption for Kinesis Data Streams?",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#what-is-sse",
"text": "What Is Server-Side Encryption for Kinesis Data Streams?"
},
"links": [],
"text": "Server-side encryption encrypts incoming data only after encryption is enabled. Preexisting data in an unencrypted stream is not encrypted after server-side encryption is enabled.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html#what-is-sse",
"main_header": "What Is Server-Side Encryption for Kinesis Data Streams?",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#what-is-sse",
"text": "What Is Server-Side Encryption for Kinesis Data Streams?"
},
"links": [],
"text": "Server-side encryption encrypts incoming data only after encryption is enabled. Preexisting data in an unencrypted stream is not encrypted after server-side encryption is enabled.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html#what-is-sse",
"main_header": "What Is Server-Side Encryption for Kinesis Data Streams?",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#costs-performance",
"text": "Costs, Regions, and Performance Considerations"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html#costs-performance",
"main_header": "Costs, Regions, and Performance Considerations",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#costs-performance",
"text": "Costs, Regions, and Performance Considerations"
},
"links": [
{
"url": "http://aws.amazon.com/kms/pricing/#Keys",
"title": "AWS Key Management Service Pricing"
}
],
"text": "Keys\n\nThe CMK for Kinesis that's managed by AWS (alias = aws/kinesis) is free.\n\nUser-generated KMS keys are subject to KMS key costs. For more information, see AWS Key Management Service Pricing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html#costs-performance",
"main_header": "Costs, Regions, and Performance Considerations",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#costs-performance",
"text": "Costs, Regions, and Performance Considerations"
},
"links": [],
"text": "Keys",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html#costs-performance",
"main_header": "Costs, Regions, and Performance Considerations",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#getting-started-with-sse",
"text": "How Do I Get Started with Server-Side Encryption?"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html#getting-started-with-sse",
"main_header": "How Do I Get Started with Server-Side Encryption?",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#getting-started-with-sse",
"text": "How Do I Get Started with Server-Side Encryption?"
},
"links": [
{
"url": "http://console.aws.amazon.com/kinesis/home?region=us-east-1#/streams/list",
"title": "Amazon Kinesis Data Streams console"
}
],
"text": "To enable server-side encryption for a Kinesis stream\nSign in to the AWS Management Console and open the Amazon Kinesis Data Streams console.\n\nCreate or select a Kinesis stream in the AWS Management Console.\n\nChoose the details tab.\n\nIn Server-side encryption, choose edit.\n\nUnless you want to use a user-generated KMS master key, ensure the (Default) aws/kinesis KMS master key is selected. This is the KMS master key generated by the Kinesis service. Choose Enabled, and then choose Save. \nNoteThe default Kinesis service master key is free, however, the API calls made by Kinesis to the AWS KMS service are subject to KMS usage costs. The stream transitions through a pending state. After the stream returns to an active state with encryption enabled, all incoming data written to the stream is encrypted using the KMS master key you selected.\n\nTo disable server-side encryption, choose Disabled in Server-side encryption in the AWS Management Console, and then choose Save.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html#getting-started-with-sse",
"main_header": "How Do I Get Started with Server-Side Encryption?",
"images": [],
"container_type": "div",
"children_tags": [
"ol",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#getting-started-with-sse",
"text": "How Do I Get Started with Server-Side Encryption?"
},
"links": [],
"text": "To enable server-side encryption for a Kinesis stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html#getting-started-with-sse",
"main_header": "How Do I Get Started with Server-Side Encryption?",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#creating-using-sse-master-keys",
"text": "Creating and Using User-Generated KMS Master Keys"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/creating-using-sse-master-keys.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/creating-using-sse-master-keys.html#creating-using-sse-master-keys",
"main_header": "Creating and Using User-Generated KMS Master Keys",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#permissions-user-key-KMS",
"text": "Permissions to Use User-Generated KMS Master Keys"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html#permissions-user-key-KMS",
"main_header": "Permissions to Use User-Generated KMS Master Keys",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#permissions-user-key-KMS",
"text": "Permissions to Use User-Generated KMS Master Keys"
},
"links": [],
"text": "NoteThe use of the default service key for encryption does not require application of custom IAM permissions.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html#permissions-user-key-KMS",
"main_header": "Permissions to Use User-Generated KMS Master Keys",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#permissions-user-key-KMS",
"text": "Permissions to Use User-Generated KMS Master Keys"
},
"links": [],
"text": "Note",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html#permissions-user-key-KMS",
"main_header": "Permissions to Use User-Generated KMS Master Keys",
"images": [],
"container_type": "div",
"children_tags": [
"span"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#permissions-user-key-KMS",
"text": "Permissions to Use User-Generated KMS Master Keys"
},
"links": [],
"text": "The use of the default service key for encryption does not require application of custom IAM permissions.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html#permissions-user-key-KMS",
"main_header": "Permissions to Use User-Generated KMS Master Keys",
"images": [],
"container_type": "div",
"children_tags": [
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#permissions-user-key-KMS",
"text": "Permissions to Use User-Generated KMS Master Keys"
},
"links": [],
"text": "The use of the default service key for encryption does not require application of custom IAM permissions.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html#permissions-user-key-KMS",
"main_header": "Permissions to Use User-Generated KMS Master Keys",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#sse-troubleshooting",
"text": "Verifying and Troubleshooting KMS Key Permissions"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/sse-troubleshooting.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/sse-troubleshooting.html#sse-troubleshooting",
"main_header": "Verifying and Troubleshooting KMS Key Permissions",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#sse-troubleshooting",
"text": "Verifying and Troubleshooting KMS Key Permissions"
},
"links": [],
"text": "PutRecord.Success PutRecords.Success GetRecords.Success",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/sse-troubleshooting.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/sse-troubleshooting.html#sse-troubleshooting",
"main_header": "Verifying and Troubleshooting KMS Key Permissions",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#vpc",
"text": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html#vpc",
"main_header": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#vpc",
"text": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html#using-interface-vpc-endpoints",
"title": "Using Interface VPC Endpoints for Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html#interface-vpc-endpoints-policies",
"title": "Controlling Access to VPCE Endpoints for Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html#availability",
"title": "Availability of VPC Endpoint Policies for Kinesis Data Streams"
}
],
"text": "TopicsUsing Interface VPC Endpoints for Kinesis Data StreamsControlling Access to VPCE Endpoints for Kinesis Data StreamsAvailability of VPC Endpoint Policies for Kinesis Data Streams",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html#vpc",
"main_header": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#vpc",
"text": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints"
},
"links": [],
"text": "Topics",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html#vpc",
"main_header": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#vpc",
"text": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints"
},
"h2": {
"urllink": "#interface-vpc-endpoints-policies",
"text": "Controlling Access to VPCE Endpoints for Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_IAM.html",
"title": "Controlling Access to Amazon VPC Resources"
}
],
"text": "VPC policy example: read-only access - this sample policy can be attached to a VPC endpoint. (For more information, see Controlling Access to Amazon VPC Resources). It restricts actions to only listing and describing a Kinesis data stream through the VPC endpoint to which it is attached.\n\n{ \"Statement\": [ { \"Sid\": \"ReadOnly\", \"Principal\": \"*\", \"Action\": [ \"kinesis:List*\", \"kinesis:Describe*\" ], \"Effect\": \"Allow\", \"Resource\": \"*\" } ]\n} VPC policy example: restrict access to a specific Kinesis data stream - this sample policy can be attached to a VPC endpoint. It restricts access to a specific data stream through the VPC endpoint to which it is attached.\n\n{ \"Statement\": [ { \"Sid\": \"AccessToSpecificDataStream\", \"Principal\": \"*\", \"Action\": \"kinesis:*\", \"Effect\": \"Allow\", \"Resource\": \"arn:aws:kinesis:us-east-1:123456789012:stream/MyStream\" } ]\n} IAM policy example: restrict access to a specific Stream from a specific VPC endpoint only - this sample policy can be attached to an IAM user, role, or group. It restricts access to a specified Kinesis data stream to occur only from a specified VPC endpoint.\n\n{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"AccessFromSpecificEndpoint\", \"Action\": \"kinesis:*\", \"Effect\": \"Deny\", \"Resource\": \"arn:aws:kinesis:us-east-1:123456789012:stream/MyStream\", \"Condition\": { \"StringNotEquals\" : { \"aws:sourceVpce\": \"vpce-11aa22bb\" } } } ]\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html#interface-vpc-endpoints-policies",
"main_header": "Controlling Access to VPCE Endpoints for Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#vpc",
"text": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints"
},
"h2": {
"urllink": "#availability",
"text": "Availability of VPC Endpoint Policies for Kinesis Data Streams"
},
"links": [],
"text": "Europe (Paris)\n\nEurope (Ireland)\n\nUS East (N. Virginia)\n\nEurope (Stockholm)\n\nUS East (Ohio)\n\nEurope (Frankfurt)\n\nSouth America (S\u00c3\u00a3o Paulo)\n\nEurope (London)\n\nAsia Pacific (Tokyo)\n\nUS West (N. California)\n\nAsia Pacific (Singapore)\n\nAsia Pacific (Sydney)\n\nChina (Beijing)\n\nChina (Ningxia)\n\nAsia Pacific (Hong Kong)\n\nMiddle East (Bahrain)\n\nEurope (Milan)\n\nAfrica (Cape Town)\n\nAsia Pacific (Mumbai)\n\nAsia Pacific (Seoul)\n\nCanada (Central)\n\nUS West (Oregon) except usw2-az4\n\nAWS GovCloud (US-East)\n\nAWS GovCloud (US-West)\n\nAsia Pacific (Osaka)",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html#availability",
"main_header": "Availability of VPC Endpoint Policies for Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#controlling-access",
"main_header": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"links": [],
"text": "Create users and groups under your AWS account\n\nAssign unique security credentials to each user under your AWS account\n\nControl each user's permissions to perform tasks using AWS resources\n\nAllow the users in another AWS account to share your AWS resources\n\nCreate roles for your AWS account and define the users or services that can assume them\n\nUse existing identities for your enterprise to grant permissions to perform tasks using AWS resources",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#controlling-access",
"main_header": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"links": [
{
"url": "https://aws.amazon.com/iam/",
"title": "AWS Identity and Access Management (IAM)"
},
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/getting-started.html",
"title": "Getting started"
},
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/",
"title": "IAM User Guide"
}
],
"text": "AWS Identity and Access Management (IAM)\n\nGetting started\n\nIAM User Guide",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#controlling-access",
"main_header": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#policy-syntax",
"title": "Policy Syntax"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-actions",
"title": "Actions for Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-arn-format",
"title": "Amazon Resource Names (ARNs) for Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"title": "Example Policies for Kinesis Data Streams"
}
],
"text": "ContentsPolicy SyntaxActions for Kinesis Data StreamsAmazon Resource Names (ARNs) for Kinesis Data StreamsExample Policies for Kinesis Data Streams",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#controlling-access",
"main_header": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM",
"images": [],
"container_type": "div",
"children_tags": [
"ul",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"links": [],
"text": "Contents",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#controlling-access",
"main_header": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM",
"images": [],
"container_type": "p",
"children_tags": [
"strong"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#policy-syntax",
"text": "Policy Syntax"
},
"links": [],
"text": "Effect: The effect can be Allow or Deny. By default, IAM users don't have permission to use resources and API actions, so all requests are denied. An explicit allow overrides the default. An explicit deny overrides any allows.\n\nAction: The action is the specific API action for which you are granting or denying permission.\n\nResource: The resource that's affected by the action. To specify a resource in the statement, you need to use its Amazon Resource Name (ARN).\n\nCondition: Conditions are optional. They can be used to control when your policy will be in effect.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#policy-syntax",
"main_header": "Policy Syntax",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "Example 1: Allow users to get data from a stream This policy allows a user or group to perform the DescribeStreamSummary, GetShardIterator, and GetRecords operations on the specified stream and ListStreams on any stream. This policy could be applied to users who should be able to get data from a specific stream. { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": [ \"kinesis:Get*\", \"kinesis:DescribeStreamSummary\" ], \"Resource\": [ \"arn:aws:kinesis:us-east-1:111122223333:stream/stream1\" ] }, { \"Effect\": \"Allow\", \"Action\": [ \"kinesis:ListStreams\" ], \"Resource\": [ \"*\" ] } ]\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"div",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "Example 1: Allow users to get data from a stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "This policy allows a user or group to perform the DescribeStreamSummary, GetShardIterator, and GetRecords operations on the specified stream and ListStreams on any stream. This policy could be applied to users who should be able to get data from a specific stream. { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": [ \"kinesis:Get*\", \"kinesis:DescribeStreamSummary\" ], \"Resource\": [ \"arn:aws:kinesis:us-east-1:111122223333:stream/stream1\" ] }, { \"Effect\": \"Allow\", \"Action\": [ \"kinesis:ListStreams\" ], \"Resource\": [ \"*\" ] } ]\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"pre",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "This policy allows a user or group to perform the DescribeStreamSummary, GetShardIterator, and GetRecords operations on the specified stream and ListStreams on any stream. This policy could be applied to users who should be able to get data from a specific stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "Example 2: Allow users to add data to any stream in the accountThis policy allows a user or group to use the PutRecord operation with any of the account's streams. This policy could be applied to users that should be able to add data records to all streams in an account.{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": [ \"kinesis:PutRecord\" ], \"Resource\": [ \"arn:aws:kinesis:us-east-1:111122223333:stream/*\" ] } ]\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"div",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "Example 2: Allow users to add data to any stream in the account",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "This policy allows a user or group to use the PutRecord operation with any of the account's streams. This policy could be applied to users that should be able to add data records to all streams in an account.{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": [ \"kinesis:PutRecord\" ], \"Resource\": [ \"arn:aws:kinesis:us-east-1:111122223333:stream/*\" ] } ]\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"pre",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "This policy allows a user or group to use the PutRecord operation with any of the account's streams. This policy could be applied to users that should be able to add data records to all streams in an account.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "Example 3: Allow any Kinesis Data Streams action on a specific streamThis policy allows a user or group to use any Kinesis Data Streams operation on the specified stream. This policy could be applied to users that should have administrative control over a specific stream.{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": \"kinesis:*\", \"Resource\": [ \"arn:aws:kinesis:us-east-1:111122223333:stream/stream1\" ] } ]\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"div",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "Example 3: Allow any Kinesis Data Streams action on a specific stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "This policy allows a user or group to use any Kinesis Data Streams operation on the specified stream. This policy could be applied to users that should have administrative control over a specific stream.{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": \"kinesis:*\", \"Resource\": [ \"arn:aws:kinesis:us-east-1:111122223333:stream/stream1\" ] } ]\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"pre",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "This policy allows a user or group to use any Kinesis Data Streams operation on the specified stream. This policy could be applied to users that should have administrative control over a specific stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "Example 4: Allow any Kinesis Data Streams action on any streamThis policy allows a user or group to use any Kinesis Data Streams operation on any stream in an account. Because this policy grants full access to all your streams, you should restrict it to administrators only.{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": \"kinesis:*\", \"Resource\": [ \"arn:aws:kinesis:*:111122223333:stream/*\" ] } ]\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"div",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "Example 4: Allow any Kinesis Data Streams action on any stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "This policy allows a user or group to use any Kinesis Data Streams operation on any stream in an account. Because this policy grants full access to all your streams, you should restrict it to administrators only.{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": \"kinesis:*\", \"Resource\": [ \"arn:aws:kinesis:*:111122223333:stream/*\" ] } ]\n}",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"pre",
"p"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "This policy allows a user or group to use any Kinesis Data Streams operation on any stream in an account. Because this policy grants full access to all your streams, you should restrict it to administrators only.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#akda-java-compliance",
"text": "Compliance Validation for Amazon Kinesis Data Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/akda-java-compliance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/akda-java-compliance.html#akda-java-compliance",
"main_header": "Compliance Validation for Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#akda-java-compliance",
"text": "Compliance Validation for Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://aws.amazon.com/quickstart/?awsf.quickstart-homepage-filter=categories%23security-identity-compliance",
"title": "Security and Compliance Quick Start Guides"
},
{
"url": "https://d0.awsstatic.com/whitepapers/compliance/AWS_HIPAA_Compliance_Whitepaper.pdf",
"title": "Architecting for HIPAA Security and Compliance Whitepaper"
},
{
"url": "https://aws.amazon.com/compliance/resources/",
"title": "AWS Compliance Resources"
},
{
"url": "https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html",
"title": "AWS Config"
},
{
"url": "https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html",
"title": "AWS Security Hub"
}
],
"text": "Security and Compliance Quick Start Guides \u00e2\u0080\u0093 These deployment guides discuss architectural considerations and provide steps for deploying security- and compliance-focused baseline environments on AWS.\nArchitecting for HIPAA Security and Compliance Whitepaper  \u00e2\u0080\u0093 This whitepaper describes how companies can use AWS to create HIPAA-compliant applications.\nAWS Compliance Resources \u00e2\u0080\u0093 This collection of workbooks and guides that might apply to your industry and locationAWS Config \u00e2\u0080\u0093 This AWS service that assesses how well your resource configurations comply with internal practices, industry guidelines, and regulations.\nAWS Security Hub \u00e2\u0080\u0093 This AWS service provides a comprehensive view of your security state within AWS that helps you check your compliance with security industry standards and best practices.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/akda-java-compliance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/akda-java-compliance.html#akda-java-compliance",
"main_header": "Compliance Validation for Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#disaster-recovery-resiliency",
"text": "Resilience in Amazon Kinesis Data Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html#disaster-recovery-resiliency",
"main_header": "Resilience in Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#disaster-recovery-resiliency",
"text": "Resilience in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#disaster-recovery",
"text": "Disaster Recovery in Amazon Kinesis Data Streams"
},
"links": [],
"text": "A record processor could fail\n\nA worker could fail, or the instance of the application that instantiated the worker could fail An EC2 instance that is hosting one or more instances of the application could fail",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html#disaster-recovery",
"main_header": "Disaster Recovery in Amazon Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#infrastructure-security",
"text": "Infrastructure Security in Kinesis Data Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/infrastructure-security.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/infrastructure-security.html#infrastructure-security",
"main_header": "Infrastructure Security in Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#security-best-practices",
"text": "Security Best Practices for Kinesis Data Streams"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html#security-best-practices",
"main_header": "Security Best Practices for Kinesis Data Streams",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#security-best-practices",
"text": "Security Best Practices for Kinesis Data Streams"
},
"h2": {
"urllink": "#security-best-practices-roles",
"text": "Use IAM roles"
},
"links": [
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html",
"title": "IAM Roles"
},
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_common-scenarios.html",
"title": "Common Scenarios for Roles: Users, Applications, and Services"
}
],
"text": "IAM RolesCommon Scenarios for Roles: Users, Applications, and Services",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html#security-best-practices-roles",
"main_header": "Use IAM roles",
"images": [],
"container_type": "div",
"children_tags": [
"ul"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#history",
"text": "Document History"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/history.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/history.html#history",
"main_header": "Document History",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#history",
"text": "Document History"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html",
"title": "Monitoring Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"title": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"title": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"title": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"title": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"title": "Developing a Kinesis Client Library Consumer in .NET"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"title": "Developing a Kinesis Client Library Consumer in Node.js"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords",
"title": "Adding Multiple Records with PutRecords"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"title": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics",
"title": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html",
"title": "Monitoring Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"title": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"title": "Quotas and Limits"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"title": "Quotas and Limits"
}
],
"text": "Change\nDescription\nDate Changed New content for server-side encryption.\nAdded Data Protection in Amazon Kinesis Data Streams.\nJuly 7, 2017 New content for enhanced CloudWatch metrics.\nUpdated Monitoring Amazon Kinesis Data Streams.\nApril 19, 2016 New content for enhanced Kinesis agent.\nUpdated Writing to Amazon Kinesis Data Streams Using Kinesis Agent.\nApril 11, 2016 New content for using Kinesis agents.\nAdded Writing to Amazon Kinesis Data Streams Using Kinesis Agent.\nOctober 2, 2015 Update KPL content for release 0.10.0.\nAdded Developing Producers Using the Amazon Kinesis Producer Library.\nJuly 15, 2015 Update KCL metrics topic for configurable metrics.\nAdded Monitoring the Kinesis Client Library with Amazon CloudWatch.\nJuly 9, 2015 Re-organized content.\nSignificantly re-organized content topics for more concise tree view and more logical grouping.\nJuly 01, 2015 New KPL developer's guide topic.\nAdded Developing Producers Using the Amazon Kinesis Producer Library.\nJune 02, 2015 New KCL metrics topic.\nAdded Monitoring the Kinesis Client Library with Amazon CloudWatch.\nMay 19, 2015 Support for KCL .NET\nAdded Developing a Kinesis Client Library Consumer in .NET.\nMay 1, 2015 Support for KCL Node.js\nAdded Developing a Kinesis Client Library Consumer in Node.js.\nMarch 26, 2015 Support for KCL Ruby\nAdded links to KCL Ruby library.\nJanuary 12, 2015 New API PutRecords\nAdded information about new PutRecords API to Adding Multiple Records with PutRecords.\nDecember 15, 2014 Support for tagging\nAdded Tagging Your Streams in Amazon Kinesis Data Streams.\nSeptember 11, 2014 New CloudWatch metric\nAdded the metric GetRecords.IteratorAgeMilliseconds to Amazon Kinesis Data Streams Dimensions and Metrics.\nSeptember 3, 2014 New monitoring chapter\nAdded Monitoring Amazon Kinesis Data Streams and Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch.\nJuly 30, 2014 Default shard limit\nUpdated the Quotas and Limits: the default shard limit has been raised from 5 to 10.\nFebruary 25, 2014 Default shard limit\nUpdated the Quotas and Limits: the default shard limit has been raised from 2 to 5.\nJanuary 28, 2014 API version updates\nUpdates for version 2013-12-02 of the Kinesis Data Streams API.\nDecember 12, 2013 Initial release\nInitial release of the Amazon Kinesis Developer Guide.\nNovember 14, 2013",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/history.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/history.html#history",
"main_header": "Document History",
"images": [],
"container_type": "div",
"children_tags": [
"div"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#history",
"text": "Document History"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html",
"title": "Monitoring Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"title": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"title": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"title": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"title": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"title": "Developing a Kinesis Client Library Consumer in .NET"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"title": "Developing a Kinesis Client Library Consumer in Node.js"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords",
"title": "Adding Multiple Records with PutRecords"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"title": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics",
"title": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html",
"title": "Monitoring Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"title": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"title": "Quotas and Limits"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"title": "Quotas and Limits"
}
],
"text": "Change\nDescription\nDate Changed New content for server-side encryption.\nAdded Data Protection in Amazon Kinesis Data Streams.\nJuly 7, 2017 New content for enhanced CloudWatch metrics.\nUpdated Monitoring Amazon Kinesis Data Streams.\nApril 19, 2016 New content for enhanced Kinesis agent.\nUpdated Writing to Amazon Kinesis Data Streams Using Kinesis Agent.\nApril 11, 2016 New content for using Kinesis agents.\nAdded Writing to Amazon Kinesis Data Streams Using Kinesis Agent.\nOctober 2, 2015 Update KPL content for release 0.10.0.\nAdded Developing Producers Using the Amazon Kinesis Producer Library.\nJuly 15, 2015 Update KCL metrics topic for configurable metrics.\nAdded Monitoring the Kinesis Client Library with Amazon CloudWatch.\nJuly 9, 2015 Re-organized content.\nSignificantly re-organized content topics for more concise tree view and more logical grouping.\nJuly 01, 2015 New KPL developer's guide topic.\nAdded Developing Producers Using the Amazon Kinesis Producer Library.\nJune 02, 2015 New KCL metrics topic.\nAdded Monitoring the Kinesis Client Library with Amazon CloudWatch.\nMay 19, 2015 Support for KCL .NET\nAdded Developing a Kinesis Client Library Consumer in .NET.\nMay 1, 2015 Support for KCL Node.js\nAdded Developing a Kinesis Client Library Consumer in Node.js.\nMarch 26, 2015 Support for KCL Ruby\nAdded links to KCL Ruby library.\nJanuary 12, 2015 New API PutRecords\nAdded information about new PutRecords API to Adding Multiple Records with PutRecords.\nDecember 15, 2014 Support for tagging\nAdded Tagging Your Streams in Amazon Kinesis Data Streams.\nSeptember 11, 2014 New CloudWatch metric\nAdded the metric GetRecords.IteratorAgeMilliseconds to Amazon Kinesis Data Streams Dimensions and Metrics.\nSeptember 3, 2014 New monitoring chapter\nAdded Monitoring Amazon Kinesis Data Streams and Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch.\nJuly 30, 2014 Default shard limit\nUpdated the Quotas and Limits: the default shard limit has been raised from 5 to 10.\nFebruary 25, 2014 Default shard limit\nUpdated the Quotas and Limits: the default shard limit has been raised from 2 to 5.\nJanuary 28, 2014 API version updates\nUpdates for version 2013-12-02 of the Kinesis Data Streams API.\nDecember 12, 2013 Initial release\nInitial release of the Amazon Kinesis Developer Guide.\nNovember 14, 2013",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/history.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/history.html#history",
"main_header": "Document History",
"images": [],
"container_type": "div",
"children_tags": [
"table"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#glossary",
"text": "AWS glossary"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/glossary.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/glossary.html#glossary",
"main_header": "AWS glossary",
"images": [],
"container_type": "div",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#introduction",
"text": "What Is Amazon Kinesis Data Streams?"
},
"links": [
{
"url": "https://aws.amazon.com/streaming-data/",
"title": "streams"
},
{
"url": "https://aws.amazon.com/kinesis/streams/",
"title": "Amazon Kinesis Data Streams"
}
],
"text": "You can use Amazon Kinesis Data Streams to collect and process large streams of data records in real time. You can create data-processing applications, known as Kinesis Data Streams applications. A typical Kinesis Data Streams application reads data from a data stream as data records. These applications can use the Kinesis Client Library, and they can run on Amazon EC2 instances. You can send the processed records to dashboards, use them to generate alerts, dynamically change pricing and advertising strategies, or send data to a variety of other AWS services. For information about Kinesis Data Streams features and pricing, see Amazon Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#introduction",
"main_header": "What Is Amazon Kinesis Data Streams?",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#introduction",
"text": "What Is Amazon Kinesis Data Streams?"
},
"links": [
{
"url": "https://docs.aws.amazon.com/firehose/latest/dev/",
"title": "Kinesis Data Firehose"
},
{
"url": "https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/",
"title": "Kinesis Video Streams"
},
{
"url": "https://docs.aws.amazon.com/kinesisanalytics/latest/dev/",
"title": "Kinesis Data Analytics"
}
],
"text": "Kinesis Data Streams is part of the Kinesis streaming data platform, along with Kinesis Data Firehose, Kinesis Video Streams, and Kinesis Data Analytics.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#introduction",
"main_header": "What Is Amazon Kinesis Data Streams?",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#introduction",
"text": "What Is Amazon Kinesis Data Streams?"
},
"links": [
{
"url": "https://aws.amazon.com/big-data/",
"title": "Big Data on AWS"
},
{
"url": "https://aws.amazon.com/streaming-data/",
"title": "What is\n\t\t\tStreaming Data?"
}
],
"text": "For more information about AWS big data solutions, see Big Data on AWS. For more information about AWS streaming data solutions, see What is Streaming Data?.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#introduction",
"main_header": "What Is Amazon Kinesis Data Streams?",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#introduction",
"text": "What Is Amazon Kinesis Data Streams?"
},
"h2": {
"urllink": "#use-service-for-what",
"text": "What Can I Do with Kinesis Data Streams?"
},
"links": [],
"text": "You can use Kinesis Data Streams for rapid and continuous data intake and aggregation. The type of data used can include IT infrastructure log data, application logs, social media, market data feeds, and web clickstream data. Because the response time for the data intake and processing is in real time, the processing is typically lightweight.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#use-service-for-what",
"main_header": "What Can I Do with Kinesis Data Streams?",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#introduction",
"text": "What Is Amazon Kinesis Data Streams?"
},
"h2": {
"urllink": "#use-service-for-what",
"text": "What Can I Do with Kinesis Data Streams?"
},
"links": [],
"text": "The following are typical scenarios for using Kinesis Data Streams:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#use-service-for-what",
"main_header": "What Can I Do with Kinesis Data Streams?",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#introduction",
"text": "What Is Amazon Kinesis Data Streams?"
},
"h2": {
"urllink": "#using-the-service",
"text": "Benefits of Using Kinesis Data Streams"
},
"links": [],
"text": "Although you can use Kinesis Data Streams to solve a variety of streaming data problems, a common use is the real-time aggregation of data followed by loading the aggregate data into a data warehouse or map-reduce cluster.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#using-the-service",
"main_header": "Benefits of Using Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#introduction",
"text": "What Is Amazon Kinesis Data Streams?"
},
"h2": {
"urllink": "#using-the-service",
"text": "Benefits of Using Kinesis Data Streams"
},
"links": [],
"text": "Data is put into Kinesis data streams, which ensures durability and elasticity. The delay between the time a record is put into the stream and the time it can be retrieved (put-to-get delay) is typically less than 1 second. In other words, a Kinesis Data Streams application can start consuming the data from the stream almost immediately after the data is added. The managed service aspect of Kinesis Data Streams relieves you of the operational burden of creating and running a data intake pipeline. You can create streaming map-reduce\u00e2\u0080\u0093type applications. The elasticity of Kinesis Data Streams enables you to scale the stream up or down, so that you never lose data records before they expire.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#using-the-service",
"main_header": "Benefits of Using Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#introduction",
"text": "What Is Amazon Kinesis Data Streams?"
},
"h2": {
"urllink": "#using-the-service",
"text": "Benefits of Using Kinesis Data Streams"
},
"links": [],
"text": "Multiple Kinesis Data Streams applications can consume data from a stream, so that multiple actions, like archiving and processing, can take place concurrently and independently. For example, two applications can read data from the same stream. The first application calculates running aggregates and updates an Amazon DynamoDB table, and the second application compresses and archives data to a data store like Amazon Simple Storage Service (Amazon S3). The DynamoDB table with running aggregates is then read by a dashboard for up-to-the-minute reports.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#using-the-service",
"main_header": "Benefits of Using Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#introduction",
"text": "What Is Amazon Kinesis Data Streams?"
},
"h2": {
"urllink": "#using-the-service",
"text": "Benefits of Using Kinesis Data Streams"
},
"links": [],
"text": "The Kinesis Client Library enables fault-tolerant consumption of data from streams and provides scaling support for Kinesis Data Streams applications.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#using-the-service",
"main_header": "Benefits of Using Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#introduction",
"text": "What Is Amazon Kinesis Data Streams?"
},
"h2": {
"urllink": "#related-services",
"text": "Related Services"
},
"links": [
{
"url": "https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-kinesis.html",
"title": "Kinesis\n\t\t\tConnector"
}
],
"text": "For information about using Amazon EMR clusters to read and process Kinesis data streams directly, see Kinesis Connector.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html#related-services",
"main_header": "Related Services",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"links": [],
"text": "As you get started with Amazon Kinesis Data Streams, you can benefit from understanding its architecture and terminology.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#key-concepts",
"main_header": "Amazon Kinesis Data Streams Terminology and Concepts",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#high-level-architecture",
"text": "Kinesis Data Streams High-Level Architecture"
},
"links": [],
"text": "The following diagram illustrates the high-level architecture of Kinesis Data Streams. The producers continually push data to Kinesis Data Streams, and the consumers process the data in real time. Consumers (such as a custom application running on Amazon EC2 or an Amazon Kinesis Data Firehose delivery stream) can store their results using an AWS service such as Amazon DynamoDB, Amazon Redshift, or Amazon S3.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#high-level-architecture",
"main_header": "Kinesis Data Streams High-Level Architecture",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#stream",
"text": "Kinesis Data Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#shard",
"title": "shards"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#sequence-number",
"title": "sequence number"
}
],
"text": "A Kinesis data stream is a set of shards. Each shard has a sequence of data records. Each data record has a sequence number that is assigned by Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#stream",
"main_header": "Kinesis Data Stream",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#data-record",
"text": "Data Record"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#stream",
"title": "Kinesis data stream"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#sequence-number",
"title": "sequence number"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#partition-key",
"title": "partition key"
}
],
"text": "A data record is the unit of data stored in a Kinesis data stream. Data records are composed of a sequence number, a partition key, and a data blob, which is an immutable sequence of bytes. Kinesis Data Streams does not inspect, interpret, or change the data in the blob in any way. A data blob can be up to 1 MB.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#data-record",
"main_header": "Data Record",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#stream-capacity-mode",
"text": "Capacity Mode"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"title": "Choosing the Data Stream Capacity Mode"
}
],
"text": "A data stream capacity mode determines how capacity is managed and how you are charged for the usage of your data stream. Currenly, in Kinesis Data Streams, you can choose between an on-demand mode and a provisioned mode for your data streams. For more information, see Choosing the Data Stream Capacity Mode.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#stream-capacity-mode",
"main_header": "Capacity Mode",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em",
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#stream-capacity-mode",
"text": "Capacity Mode"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#ondemandmode",
"title": "On-demand Mode"
}
],
"text": "With the on-demand mode, Kinesis Data Streams automatically manages the shards in order to provide the necessary throughput. You are charged only for the actual throughput that you use and Kinesis Data Streams automatically accommodates your workloads\u00e2\u0080\u0099 throughput needs as they ramp up or down. For more information, see On-demand Mode.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#stream-capacity-mode",
"main_header": "Capacity Mode",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#stream-capacity-mode",
"text": "Capacity Mode"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#provisionedmode",
"title": "Provisioned Mode"
}
],
"text": "With the provisioned mode, you must specify the number of shards for the data stream. The total capacity of a data stream is the sum of the capacities of its shards. You can increase or decrease the number of shards in a data stream as needed and you are charged for the number of shards at an hourly rate. For more information, see Provisioned Mode.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#stream-capacity-mode",
"main_header": "Capacity Mode",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#retention",
"text": "Retention Period"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_IncreaseStreamRetentionPeriod.html",
"title": "IncreaseStreamRetentionPeriod"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DecreaseStreamRetentionPeriod.html",
"title": "DecreaseStreamRetentionPeriod"
},
{
"url": "https://aws.amazon.com/kinesis/pricing/",
"title": "Amazon Kinesis Data Streams Pricing"
}
],
"text": "The retention period is the length of time that data records are accessible after they are added to the stream. A stream\u00e2\u0080\u0099s retention period is set to a default of 24 hours after creation. You can increase the retention period up to 8760 hours (365 days) using the IncreaseStreamRetentionPeriod operation, and decrease the retention period down to a minimum of 24 hours using the DecreaseStreamRetentionPeriod operation. Additional charges apply for streams with a retention period set to more than 24 hours. For more information, see Amazon Kinesis Data Streams Pricing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#retention",
"main_header": "Retention Period",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#producers",
"text": "Producer"
},
"links": [],
"text": "Producers put records into Amazon Kinesis Data Streams. For example, a web server sending log data to a stream is a producer.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#producers",
"main_header": "Producer",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#consumers",
"text": "Consumer"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#enabled-application",
"title": "Amazon Kinesis Data Streams Application"
}
],
"text": "Consumers get records from Amazon Kinesis Data Streams and process them. These consumers are known as Amazon Kinesis Data Streams Application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#consumers",
"main_header": "Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#enabled-application",
"text": "Amazon Kinesis Data Streams Application"
},
"links": [],
"text": "An Amazon Kinesis Data Streams application is a consumer of a stream that commonly runs on a fleet of EC2 instances.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#enabled-application",
"main_header": "Amazon Kinesis Data Streams Application",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#enabled-application",
"text": "Amazon Kinesis Data Streams Application"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
],
"text": "There are two types of consumers that you can develop: shared fan-out consumers and enhanced fan-out consumers. To learn about the differences between them, and to see how you can create each type of consumer, see Reading Data from Amazon Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#enabled-application",
"main_header": "Amazon Kinesis Data Streams Application",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#enabled-application",
"text": "Amazon Kinesis Data Streams Application"
},
"links": [],
"text": "The output of a Kinesis Data Streams application can be input for another stream, enabling you to create complex topologies that process data in real time. An application can also send data to a variety of other AWS services. There can be multiple applications for one stream, and each application can consume data from the stream independently and concurrently.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#enabled-application",
"main_header": "Amazon Kinesis Data Streams Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#shard",
"text": "Shard"
},
"links": [],
"text": "A shard is a uniquely identified sequence of data records in a stream. A stream is composed of one or more shards, each of which provides a fixed unit of capacity. Each shard can support up to 5 transactions per second for reads, up to a maximum total data read rate of 2 MB per second and up to 1,000 records per second for writes, up to a maximum total data write rate of 1 MB per second (including partition keys). The data capacity of your stream is a function of the number of shards that you specify for the stream. The total capacity of the stream is the sum of the capacities of its shards.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#shard",
"main_header": "Shard",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#shard",
"text": "Shard"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
],
"text": "If your data rate increases, you can increase or decrease the number of shards allocated to your stream. For more information, see Resharding a Stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#shard",
"main_header": "Shard",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#partition-key",
"text": "Partition Key"
},
"links": [],
"text": "A partition key is used to group data by shard within a stream. Kinesis Data Streams segregates the data records belonging to a stream into multiple shards. It uses the partition key that is associated with each data record to determine which shard a given data record belongs to. Partition keys are Unicode strings, with a maximum length limit of 256 characters for each key. An MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards using the hash key ranges of the shards. When an application puts data into a stream, it must specify a partition key.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#partition-key",
"main_header": "Partition Key",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#sequence-number",
"text": "Sequence Number"
},
"links": [],
"text": "Each data record has a sequence number that is unique per partition-key within its shard. Kinesis Data Streams assigns the sequence number after you write to the stream with client.putRecords or client.putRecord. Sequence numbers for the same partition key generally increase over time. The longer the time period between write requests, the larger the sequence numbers become.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#sequence-number",
"main_header": "Sequence Number",
"images": [],
"container_type": "p",
"children_tags": [
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#client-library",
"text": "Kinesis Client Library"
},
"links": [],
"text": "The Kinesis Client Library is compiled into your application to enable fault-tolerant consumption of data from the stream. The Kinesis Client Library ensures that for every shard there is a record processor running and processing that shard. The library also simplifies reading data from the stream. The Kinesis Client Library uses an Amazon DynamoDB table to store control data. It creates one table per application that is processing data.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#client-library",
"main_header": "Kinesis Client Library",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#client-library",
"text": "Kinesis Client Library"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
],
"text": "There are two major versions of the Kinesis Client Library. Which one you use depends on the type of consumer you want to create. For more information, see Reading Data from Amazon Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#client-library",
"main_header": "Kinesis Client Library",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#application-name",
"text": "Application Name"
},
"links": [],
"text": "The name of an Amazon Kinesis Data Streams application identifies the application. Each of your applications must have a unique name that is scoped to the AWS account and Region used by the application. This name is used as a name for the control table in Amazon DynamoDB and the namespace for Amazon CloudWatch metrics.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#application-name",
"main_header": "Application Name",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#key-concepts",
"text": "Amazon Kinesis Data Streams Terminology and Concepts"
},
"h2": {
"urllink": "#terminology",
"text": "Kinesis Data Streams Terminology"
},
"h3": {
"urllink": "#server-side-encryption-concept",
"text": "Server-Side Encryption"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kms/latest/developerguide/",
"title": "AWS KMS"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
],
"text": "Amazon Kinesis Data Streams can automatically encrypt sensitive data as a producer enters it into a stream. Kinesis Data Streams uses AWS KMS master keys for encryption. For more information, see Data Protection in Amazon Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#server-side-encryption-concept",
"main_header": "Server-Side Encryption",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#service-sizes-and-limits",
"text": "Quotas and Limits"
},
"links": [],
"text": "Amazon Kinesis Data Streams has the following stream and shard quotas and limits.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html#service-sizes-and-limits",
"main_header": "Quotas and Limits",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#service-sizes-and-limits",
"text": "Quotas and Limits"
},
"h2": {
"urllink": "#kds-api-limits",
"text": "API Limits"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/",
"title": "Amazon Kinesis API Reference"
}
],
"text": "Like most AWS APIs, Kinesis Data Streams API operations are rate-limited. The following limits apply per AWS account per region. For more information on Kinesis Data Streams APIs, see the Amazon Kinesis API Reference.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html#kds-api-limits",
"main_header": "API Limits",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#service-sizes-and-limits",
"text": "Quotas and Limits"
},
"h2": {
"urllink": "#kds-api-limits",
"text": "API Limits"
},
"h3": {
"urllink": "#kds-api-limits-control",
"text": "KDS Control Plane API Limits"
},
"links": [],
"text": "The following section describes limits for the KDS control plane APIs. KDS control plane APIs enable you to create and manage your data streams. These limits apply per AWS account per region.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html#kds-api-limits-control",
"main_header": "KDS Control Plane API Limits",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#service-sizes-and-limits",
"text": "Quotas and Limits"
},
"h2": {
"urllink": "#kds-api-limits",
"text": "API Limits"
},
"h3": {
"urllink": "#kds-api-limits-data",
"text": "KDS Data Plane API Limits"
},
"links": [],
"text": "The following section describes the limits for the KDS data plane APIs. KDS data plane APIs enable you to use your data streams for collecting and processing data records in real time. These limits apply per shard within your data streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html#kds-api-limits-data",
"main_header": "KDS Data Plane API Limits",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#service-sizes-and-limits",
"text": "Quotas and Limits"
},
"h2": {
"urllink": "#increasing-kds-limits",
"text": "Increasing Quotas"
},
"links": [
{
"url": "https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html",
"title": "What Is\n\t\t\t\tService Quotas?"
}
],
"text": "You can use Service Quotas to request an increase for a quota, if the quota is adjustable. Some requests are automatically resolved, while others are submitted to AWS Support. You can track the status of a quota increase request that is submitted to AWS Support. Requests to increase service quotas do not receive priority support. If you have an urgent request, contact AWS Support. For more information, see What Is Service Quotas?",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html#increasing-kds-limits",
"main_header": "Increasing Quotas",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#service-sizes-and-limits",
"text": "Quotas and Limits"
},
"h2": {
"urllink": "#increasing-kds-limits",
"text": "Increasing Quotas"
},
"links": [
{
"url": "https://docs.aws.amazon.com/servicequotas/latest/userguide/request-quota-increase.html",
"title": "Requesting a Quota Increase"
}
],
"text": "To request a service quota increase, follow the procedure outlined in Requesting a Quota Increase.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html#increasing-kds-limits",
"main_header": "Increasing Quotas",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#before-you-begin",
"text": "Setting Up for Amazon Kinesis Data Streams"
},
"links": [],
"text": "Before you use Amazon Kinesis Data Streams for the first time, complete the following tasks.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#before-you-begin",
"main_header": "Setting Up for Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#before-you-begin",
"text": "Setting Up for Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#setting-up-sign-up-for-aws",
"text": "Sign Up for AWS"
},
"links": [],
"text": "When you sign up for Amazon Web Services (AWS), your AWS account is automatically signed up for all services in AWS, including Kinesis Data Streams. You are charged only for the services that you use.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#setting-up-sign-up-for-aws",
"main_header": "Sign Up for AWS",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#before-you-begin",
"text": "Setting Up for Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#setting-up-sign-up-for-aws",
"text": "Sign Up for AWS"
},
"links": [],
"text": "If you have an AWS account already, skip to the next task. If you don't have an AWS account, use the following procedure to create one.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#setting-up-sign-up-for-aws",
"main_header": "Sign Up for AWS",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#before-you-begin",
"text": "Setting Up for Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#setting-up-downloads",
"text": "Download Libraries and Tools"
},
"links": [],
"text": "The following libraries and tools will help you work with Kinesis Data Streams:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#setting-up-downloads",
"main_header": "Download Libraries and Tools",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#before-you-begin",
"text": "Setting Up for Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#setting-up-requirements",
"text": "Configure Your Development Environment"
},
"links": [],
"text": "To use the KCL, ensure that your Java development environment meets the following requirements:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#setting-up-requirements",
"main_header": "Configure Your Development Environment",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#before-you-begin",
"text": "Setting Up for Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#setting-up-requirements",
"text": "Configure Your Development Environment"
},
"links": [
{
"url": "https://aws.amazon.com/sdkforjava/",
"title": "AWS SDK for Java"
}
],
"text": "Note that the AWS SDK for Java includes Apache Commons and Jackson in the third-party folder. However, the SDK for Java works with Java 1.6, while the Kinesis Client Library requires Java 1.7.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/before-you-begin.html#setting-up-requirements",
"main_header": "Configure Your Development Environment",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#getting-started",
"text": "Getting Started with Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"title": "Amazon Kinesis Data Streams Terminology and Concepts"
}
],
"text": "The information in this section helps you get started using Amazon Kinesis Data Streams. If you are new to Kinesis Data Streams, start by becoming familiar with the concepts and terminology presented in Amazon Kinesis Data Streams Terminology and Concepts.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html#getting-started",
"main_header": "Getting Started with Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#getting-started",
"text": "Getting Started with Amazon Kinesis Data Streams"
},
"links": [],
"text": "This section shows you how to perform basic Amazon Kinesis Data Streams operations using the AWS Command Line Interface. You will learn fundamental Kinesis Data Streams data flow principles and the steps necessary to put and get data from an Kinesis data stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html#getting-started",
"main_header": "Getting Started with Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#getting-started",
"text": "Getting Started with Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html",
"title": "Understanding and getting your security credentials"
}
],
"text": "For CLI access, you need an access key ID and secret access key. Use IAM user access keys instead of AWS account root user access keys. IAM lets you securely control access to AWS services and resources in your AWS account. For more information about creating access keys, see Understanding and getting your security credentials in the AWS General Reference.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html#getting-started",
"main_header": "Getting Started with Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#getting-started",
"text": "Getting Started with Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html#create-an-iam-user",
"title": "Create an IAM User"
}
],
"text": "You can find detailed step-by-step IAM and security key set up instructions at Create an IAM User.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html#getting-started",
"main_header": "Getting Started with Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#getting-started",
"text": "Getting Started with Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/general/latest/gr/rande.html#ak_region",
"title": "the regions where Kinesis Data Streams is supported"
}
],
"text": "In this section, the specific commands discussed are given verbatim, except where specific values are necessarily different for each run. Also, the examples are using the US West (Oregon) region, but the steps in this section work in any of the regions where Kinesis Data Streams is supported.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html#getting-started",
"main_header": "Getting Started with Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#kinesis-tutorial-cli-installation",
"text": "Install and Configure the AWS CLI"
},
"h2": {
"urllink": "#install-cli",
"text": "Install AWS CLI"
},
"links": [
{
"url": "https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html",
"title": "Installing the AWS CLI"
}
],
"text": "For detailed steps on how to install the AWS CLI for Windows and for Linux, OS X, and Unix operating systems, see Installing the AWS CLI.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html#install-cli",
"main_header": "Install AWS CLI",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-tutorial-cli-installation",
"text": "Install and Configure the AWS CLI"
},
"h2": {
"urllink": "#install-cli",
"text": "Install AWS CLI"
},
"links": [],
"text": "Use the following command to list available options and services:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html#install-cli",
"main_header": "Install AWS CLI",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-tutorial-cli-installation",
"text": "Install and Configure the AWS CLI"
},
"h2": {
"urllink": "#install-cli",
"text": "Install AWS CLI"
},
"links": [],
"text": "You will be using the Kinesis Data Streams service, so you can review the AWS CLI subcommands related to Kinesis Data Streams using the following command:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html#install-cli",
"main_header": "Install AWS CLI",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-tutorial-cli-installation",
"text": "Install and Configure the AWS CLI"
},
"h2": {
"urllink": "#install-cli",
"text": "Install AWS CLI"
},
"links": [],
"text": "This command results in output that includes the available Kinesis Data Streams commands:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html#install-cli",
"main_header": "Install AWS CLI",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-tutorial-cli-installation",
"text": "Install and Configure the AWS CLI"
},
"h2": {
"urllink": "#install-cli",
"text": "Install AWS CLI"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/",
"title": "Amazon Kinesis Service API Reference"
}
],
"text": "This command list corresponds to the Kinesis Data Streams API documented in the Amazon Kinesis Service API Reference. For example, the create-stream command corresponds to the CreateStream API action.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html#install-cli",
"main_header": "Install AWS CLI",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-tutorial-cli-installation",
"text": "Install and Configure the AWS CLI"
},
"h2": {
"urllink": "#install-cli",
"text": "Install AWS CLI"
},
"links": [],
"text": "The AWS CLI is now successfully installed, but not configured. This is shown in the next section.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html#install-cli",
"main_header": "Install AWS CLI",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-tutorial-cli-installation",
"text": "Install and Configure the AWS CLI"
},
"h2": {
"urllink": "#config-cli",
"text": "Configure AWS CLI"
},
"links": [
{
"url": "https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html",
"title": "Configuring the AWS CLI"
}
],
"text": "For general use, the aws configure command is the fastest way to set up your AWS CLI installation. For more information, see Configuring the AWS CLI.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html#config-cli",
"main_header": "Configure AWS CLI",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"title": "Amazon Kinesis Data Streams Terminology and Concepts"
}
],
"text": "This section describes basic use of a Kinesis data stream from the command line using the AWS CLI. Be sure you are familiar with the concepts discussed in Amazon Kinesis Data Streams Terminology and Concepts.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#fundamental-stream",
"main_header": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#create-stream",
"text": "Step 1: Create a Stream"
},
"links": [],
"text": "Your first step is to create a stream and verify that it was successfully created. Use the following command to create a stream named \"Foo\":",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#create-stream",
"main_header": "Step 1: Create a Stream",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#create-stream",
"text": "Step 1: Create a Stream"
},
"links": [],
"text": "Next, issue the following command to check on the stream's creation progress:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#create-stream",
"main_header": "Step 1: Create a Stream",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#create-stream",
"text": "Step 1: Create a Stream"
},
"links": [],
"text": "You should get output that is similar to the following example:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#create-stream",
"main_header": "Step 1: Create a Stream",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#create-stream",
"text": "Step 1: Create a Stream"
},
"links": [],
"text": "In this example, the stream has a status CREATING, which means it is not quite ready to use. Check again in a few moments, and you should see output similar to the following example:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#create-stream",
"main_header": "Step 1: Create a Stream",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#create-stream",
"text": "Step 1: Create a Stream"
},
"links": [],
"text": "There is information in this output that you don't need to be concerned about for this tutorial. The main thing for now is \"StreamStatus\": \"ACTIVE\", which tells you that the stream is ready to be used, and the information on the single shard that you requested. You can also verify the existence of your new stream by using the list-streams command, as shown here:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#create-stream",
"main_header": "Step 1: Create a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#create-stream",
"text": "Step 1: Create a Stream"
},
"links": [],
"text": "Output:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#create-stream",
"main_header": "Step 1: Create a Stream",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#put-record",
"text": "Step 2: Put a Record"
},
"links": [],
"text": "Now that you have an active stream, you are ready to put some data. For this tutorial, you will use the simplest possible command, put-record, which puts a single data record containing the text \"testdata\" into the stream:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#put-record",
"main_header": "Step 2: Put a Record",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#put-record",
"text": "Step 2: Put a Record"
},
"links": [],
"text": "This command, if successful, will result in output similar to the following example:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#put-record",
"main_header": "Step 2: Put a Record",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#put-record",
"text": "Step 2: Put a Record"
},
"links": [],
"text": "Congratulations, you just added data to a stream! Next you will see how to get data out of the stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#put-record",
"main_header": "Step 2: Put a Record",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [],
"text": "GetShardIterator",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [],
"text": "Before you can get data from the stream you need to obtain the shard iterator for the shard you are interested in. A shard iterator represents the position of the stream and shard from which the consumer (get-record command in this case) will read. You'll use the get-shard-iterator command, as follows:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetShardIterator.html",
"title": "GetShardIterator"
}
],
"text": "Recall that the aws kinesis commands have a Kinesis Data Streams API behind them, so if you are curious about any of the parameters shown, you can read about them in the GetShardIterator API reference topic. Successful execution will result in output similar to the following example (scroll horizontally to see the entire output):",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [],
"text": "The long string of seemingly random characters is the shard iterator (yours will be different). You will need to copy/paste the shard iterator into the get command, shown next. Shard iterators have a valid lifetime of 300 seconds, which should be enough time for you to copy/paste the shard iterator into the next command. Notice you will need to remove any newlines from your shard iterator before pasting to the next command. If you get an error message that the shard iterator is no longer valid, simply execute the get-shard-iterator command again.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [],
"text": "GetRecords",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetRecords.html",
"title": "GetRecords"
}
],
"text": "The get-records command gets data from the stream, and it resolves to a call to GetRecords in the Kinesis Data Streams API. The shard iterator specifies the position in the shard from which you want to start reading data records sequentially. If there are no records available in the portion of the shard that the iterator points to, GetRecords returns an empty list. Note that it might take multiple calls to get to a portion of the shard that contains records.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [],
"text": "In the following example of the get-records command (scroll horizontally to see the entire command):",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [],
"text": "If you are running this tutorial from a Unix-type command processor such as bash, you can automate the acquisition of the shard iterator using a nested command, like this (scroll horizontally to see the entire command):",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [],
"text": "If you are running this tutorial from a system that supports PowerShell, you can automate acquisition of the shard iterator using a command such as this (scroll horizontally to see the entire command):",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [],
"text": "The successful result of the get-records command will request records from your stream for the shard that you specified when you obtained the shard iterator, as in the following example (scroll horizontally to see the entire output):",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [],
"text": "Note that get-records is described above as a request, which means you may receive zero or more records even if there are records in your stream, and any records returned may not represent all the records currently in your stream. This is perfectly normal, and production code will simply poll the stream for records at appropriate intervals (this polling speed will vary depending on your specific application design requirements).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [
{
"url": "https://www.base64decode.org/",
"title": "https://www.base64decode.org/"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
}
],
"text": "The first thing you'll likely notice about your record in this part of the tutorial is that the data appears to be garbage \u00e2\u0080\u0093; it's not the clear text testdata we sent. This is due to the way put-record uses Base64 encoding to allow you to send binary data. However, the Kinesis Data Streams support in the AWS CLI does not provide Base64 decoding because Base64 decoding to raw binary content printed to stdout can lead to undesired behavior and potential security issues on certain platforms and terminals. If you use a Base64 decoder (for example, https://www.base64decode.org/) to manually decode dGVzdGRhdGE= you will see that it is, in fact, testdata. This is sufficient for the sake of this tutorial because, in practice, the AWS CLI is rarely used to consume data, but more often to monitor the state of the stream and obtain information, as shown previously (describe-stream and list-streams). Future tutorials will show you how to build production-quality consumer applications using the Kinesis Client Library (KCL), where Base64 is taken care of for you. For more information about the KCL, see Developing Custom Consumers with Shared Throughput Using KCL.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [],
"text": "It's not always the case that get-records will return all records in the stream/shard specified. When that happens, use the NextShardIterator from the last result to get the next set of records. So if more data were being put into the stream (the normal situation in production applications), you could keep polling for data using get-records each time. However, if you do not call get-records using the next shard iterator within the 300 second shard iterator lifetime, you will get an error message, and you will need to use the get-shard-iterator command to get a fresh shard iterator.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetRecords.html",
"title": "GetRecords"
}
],
"text": "Also provided in this output is MillisBehindLatest, which is the number of milliseconds the GetRecords operation's response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment. In the case of this tutorial, you may see a number that's quite large if you've been taking time to read along as you go. That's not a problem, by default, data records stay in a stream for 24 hours waiting for you to retrieve them. This time frame is called the retention period and it is configurable up to 365 days.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [],
"text": "Note that a successful get-records result will always have a NextShardIterator even if there are no more records currently in the stream. This is a polling model that assumes a producer is potentially putting more records into the stream at any given time. Although you can write your own polling routines, if you use the previously mentioned KCL for developing consumer applications, this polling is taken care of for you.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#get-records",
"text": "Step 3: Get the Record"
},
"links": [],
"text": "If you call get-records until there are no more records in the stream and shard you are pulling from, you will see output with empty records similar to the following example (scroll horizontally to see the entire output):",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#get-records",
"main_header": "Step 3: Get the Record",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#clean-up",
"text": "Step 4: Clean Up"
},
"links": [],
"text": "Finally, you'll want to delete your stream to free up resources and avoid unintended charges to your account, as previously noted. Do this in practice any time you have created a stream and will not be using it because charges accrue per stream whether you are putting and getting data with it or not. The clean-up command is simple:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#clean-up",
"main_header": "Step 4: Clean Up",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#clean-up",
"text": "Step 4: Clean Up"
},
"links": [],
"text": "Success results in no output, so you might want to use describe-stream to check on deletion progress:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#clean-up",
"main_header": "Step 4: Clean Up",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#clean-up",
"text": "Step 4: Clean Up"
},
"links": [],
"text": "If you execute this command immediately after the delete command, you will likely see output part of which is similar to the following example:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#clean-up",
"main_header": "Step 4: Clean Up",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#fundamental-stream",
"text": "Perform Basic Kinesis Data Stream Operations Using the AWS CLI"
},
"h2": {
"urllink": "#clean-up",
"text": "Step 4: Clean Up"
},
"links": [],
"text": "After the stream is fully deleted, describe-stream will result in a \"not found\" error:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/fundamental-stream.html#clean-up",
"main_header": "Step 4: Clean Up",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#examples",
"text": "Example Tutorials for Amazon Kinesis Data Streams"
},
"links": [],
"text": "The example tutorials in this section are designed to further assist you in understanding Amazon Kinesis Data Streams concepts and functionality.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html#examples",
"main_header": "Example Tutorials for Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
},
"links": [],
"text": "The scenario for this tutorial involves ingesting stock trades into a data stream and writing a simple Amazon Kinesis Data Streams application that performs calculations on the stream. You will learn how to send a stream of records to Kinesis Data Streams and implement an application that consumes and processes the records in near-real time.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html#tutorial-stock-data-kplkcl2",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
},
"links": [],
"text": "The code does not access actual stock market data, but instead simulates the stream of stock trades. It does so by using a random stock trade generator that has a starting point of real market data for the top 25 stocks by market capitalization as of February 2015. If you have access to a real-time stream of stock trades, you might be interested in deriving useful, timely statistics from that stream. For example, you might want to perform a sliding window analysis where you determine the most popular stock purchased in the last 5 minutes. Or you might want a notification whenever there is a sell order that is too large (that is, it has too many shares). You can extend the code in this series to provide such functionality.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html#tutorial-stock-data-kplkcl2",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
},
"links": [],
"text": "You can work through the steps in this tutorial on your desktop or laptop computer and run both the producer and consumer code on the same machine or any platform that supports the defined requirements.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html#tutorial-stock-data-kplkcl2",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
},
"links": [
{
"url": "https://docs.aws.amazon.com/general/latest/gr/rande.html#ak_region",
"title": "AWS regions"
}
],
"text": "The examples shown use the US West (Oregon) region, but they work on any of the AWS regions that support Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html#tutorial-stock-data-kplkcl2",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-begin",
"text": "Prerequisites"
},
"links": [],
"text": "You must meet the following requirements in order to complete this tutorial:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html#tutorial-stock-data-kplkcl2-begin",
"main_header": "Prerequisites",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-begin-aws",
"text": "Amazon Web Services Account"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"title": "Amazon Kinesis Data Streams Terminology and Concepts"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html",
"title": "Install and Configure the AWS CLI"
}
],
"text": "Before you begin, ensure that you are familiar with the concepts discussed in Amazon Kinesis Data Streams Terminology and Concepts, particularly with streams, shards, producers, and consumers. It is also helpful to have completed the steps in the following guide: Install and Configure the AWS CLI.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html#tutorial-stock-data-kplkcl2-begin-aws",
"main_header": "Amazon Web Services Account",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-begin-aws",
"text": "Amazon Web Services Account"
},
"links": [],
"text": "You must have an AWS account and a web browser to access the AWS Management Console.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html#tutorial-stock-data-kplkcl2-begin-aws",
"main_header": "Amazon Web Services Account",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-begin-aws",
"text": "Amazon Web Services Account"
},
"links": [
{
"url": "https://console.aws.amazon.com/console/home",
"title": "AWS Management Console"
},
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/console.html",
"title": "IAM sign-in page"
},
{
"url": "https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html",
"title": "Understanding and getting your security credentials"
}
],
"text": "For console access, use your IAM user name and password to sign in to the AWS Management Console from the IAM sign-in page. IAM lets you securely control access to AWS services and resources in your AWS account. For details about console and programmatic credentials, see Understanding and getting your security credentials in the AWS General Reference.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html#tutorial-stock-data-kplkcl2-begin-aws",
"main_header": "Amazon Web Services Account",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-begin-aws",
"text": "Amazon Web Services Account"
},
"links": [
{
"url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html#create-an-iam-user",
"title": "Create an IAM User"
}
],
"text": "For more information about IAM and security key setup instructions, see Create an IAM User.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html#tutorial-stock-data-kplkcl2-begin-aws",
"main_header": "Amazon Web Services Account",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-begin-sys",
"text": "System Software Requirements"
},
"links": [
{
"url": "http://www.oracle.com/technetwork/java/javase/downloads/index.html",
"title": "Oracle's Java SE installation site"
}
],
"text": "The system that you are using to run the application must have Java 7 or higher installed. To download and install the latest Java Development Kit (JDK), go to Oracle's Java SE installation site.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html#tutorial-stock-data-kplkcl2-begin-sys",
"main_header": "System Software Requirements",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-begin-sys",
"text": "System Software Requirements"
},
"links": [
{
"url": "https://www.eclipse.org/downloads/",
"title": "Eclipse"
}
],
"text": "If you have a Java IDE, such as Eclipse, you can use it to open, edit, build, and run the source code.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html#tutorial-stock-data-kplkcl2-begin-sys",
"main_header": "System Software Requirements",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-begin-sys",
"text": "System Software Requirements"
},
"links": [
{
"url": "https://aws.amazon.com/sdk-for-java/",
"title": "AWS SDK for Java"
},
{
"url": "https://aws.amazon.com/eclipse/",
"title": "AWS Toolkit for Eclipse"
}
],
"text": "You need the latest AWS SDK for Java version. If you are using Eclipse as your IDE, you can install the AWS Toolkit for Eclipse instead.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html#tutorial-stock-data-kplkcl2-begin-sys",
"main_header": "System Software Requirements",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-begin-sys",
"text": "System Software Requirements"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client/tree/master",
"title": "https://github.com/awslabs/amazon-kinesis-client/tree/master"
}
],
"text": "The consumer application requires the Kinesis Client Library (KCL) version 2.2.9 or higher, which you can obtain from GitHub at https://github.com/awslabs/amazon-kinesis-client/tree/master.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html#tutorial-stock-data-kplkcl2-begin-sys",
"main_header": "System Software Requirements",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-begin-next",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html",
"title": "Step 1: Create a Data Stream"
}
],
"text": "Step 1: Create a Data Stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-begin.html#tutorial-stock-data-kplkcl2-begin-next",
"main_header": "Next Steps",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-create-stream",
"text": "Step 1: Create a Data Stream"
},
"links": [],
"text": "First, you must create the data stream that you will use in subsequent steps of this tutorial.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html#tutorial-stock-data-kplkcl2-create-stream",
"main_header": "Step 1: Create a Data Stream",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-create-stream",
"text": "Step 1: Create a Data Stream"
},
"links": [],
"text": "On the Kinesis streams list page, the status of your stream appears as CREATING while the stream is being created. When the stream is ready to use, the status changes to ACTIVE.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html#tutorial-stock-data-kplkcl2-create-stream",
"main_header": "Step 1: Create a Data Stream",
"images": [],
"container_type": "p",
"children_tags": [
"b",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-create-stream",
"text": "Step 1: Create a Data Stream"
},
"links": [],
"text": "If you choose the name of your stream, in the page that appears, the Details tab displays a summary of your data stream configuration. The Monitoring section displays monitoring information for the stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html#tutorial-stock-data-kplkcl2-create-stream",
"main_header": "Step 1: Create a Data Stream",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-create-stream",
"text": "Step 1: Create a Data Stream"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-create-stream-next",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"title": "Step 2: Create an IAM Policy and User"
}
],
"text": "Step 2: Create an IAM Policy and User",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-create-stream.html#tutorial-stock-data-kplkcl2-create-stream-next",
"main_header": "Next Steps",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html",
"title": "IAM policy"
}
],
"text": "Security best practices for AWS dictate the use of fine-grained permissions to control access to different resources. AWS Identity and Access Management (IAM) allows you to manage users and user permissions in AWS. An IAM policy explicitly lists actions that are allowed and the resources on which the actions are applicable.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "The following are the minimum permissions generally required for Kinesis Data Streams producers and consumers.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "For this tutorial, you will create a single IAM policy that grants all of the above permissions. In production, you might want to create two policies, one for producers and one for consumers.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "The resulting policy document should look like this:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-iam-next",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-download.html",
"title": "Step 3: Download and Build the Code"
}
],
"text": "Step 3: Download and Build the Code",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-iam.html#tutorial-stock-data-kplkcl2-iam-next",
"main_header": "Next Steps",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-download",
"text": "Step 3: Download and Build the Code"
},
"links": [],
"text": "This topic provides sample implementation code for the sample stock trades ingestion into the data stream (producer) and the processing of this data (consumer).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-download.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-download.html#tutorial-stock-data-kplkcl2-download",
"main_header": "Step 3: Download and Build the Code",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-download",
"text": "Step 3: Download and Build the Code"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html",
"title": "Step 4: Implement the Producer"
}
],
"text": "If you complete these steps successfully, you are now ready to move to the next section, Step 4: Implement the Producer.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-download.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-download.html#tutorial-stock-data-kplkcl2-download",
"main_header": "Step 3: Download and Build the Code",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-download",
"text": "Step 3: Download and Build the Code"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-download-next",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html",
"title": "Step 4: Implement the Producer"
}
],
"text": "Step 4: Implement the Producer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-download.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-download.html#tutorial-stock-data-kplkcl2-download-next",
"main_header": "Next Steps",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-producer",
"text": "Step 4: Implement the Producer"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html#tutorial-stock-data-kplkcl2-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-producer",
"text": "Step 4: Implement the Producer"
},
"links": [],
"text": "This tutorial uses the real-world scenario of stock market trade monitoring. The following principles briefly explain how this scenario maps to the producer and its supporting code structure.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html#tutorial-stock-data-kplkcl2-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-producer",
"text": "Step 4: Implement the Producer"
},
"links": [
{
"url": "https://github.com/aws-samples/amazon-kinesis-learning ",
"title": "source code"
}
],
"text": "Refer to the source code and review the following information.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html#tutorial-stock-data-kplkcl2-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-producer",
"text": "Step 4: Implement the Producer"
},
"links": [],
"text": "You should see output similar to the following:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html#tutorial-stock-data-kplkcl2-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-producer",
"text": "Step 4: Implement the Producer"
},
"links": [],
"text": "Your stock trades are now being ingested by Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html#tutorial-stock-data-kplkcl2-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-producer",
"text": "Step 4: Implement the Producer"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-producer-next",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html",
"title": "Step 5: Implement the Consumer"
}
],
"text": "Step 5: Implement the Consumer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-producer.html#tutorial-stock-data-kplkcl2-producer-next",
"main_header": "Next Steps",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"title": "Using the Kinesis Client Library"
}
],
"text": "The consumer application in this tutorial continuously processes the stock trades in your data stream. It then outputs the most popular stocks being bought and sold every minute. The application is built on top of the Kinesis Client Library (KCL), which does much of the heavy lifting common to consumer apps. For more information, see Using the Kinesis Client Library.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html#tutorial-stock-data-kplkcl2-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [],
"text": "Refer to the source code and review the following information.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html#tutorial-stock-data-kplkcl2-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [],
"text": "Add code to the methods of the StockTradeRecordProcessor class, as shown in the following steps.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html#tutorial-stock-data-kplkcl2-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [],
"text": "After a minute, you should see output like the following, refreshed every minute thereafter:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html#tutorial-stock-data-kplkcl2-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer",
"text": "Step 5: Implement the Consumer"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer-next",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html",
"title": "Step 6: (Optional) Extending the Consumer"
}
],
"text": "Step 6: (Optional) Extending the Consumer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer.html#tutorial-stock-data-kplkcl2-consumer-next",
"main_header": "Next Steps",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer-extension",
"text": "Step 6: (Optional) Extending the Consumer"
},
"links": [],
"text": "This optional section shows how you can extend the consumer code for a slightly more elaborate scenario.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html#tutorial-stock-data-kplkcl2-consumer-extension",
"main_header": "Step 6: (Optional) Extending the Consumer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer-extension",
"text": "Step 6: (Optional) Extending the Consumer"
},
"links": [],
"text": "If you want to know about the biggest sell orders each minute, you can modify the StockStats class in three places to accommodate this new priority.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html#tutorial-stock-data-kplkcl2-consumer-extension",
"main_header": "Step 6: (Optional) Extending the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer-extension",
"text": "Step 6: (Optional) Extending the Consumer"
},
"links": [],
"text": "If you run the consumer now (remember to run the producer also), you should see output similar to this:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html#tutorial-stock-data-kplkcl2-consumer-extension",
"main_header": "Step 6: (Optional) Extending the Consumer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer-extension",
"text": "Step 6: (Optional) Extending the Consumer"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-consumer-extension-next",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html",
"title": "Step 7: Finishing Up"
}
],
"text": "Step 7: Finishing Up",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-consumer-extension.html#tutorial-stock-data-kplkcl2-consumer-extension-next",
"main_header": "Next Steps",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-finish",
"text": "Step 7: Finishing Up"
},
"links": [],
"text": "Because you are paying to use the Kinesis data stream, make sure that you delete it and the corresponding Amazon DynamoDB table when you are done with it. Nominal charges occur on an active stream even when you aren't sending and getting records. This is because an active stream is using resources by continuously \"listening\" for incoming records and requests to get records.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html#tutorial-stock-data-kplkcl2-finish",
"main_header": "Step 7: Finishing Up",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-finish",
"text": "Step 7: Finishing Up"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-summary",
"text": "Summary"
},
"links": [],
"text": "Processing a large amount of data in near-real time doesn\u00e2\u0080\u0099t require writing any magical code or developing a huge infrastructure. It is as simple as writing logic to process a small amount of data (like writing processRecord(Record)) but using Kinesis Data Streams to scale so that it works for a large amount of streaming data. You don\u00e2\u0080\u0099t have to worry about how your processing would scale because Kinesis Data Streams handles it for you. All you have to do is send your streaming records to Kinesis Data Streams and write the logic to process each new record received.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html#tutorial-stock-data-kplkcl2-summary",
"main_header": "Summary",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl2-finish",
"text": "Step 7: Finishing Up"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl2-summary",
"text": "Summary"
},
"links": [],
"text": "Here are some potential enhancements for this application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2-finish.html#tutorial-stock-data-kplkcl2-summary",
"main_header": "Summary",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl2.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
},
"links": [],
"text": "The scenario for this tutorial involves ingesting stock trades into a data stream and writing a simple Amazon Kinesis Data Streams application that performs calculations on the stream. You will learn how to send a stream of records to Kinesis Data Streams and implement an application that consumes and processes the records in near-real time.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html#tutorial-stock-data-kplkcl",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
},
"links": [],
"text": "The code does not access actual stock market data, but instead simulates the stream of stock trades. It does so by using a random stock trade generator that has a starting point of real market data for the top 25 stocks by market capitalization as of February 2015. If you have access to a real-time stream of stock trades, you might be interested in deriving useful, timely statistics from that stream. For example, you might want to perform a sliding window analysis where you determine the most popular stock purchased in the last 5 minutes. Or you might want a notification whenever there is a sell order that is too large (that is, it has too many shares). You can extend the code in this series to provide such functionality.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html#tutorial-stock-data-kplkcl",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
},
"links": [],
"text": "You can work through the steps in this tutorial on your desktop or laptop computer and run both the producer and consumer code on the same machine or any platform that supports the defined requirements, such as Amazon Elastic Compute Cloud (Amazon EC2).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html#tutorial-stock-data-kplkcl",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl",
"text": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
},
"links": [
{
"url": "https://docs.aws.amazon.com/general/latest/gr/rande.html#ak_region",
"title": "AWS Regions that support Kinesis Data Streams"
}
],
"text": "The examples shown use the US West (Oregon) Region, but they work on any of the AWS Regions that support Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html#tutorial-stock-data-kplkcl",
"main_header": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-begin",
"text": "Prerequisites"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
],
"text": "The following are requirements for completing the Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html#tutorial-stock-data-kplkcl-begin",
"main_header": "Prerequisites",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-begin-aws",
"text": "Amazon Web Services Account"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html",
"title": "Amazon Kinesis Data Streams Terminology and Concepts"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-tutorial-cli-installation.html",
"title": "Install and Configure the AWS CLI"
}
],
"text": "Before you begin, ensure that you are familiar with the concepts discussed in Amazon Kinesis Data Streams Terminology and Concepts, particularly streams, shards, producers, and consumers. It is also helpful to have completed Install and Configure the AWS CLI.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html#tutorial-stock-data-kplkcl-begin-aws",
"main_header": "Amazon Web Services Account",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-begin-aws",
"text": "Amazon Web Services Account"
},
"links": [],
"text": "You need an AWS account and a web browser to access the AWS Management Console.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html#tutorial-stock-data-kplkcl-begin-aws",
"main_header": "Amazon Web Services Account",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-begin-aws",
"text": "Amazon Web Services Account"
},
"links": [
{
"url": "https://console.aws.amazon.com/console/home",
"title": "AWS Management Console"
},
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/console.html",
"title": "IAM sign-in page"
},
{
"url": "https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html",
"title": "Understanding and getting your security credentials"
}
],
"text": "For console access, use your IAM user name and password to sign in to the AWS Management Console from the IAM sign-in page. IAM lets you securely control access to AWS services and resources in your AWS account. For details about console and programmatic credentials, see Understanding and getting your security credentials in the AWS General Reference.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html#tutorial-stock-data-kplkcl-begin-aws",
"main_header": "Amazon Web Services Account",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-begin-aws",
"text": "Amazon Web Services Account"
},
"links": [
{
"url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html#create-an-iam-user",
"title": "Create an IAM User"
}
],
"text": "For more information about IAM and security key setup instructions, see Create an IAM User.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html#tutorial-stock-data-kplkcl-begin-aws",
"main_header": "Amazon Web Services Account",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-begin-sys",
"text": "System Software Requirements"
},
"links": [
{
"url": "http://www.oracle.com/technetwork/java/javase/downloads/index.html",
"title": "Oracle's Java SE installation site"
}
],
"text": "The system used to run the application must have Java 7 or higher installed. To download and install the latest Java Development Kit (JDK), go to Oracle's Java SE installation site.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html#tutorial-stock-data-kplkcl-begin-sys",
"main_header": "System Software Requirements",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-begin-sys",
"text": "System Software Requirements"
},
"links": [
{
"url": "https://www.eclipse.org/downloads/",
"title": "Eclipse"
}
],
"text": "If you have a Java IDE, such as Eclipse, you can open the source code, edit, build, and run it.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html#tutorial-stock-data-kplkcl-begin-sys",
"main_header": "System Software Requirements",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-begin-sys",
"text": "System Software Requirements"
},
"links": [
{
"url": "https://aws.amazon.com/sdk-for-java/",
"title": "AWS SDK for Java"
},
{
"url": "https://aws.amazon.com/eclipse/",
"title": "AWS Toolkit for Eclipse"
}
],
"text": "You need the latest AWS SDK for Java version. If you are using Eclipse as your IDE, you can install the AWS Toolkit for Eclipse instead.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html#tutorial-stock-data-kplkcl-begin-sys",
"main_header": "System Software Requirements",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-begin-sys",
"text": "System Software Requirements"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client",
"title": "Kinesis Client Library (Java)"
}
],
"text": "The consumer application requires the Kinesis Client Library (KCL) version 1.2.1 or higher, which you can obtain from GitHub at Kinesis Client Library (Java).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html#tutorial-stock-data-kplkcl-begin-sys",
"main_header": "System Software Requirements",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-begin",
"text": "Prerequisites"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-begin-next",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html",
"title": "Step 1: Create a Data Stream"
}
],
"text": "Step 1: Create a Data Stream",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-begin.html#tutorial-stock-data-kplkcl-begin-next",
"main_header": "Next Steps",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream",
"text": "Step 1: Create a Data Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
],
"text": "In the first step of the Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x, you create the stream that you will use in subsequent steps.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html#tutorial-stock-data-kplkcl-create-stream",
"main_header": "Step 1: Create a Data Stream",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream",
"text": "Step 1: Create a Data Stream"
},
"links": [],
"text": "On the Kinesis streams list page, the status of your stream is CREATING while the stream is being created. When the stream is ready to use, the status changes to ACTIVE. Choose the name of your stream. In the page that appears, the Details tab displays a summary of your stream configuration. The Monitoring section displays monitoring information for the stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html#tutorial-stock-data-kplkcl-create-stream",
"main_header": "Step 1: Create a Data Stream",
"images": [],
"container_type": "p",
"children_tags": [
"b",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream",
"text": "Step 1: Create a Data Stream"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream-info",
"text": "Additional Information About Shards"
},
"links": [],
"text": "When you begin to use Kinesis Data Streams outside of this tutorial, you might need to plan the stream creation process more carefully. You should plan for expected maximum demand when you provision shards. Using this scenario as an example, US stock market trading traffic peaks during the day (Eastern time) and demand estimates should be sampled from that time of day. You then have a choice to provision for the maximum expected demand, or scale your stream up and down in response to demand fluctuations.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html#tutorial-stock-data-kplkcl-create-stream-info",
"main_header": "Additional Information About Shards",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream",
"text": "Step 1: Create a Data Stream"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream-info",
"text": "Additional Information About Shards"
},
"links": [],
"text": "A shard is a unit of throughput capacity. On the Create Kinesis stream page, expand Estimate the number of shards you'll need. Enter the average record size, the maximum records written per second, and the number of consuming applications, using the following guidelines:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html#tutorial-stock-data-kplkcl-create-stream-info",
"main_header": "Additional Information About Shards",
"images": [],
"container_type": "p",
"children_tags": [
"em",
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream",
"text": "Step 1: Create a Data Stream"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream-info",
"text": "Additional Information About Shards"
},
"links": [
{
"url": "https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&limitType=service-code-kinesis",
"title": "Kinesis Data Streams Limits form"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
],
"text": "If the estimated number of shards shown exceeds your current shard limit, you might need to submit a request to increase that limit before you can create a stream with that number of shards. To request an increase to your shard limit, use the Kinesis Data Streams Limits form. For more information about streams and shards, see Creating and Managing Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html#tutorial-stock-data-kplkcl-create-stream-info",
"main_header": "Additional Information About Shards",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream",
"text": "Step 1: Create a Data Stream"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-create-stream-next",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"title": "Step 2: Create an IAM Policy and User"
}
],
"text": "Step 2: Create an IAM Policy and User",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-create-stream.html#tutorial-stock-data-kplkcl-create-stream-next",
"main_header": "Next Steps",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html",
"title": "IAM policy"
}
],
"text": "Security best practices for AWS dictate the use of fine-grained permissions to control access to different resources. AWS Identity and Access Management (IAM) allows you to manage users and user permissions in AWS. An IAM policy explicitly lists actions that are allowed and the resources on which the actions are applicable.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "The following are the minimum permissions generally required for a Kinesis Data Streams producer and consumer.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "For this application, you create a single IAM policy that grants all of the preceding permissions. In practice, you might want to consider creating two policies, one for producers and one for consumers.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"links": [],
"text": "The resulting policy document should look something like the following:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam",
"main_header": "Step 2: Create an IAM Policy and User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-iam",
"text": "Step 2: Create an IAM Policy and User"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-iam-next",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-download.html",
"title": "Step 3: Download and Build the Implementation Code"
}
],
"text": "Step 3: Download and Build the Implementation Code",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-iam.html#tutorial-stock-data-kplkcl-iam-next",
"main_header": "Next Steps",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-download",
"text": "Step 3: Download and Build the Implementation Code"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
],
"text": "Skeleton code is provided for the Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x. It contains a stub implementation for both the stock trade stream ingestion (producer) and the processing of the data (consumer). The following procedure shows how to complete the implementations.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-download.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-download.html#tutorial-stock-data-kplkcl-download",
"main_header": "Step 3: Download and Build the Implementation Code",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-download",
"text": "Step 3: Download and Build the Implementation Code"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"title": "Step 4: Implement the Producer"
}
],
"text": "If you complete these steps successfully, you are now ready to move to the next section, Step 4: Implement the Producer. If your build generates errors at any stage, investigate and fix them before proceeding.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-download.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-download.html#tutorial-stock-data-kplkcl-download",
"main_header": "Step 3: Download and Build the Implementation Code",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-download",
"text": "Step 3: Download and Build the Implementation Code"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-download-next",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"title": "Step 4: Implement the Producer"
}
],
"text": "Step 4: Implement the Producer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-download.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-download.html#tutorial-stock-data-kplkcl-download-next",
"main_header": "Next Steps",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-producer",
"text": "Step 4: Implement the Producer"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html#tutorial-stock-data-kplkcl-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-producer",
"text": "Step 4: Implement the Producer"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
],
"text": "The application in the Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x uses the real-world scenario of stock market trade monitoring. The following principles briefly explain how this scenario maps to the producer and supporting code structure.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html#tutorial-stock-data-kplkcl-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-producer",
"text": "Step 4: Implement the Producer"
},
"links": [],
"text": "Refer to the source code and review the following information.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html#tutorial-stock-data-kplkcl-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-producer",
"text": "Step 4: Implement the Producer"
},
"links": [],
"text": "You should see output similar to the following:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html#tutorial-stock-data-kplkcl-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-producer",
"text": "Step 4: Implement the Producer"
},
"links": [],
"text": "Your stock trade stream is now being ingested by Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html#tutorial-stock-data-kplkcl-producer",
"main_header": "Step 4: Implement the Producer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-producer",
"text": "Step 4: Implement the Producer"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-producer-next",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"title": "Step 5: Implement the Consumer"
}
],
"text": "Step 5: Implement the Consumer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html#tutorial-stock-data-kplkcl-producer-next",
"main_header": "Next Steps",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"title": "Step 4: Implement the Producer"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
],
"text": "The consumer application in the Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x continuously processes the stock trades stream that you created in Step 4: Implement the Producer. It then outputs the most popular stocks being bought and sold every minute. The application is built on top of the Kinesis Client Library (KCL), which does much of the heavy lifting common to consumer apps. For more information, see Developing KCL 1.x Consumers.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [],
"text": "Refer to the source code and review the following information.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [],
"text": "Add code to the methods of the StockTradeRecordProcessor class, as shown in the following steps.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"links": [],
"text": "After a minute, you should see output like the following, refreshed every minute thereafter:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer",
"main_header": "Step 5: Implement the Consumer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-consumer-supplement",
"text": "Additional Information About the Consumer"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
],
"text": "If you are familiar with the advantages of the Kinesis Client Library, discussed in Developing KCL 1.x Consumers and elsewhere, you might wonder why you should use it here. Although you use only a single shard stream and a single consumer instance to process it, it is still easier to implement the consumer using the KCL. Compare the code implementation steps in the producer section to the consumer, and you can see the comparative ease of implementing a consumer. This is largely due to the services that the KCL provides.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer-supplement",
"main_header": "Additional Information About the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-consumer-supplement",
"text": "Additional Information About the Consumer"
},
"links": [],
"text": "In this application, you focus on implementing a record processor class that can process individual records. You don\u00e2\u0080\u0099t have to worry about how the records are fetched from Kinesis Data Streams; The KCL fetches the records and invoke the record processor whenever there are new records available. Also, you don\u00e2\u0080\u0099t have to worry about how many shards and consumer instances there are. If the stream is scaled up, you don\u00e2\u0080\u0099t have to rewrite your application to handle more than one shard or one consumer instance.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer-supplement",
"main_header": "Additional Information About the Consumer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-consumer-supplement",
"text": "Additional Information About the Consumer"
},
"links": [],
"text": "The term checkpointing means recording the point in the stream up to the data records that have been consumed and processed thus far, so that if the application crashes, the stream is read from that point and not from the beginning of the stream. The subject of checkpointing and the various design patterns and best practices for it are outside the scope of this chapter. However, it is something you may encounter in production environments.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer-supplement",
"main_header": "Additional Information About the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-consumer-supplement",
"text": "Additional Information About the Consumer"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-producer.html",
"title": "Step 4: Implement the Producer"
}
],
"text": "As you learned in Step 4: Implement the Producer, the put operations in the Kinesis Data Streams API take a partition key as input. Kinesis Data Streams uses a partition key as a mechanism to split records across multiple shards (when there is more than one shard in the stream). The same partition key always routes to the same shard. This allows the consumer that processes a particular shard to be designed with the assumption that records with the same partition key are only sent to that consumer, and no records with the same partition key end up at any other consumer. Therefore, a consumer's worker can aggregate all records with the same partition key without worrying that it might be missing needed data.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer-supplement",
"main_header": "Additional Information About the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-consumer-supplement",
"text": "Additional Information About the Consumer"
},
"links": [],
"text": "In this application, the consumer's processing of records is not intensive, so you can use one shard and do the processing in the same thread as the KCL thread. However, in practice, consider first scaling up the number of shards. In some cases you may want to switch processing to a different thread, or use a thread pool if your record processing is expected to be intensive. In this way, the KCL can fetch new records more quickly while the other threads can process the records in parallel. Multithreaded design is not trivial and should be approached with advanced techniques, so increasing your shard count is usually the most effective and easiest way to scale up.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer-supplement",
"main_header": "Additional Information About the Consumer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer",
"text": "Step 5: Implement the Consumer"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-consumer-next",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html",
"title": "Step 6: (Optional) Extending the Consumer"
}
],
"text": "Step 6: (Optional) Extending the Consumer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer.html#tutorial-stock-data-kplkcl-consumer-next",
"main_header": "Next Steps",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer-extension",
"text": "Step 6: (Optional) Extending the Consumer"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
],
"text": "The application in the Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x might already be sufficient for your purposes. This optional section shows how you can extend the consumer code for a slightly more elaborate scenario.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html#tutorial-stock-data-kplkcl-consumer-extension",
"main_header": "Step 6: (Optional) Extending the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer-extension",
"text": "Step 6: (Optional) Extending the Consumer"
},
"links": [],
"text": "If you want to know about the biggest sell orders each minute, you can modify the StockStats class in three places to accommodate this new priority.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html#tutorial-stock-data-kplkcl-consumer-extension",
"main_header": "Step 6: (Optional) Extending the Consumer",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer-extension",
"text": "Step 6: (Optional) Extending the Consumer"
},
"links": [],
"text": "If you run the consumer now (remember to run the producer also), you should see output similar to this:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html#tutorial-stock-data-kplkcl-consumer-extension",
"main_header": "Step 6: (Optional) Extending the Consumer",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-consumer-extension",
"text": "Step 6: (Optional) Extending the Consumer"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-consumer-extension-next",
"text": "Next Steps"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html",
"title": "Step 7: Finishing Up"
}
],
"text": "Step 7: Finishing Up",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-consumer-extension.html#tutorial-stock-data-kplkcl-consumer-extension-next",
"main_header": "Next Steps",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-finish",
"text": "Step 7: Finishing Up"
},
"links": [],
"text": "Because you are paying to use the Kinesis data stream, make sure that you delete it and the corresponding Amazon DynamoDB table when you are done with it. Nominal charges occur on an active stream even when you aren't sending and getting records. This is because an active stream is using resources by continuously \"listening\" for incoming records and requests to get records.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html#tutorial-stock-data-kplkcl-finish",
"main_header": "Step 7: Finishing Up",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-finish",
"text": "Step 7: Finishing Up"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-summary",
"text": "Summary"
},
"links": [],
"text": "Processing a large amount of data in near-real time doesn\u00e2\u0080\u0099t require writing any magical code or developing a huge infrastructure. It is as simple as writing logic to process a small amount of data (like writing processRecord(Record)) but using Kinesis Data Streams to scale so that it works for a large amount of streaming data. You don\u00e2\u0080\u0099t have to worry about how your processing would scale because Kinesis Data Streams handles it for you. All you have to do is send your streaming records to Kinesis Data Streams and write the logic to process each new record received.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html#tutorial-stock-data-kplkcl-summary",
"main_header": "Summary",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-kplkcl-finish",
"text": "Step 7: Finishing Up"
},
"h2": {
"urllink": "#tutorial-stock-data-kplkcl-summary",
"text": "Summary"
},
"links": [],
"text": "Here are some potential enhancements for this application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl-finish.html#tutorial-stock-data-kplkcl-summary",
"main_header": "Summary",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-kplkcl.html",
"title": "Tutorial: Process Real-Time Stock Data Using KPL and KCL 1.x"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data",
"text": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesisanalytics/latest/java/what-is.html",
"title": "Amazon Kinesis Data Analytics"
}
],
"text": "The scenario for this tutorial involves ingesting stock trades into a data stream and writing a simple Amazon Kinesis Data Analytics application that performs calculations on the stream. You will learn how to send a stream of records to Kinesis Data Streams and implement an application that consumes and processes the records in near-real time.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html#tutorial-stock-data",
"main_header": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data",
"text": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
},
"links": [],
"text": "With Amazon Kinesis Data Analytics for Flink Applications, you can use Java or Scala to process and analyze streaming data. The service enables you to author and run Java or Scala code against streaming sources to perform time-series analytics, feed real-time dashboards, and create real-time metrics.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html#tutorial-stock-data",
"main_header": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data",
"text": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
},
"links": [
{
"url": "https://flink.apache.org/",
"title": "Apache Flink"
}
],
"text": "You can build Flink applications in Kinesis Data Analytics using open-source libraries based on Apache Flink. Apache Flink is a popular framework and engine for processing data streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html#tutorial-stock-data",
"main_header": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data",
"text": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
},
"links": [],
"text": "The code does not access actual stock market data, but instead simulates the stream of stock trades. It does so by using a random stock trade generator. If you have access to a real-time stream of stock trades, you might be interested in deriving useful, timely statistics from that stream. For example, you might want to perform a sliding window analysis where you determine the most popular stock purchased in the last 5 minutes. Or you might want a notification whenever there is a sell order that is too large (that is, it has too many shares). You can extend the code in this series to provide such functionality.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html#tutorial-stock-data",
"main_header": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data",
"text": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
},
"links": [
{
"url": "https://docs.aws.amazon.com/general/latest/gr/rande.html#ka_region",
"title": "AWS Regions that support Kinesis Data Analytics"
}
],
"text": "The examples shown use the US West (Oregon) Region, but they work on any of the AWS Regions that support Kinesis Data Analytics.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html#tutorial-stock-data",
"main_header": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data",
"text": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
},
"h2": {
"urllink": "#setting-up-prerequisites",
"text": "Prerequisites for Completing the Exercises"
},
"links": [],
"text": "To complete the steps in this guide, you must have the following:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html#setting-up-prerequisites",
"main_header": "Prerequisites for Completing the Exercises",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data",
"text": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
},
"h2": {
"urllink": "#setting-up-prerequisites",
"text": "Prerequisites for Completing the Exercises"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"title": "Step 1: Set Up an AWS Account and Create an Administrator User"
}
],
"text": "To get started, go to Step 1: Set Up an AWS Account and Create an Administrator User.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html#setting-up-prerequisites",
"main_header": "Prerequisites for Completing the Exercises",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"links": [],
"text": "Before you use Amazon Kinesis Data Analytics for Flink Applications for the first time, complete the following tasks:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up",
"main_header": "Step 1: Set Up an AWS Account and Create an Administrator User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-signup",
"text": "Sign Up for AWS"
},
"links": [],
"text": "When you sign up for Amazon Web Services (AWS), your AWS account is automatically signed up for all services in AWS, including Amazon Kinesis Data Analytics. You are charged only for the services that you use.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-signup",
"main_header": "Sign Up for AWS",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-signup",
"text": "Sign Up for AWS"
},
"links": [
{
"url": "https://aws.amazon.com/free/",
"title": "AWS Free Tier"
}
],
"text": "With Kinesis Data Analytics, you pay only for the resources that you use. If you are a new AWS customer, you can get started with Kinesis Data Analytics for free. For more information, see AWS Free Tier.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-signup",
"main_header": "Sign Up for AWS",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-signup",
"text": "Sign Up for AWS"
},
"links": [],
"text": "If you already have an AWS account, skip to the next task. If you don't have an AWS account, follow these steps to create one.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-signup",
"main_header": "Sign Up for AWS",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-signup",
"text": "Sign Up for AWS"
},
"links": [],
"text": "Note your AWS account ID because you'll need it for the next task.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-signup",
"main_header": "Sign Up for AWS",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "Services in AWS, such as Amazon Kinesis Data Analytics, require that you provide credentials when you access them. This is so that the service can determine whether you have permissions to access the resources that are owned by that service. The AWS Management Console requires that you enter your password.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "You can create access keys for your AWS account to access the AWS Command Line Interface (AWS CLI) or API. However, we don't recommend that you access AWS using the credentials for your AWS account. Instead, we recommend that you use AWS Identity and Access Management (IAM). Create an IAM user, add the user to an IAM group with administrative permissions, and then grant administrative permissions to the IAM user that you created. You can then access AWS using a special URL and that IAM user's credentials.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "If you signed up for AWS, but you haven't created an IAM user for yourself, you can create one using the IAM console.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "The getting started exercises in this guide assume that you have a user (adminuser) with administrator permissions. Follow the procedure to create adminuser in your account.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "Your new group is listed under Group Name.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "To sign in after you create an account alias, use the following URL:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "https://your_account_alias.signin.aws.amazon.com/console/",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "To verify the sign-in link for IAM users for your account, open the IAM console and check under IAM users sign-in link on the dashboard.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-iam",
"text": "Create an IAM User"
},
"links": [],
"text": "For more information about IAM, see the following:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-iam",
"main_header": "Create an IAM User",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setting-up",
"text": "Step 1: Set Up an AWS Account and Create an Administrator User"
},
"h2": {
"urllink": "#setting-up-next-step-2",
"text": "Next Step"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"title": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
}
],
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setting-up.html#setting-up-next-step-2",
"main_header": "Next Step",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"links": [],
"text": "In this step, you download and configure the AWS CLI to use with Amazon Kinesis Data Analytics for Flink Applications.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setup-awscli",
"main_header": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"links": [],
"text": "After you set up an AWS account and the AWS CLI, you can try the next exercise, in which you configure a sample application and test the end-to-end setup.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setup-awscli",
"main_header": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#setup-awscli",
"text": "Step 2: Set Up the AWS Command Line Interface (AWS CLI)"
},
"h2": {
"urllink": "#setting-up-next-step-3",
"text": "Next Step"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"title": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
}
],
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/setup-awscli.html#setting-up-next-step-3",
"main_header": "Next Step",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"links": [],
"text": "In this exercise, you create a Kinesis Data Analytics for Flink application with data streams as a source and a sink.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise",
"main_header": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-1",
"text": "Create Two Amazon Kinesis Data Streams"
},
"links": [],
"text": "Before you create a Kinesis Data Analytics for Flink application for this exercise, create two Kinesis data streams (ExampleInputStream and ExampleOutputStream). Your application uses these streams for the application source and destination streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-1",
"main_header": "Create Two Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-1",
"text": "Create Two Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/dev/amazon-kinesis-streams.html",
"title": "Creating and Updating Data Streams"
}
],
"text": "You can create these streams using either the Amazon Kinesis console or the following AWS CLI command. For console instructions, see Creating and Updating Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-1",
"main_header": "Create Two Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-2",
"text": "Write Sample Records to the Input Stream"
},
"links": [],
"text": "In this section, you use a Python script to write sample records to the stream for the application to process.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-2",
"main_header": "Write Sample Records to the Input Stream",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5",
"text": "Download and Examine the Apache Flink Streaming Java Code"
},
"links": [],
"text": "The Java application code for this examples is available from GitHub. To download the application code, do the following:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5",
"main_header": "Download and Examine the Apache Flink Streaming Java Code",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5",
"text": "Download and Examine the Apache Flink Streaming Java Code"
},
"links": [],
"text": "The application code is located in the CustomSinkStreamingJob.java and CloudWatchLogSink.java files. Note the following about the application code:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5",
"main_header": "Download and Examine the Apache Flink Streaming Java Code",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5.5",
"text": "Compile the Application Code"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html#setting-up-prerequisites",
"title": "Prerequisites for Completing the Exercises"
}
],
"text": "In this section, you use the Apache Maven compiler to create the Java code for the application. For information about installing Apache Maven and the Java Development Kit (JDK), see Prerequisites for Completing the Exercises.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5.5",
"main_header": "Compile the Application Code",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5.5",
"text": "Compile the Application Code"
},
"links": [],
"text": "Your Java application requires the following components:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5.5",
"main_header": "Compile the Application Code",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5.5",
"text": "Compile the Application Code"
},
"links": [],
"text": "If the application compiles successfully, the following file is created:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5.5",
"main_header": "Compile the Application Code",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-5.5",
"text": "Compile the Application Code"
},
"links": [],
"text": "target/java-getting-started-1.0.jar",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-5.5",
"main_header": "Compile the Application Code",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-6",
"text": "Upload the Apache Flink Streaming Java Code"
},
"links": [],
"text": "In this section, you create an Amazon Simple Storage Service (Amazon S3) bucket and upload your application code.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-6",
"main_header": "Upload the Apache Flink Streaming Java Code",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-6",
"text": "Upload the Apache Flink Streaming Java Code"
},
"links": [],
"text": "Your application code is now stored in an Amazon S3 bucket where your application can access it.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-6",
"main_header": "Upload the Apache Flink Streaming Java Code",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"links": [],
"text": "You can create and run a Kinesis Data Analytics for Flink application using either the console or the AWS CLI.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7",
"main_header": "Create and Run the Kinesis Data Analytics Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"links": [],
"text": "Follow these steps to create, configure, update, and run the application using the console.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console",
"main_header": "Create and Run the Application (Console)",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-iam",
"text": "Edit the IAM Policy"
},
"links": [],
"text": "Edit the IAM policy to add permissions to access the Kinesis data streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-iam",
"main_header": "Edit the IAM Policy",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-stop",
"text": "Stop the Application"
},
"links": [],
"text": "On the MyApplication page, choose Stop. Confirm the action.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-stop",
"main_header": "Stop the Application",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-update",
"text": "Update the Application"
},
"links": [],
"text": "Using the console, you can update application settings such as application properties, monitoring settings, and the location or file name of the application JAR. You can also reload the application JAR from the Amazon S3 bucket if you need to update the application code.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-update",
"main_header": "Update the Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-console",
"text": "Create and Run the Application (Console)"
},
"h4": {
"urllink": "#get-started-exercise-7-console-update",
"text": "Update the Application"
},
"links": [],
"text": "On the MyApplication page, choose Configure. Update the application settings and choose Update.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-console-update",
"main_header": "Update the Application",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"links": [],
"text": "In this section, you use the AWS CLI to create and run the Kinesis Data Analytics application. Kinesis Data Analytics for Flink Applications uses the kinesisanalyticsv2 AWS CLI command to create and interact with Kinesis Data Analytics applications.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli",
"main_header": "Create and Run the Application (AWS CLI)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-policy",
"text": "Create a Permissions Policy"
},
"links": [],
"text": "First, you create a permissions policy with two statements: one that grants permissions for the read action on the source stream, and another that grants permissions for write actions on the sink stream. You then attach the policy to an IAM role (which you create in the next section). Thus, when Kinesis Data Analytics assumes the role, the service has the necessary permissions to read from the source stream and write to the sink stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-policy",
"main_header": "Create a Permissions Policy",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-policy",
"text": "Create a Permissions Policy"
},
"links": [],
"text": "Use the following code to create the KAReadSourceStreamWriteSinkStream permissions policy. Replace username with the user name that you used to create the Amazon S3 bucket to store the application code. Replace the account ID in the Amazon Resource Names (ARNs) (012345678901) with your account ID.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-policy",
"main_header": "Create a Permissions Policy",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-policy",
"text": "Create a Permissions Policy"
},
"links": [
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_managed-policies.html#part-two-create-policy",
"title": "Tutorial: Create and Attach Your First Customer Managed Policy"
}
],
"text": "For step-by-step instructions to create a permissions policy, see Tutorial: Create and Attach Your First Customer Managed Policy in the IAM User Guide.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-policy",
"main_header": "Create a Permissions Policy",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-role",
"text": "Create an IAM Role"
},
"links": [],
"text": "In this section, you create an IAM role that the Kinesis Data Analytics for Flink application can assume to read a source stream and write to the sink stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-role",
"main_header": "Create an IAM Role",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-role",
"text": "Create an IAM Role"
},
"links": [],
"text": "Kinesis Data Analytics cannot access your stream without permissions. You grant these permissions via an IAM role. Each IAM role has two policies attached. The trust policy grants Kinesis Data Analytics permission to assume the role, and the permissions policy determines what Kinesis Data Analytics can do after assuming the role.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-role",
"main_header": "Create an IAM Role",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-role",
"text": "Create an IAM Role"
},
"links": [],
"text": "You attach the permissions policy that you created in the preceding section to this role.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-role",
"main_header": "Create an IAM Role",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-role",
"text": "Create an IAM Role"
},
"links": [],
"text": "You now have created the service execution role that your application uses to access resources. Make a note of the ARN of the new role.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-role",
"main_header": "Create an IAM Role",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-role",
"text": "Create an IAM Role"
},
"links": [
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user.html#roles-creatingrole-user-console",
"title": "Creating an IAM Role (Console)"
}
],
"text": "For step-by-step instructions for creating a role, see Creating an IAM Role (Console) in the IAM User Guide.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-role",
"main_header": "Create an IAM Role",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-create",
"text": "Create the Kinesis Data Analytics Application"
},
"links": [],
"text": "The application is now created. You start the application in the next step.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-create",
"main_header": "Create the Kinesis Data Analytics Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-start",
"text": "Start the Application"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesisanalytics/latest/apiv2/API_StartApplication.html",
"title": "StartApplication"
}
],
"text": "In this section, you use the StartApplication action to start the application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-start",
"main_header": "Start the Application",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-start",
"text": "Start the Application"
},
"links": [],
"text": "The application is now running. You can check the Kinesis Data Analytics metrics on the Amazon CloudWatch console to verify that the application is working.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-start",
"main_header": "Start the Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-stop",
"text": "Stop the Application"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesisanalytics/latest/apiv2/API_StopApplication.html",
"title": "StopApplication"
}
],
"text": "In this section, you use the StopApplication action to stop the application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-stop",
"main_header": "Stop the Application",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#get-started-exercise",
"text": "Step 3: Create and Run a Kinesis Data Analytics for Flink Application"
},
"h2": {
"urllink": "#get-started-exercise-7",
"text": "Create and Run the Kinesis Data Analytics Application"
},
"h3": {
"urllink": "#get-started-exercise-7-cli",
"text": "Create and Run the Application (AWS CLI)"
},
"h4": {
"urllink": "#get-started-exercise-7-cli-stop",
"text": "Stop the Application"
},
"links": [],
"text": "The application is now stopped.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/get-started-exercise.html#get-started-exercise-7-cli-stop",
"main_header": "Stop the Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data.html",
"title": "Tutorial: Analyze Real-Time Stock Data Using Kinesis Data Analytics for Flink Applications"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-lambda",
"text": "Tutorial: Using AWS Lambda with Amazon Kinesis Data Streams"
},
"links": [],
"text": "In this tutorial, you create a Lambda function to consume events from a Kinesis data stream. In this example scenario, a custom application writes records to a Kinesis data stream. AWS Lambda then polls this data stream and, when it detects new data records, invokes your Lambda function. AWS Lambda then executes the Lambda function by assuming the execution role that you specified when you created the Lambda function.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-lambda.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-lambda.html#tutorial-stock-data-lambda",
"main_header": "Tutorial: Using AWS Lambda with Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#tutorial-stock-data-lambda",
"text": "Tutorial: Using AWS Lambda with Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis-example.html",
"title": "Tutorial: Using AWS Lambda with Amazon Kinesis"
}
],
"text": "For the detailed step by step instructions, see Tutorial: Using AWS Lambda with Amazon Kinesis.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-lambda.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tutorial-stock-data-lambda.html#tutorial-stock-data-lambda",
"main_header": "Tutorial: Using AWS Lambda with Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#examples-streaming-solution",
"text": "AWS Streaming Data Solution for Amazon Kinesis"
},
"links": [],
"text": "The AWS Streaming Data Solution for Amazon Kinesis automatically configures the AWS services necessary to easily capture, store, process, and deliver streaming data. The solution provides multiple options for solving streaming data use cases that use multiple AWS services including Kinesis Data Streams, AWS Lambda, Amazon API Gateway, and Amazon Kinesis Data Analytics.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/examples-streaming-solution.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/examples-streaming-solution.html#examples-streaming-solution",
"main_header": "AWS Streaming Data Solution for Amazon Kinesis",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#examples-streaming-solution",
"text": "AWS Streaming Data Solution for Amazon Kinesis"
},
"links": [],
"text": "Each solution includes the following components:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/examples-streaming-solution.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/examples-streaming-solution.html#examples-streaming-solution",
"main_header": "AWS Streaming Data Solution for Amazon Kinesis",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#examples-streaming-solution",
"text": "AWS Streaming Data Solution for Amazon Kinesis"
},
"links": [
{
"url": "https://aws.amazon.com/solutions/implementations/aws-streaming-data-solution-for-amazon-kinesis/",
"title": "Streaming Data Solution for Amazon Kinesis"
}
],
"text": "The solution can be found here: Streaming Data Solution for Amazon Kinesis",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/examples-streaming-solution.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/examples-streaming-solution.html#examples-streaming-solution",
"main_header": "AWS Streaming Data Solution for Amazon Kinesis",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/examples.html",
"title": "Example Tutorials for Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#working-with-streams",
"text": "Creating and Managing Streams"
},
"links": [],
"text": "Amazon Kinesis Data Streams ingests a large amount of data in real time, durably stores the data, and makes the data available for consumption. The unit of data stored by Kinesis Data Streams is a data record. A data stream represents a group of data records. The data records in a data stream are distributed into shards.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html#working-with-streams",
"main_header": "Creating and Managing Streams",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#working-with-streams",
"text": "Creating and Managing Streams"
},
"links": [],
"text": "A shard has a sequence of data records in a stream. It serves as a base throughput unit of a Kinesis data stream. A shard supports 1 MB/s and 1000 records per second for writes and 2 MB/s for reads in both on-demand and provisioned capacity modes. The shard limits ensure predictable performance, making it easier to design and operate a highly reliable data streaming workflow.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html#working-with-streams",
"main_header": "Creating and Managing Streams",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#whatiscapacitymode",
"text": "What is a Data Stream Capacity Mode?"
},
"links": [],
"text": "A capacity mode determines how the capacity of a data stream is managed and how you are charged for the usage of your data stream. In Amazon Kinesis Data Streams, you can choose between an on-demand mode and a provisioned mode for your data streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#whatiscapacitymode",
"main_header": "What is a Data Stream Capacity Mode?",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#whatiscapacitymode",
"text": "What is a Data Stream Capacity Mode?"
},
"links": [],
"text": "You can use Kinesis Data Streams PutRecord and PutRecords APIs to write data into your data streams in both on-demand and provisioned capacity modes. To retrieve data, both capacity modes support default consumers that use the GetRecords API and Enhanced Fan-Out (EFO) consumers that use the SubscribeToShard API.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#whatiscapacitymode",
"main_header": "What is a Data Stream Capacity Mode?",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#whatiscapacitymode",
"text": "What is a Data Stream Capacity Mode?"
},
"links": [],
"text": "All Kinesis Data Streams capabilities, including retention mode, encryption, monitoring metrics, and others, are supported for both the on-demand and provisioned modes. Kinesis Data Streams provides the high durability and availability in both the on-demand and provisioned capacity modes.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#whatiscapacitymode",
"main_header": "What is a Data Stream Capacity Mode?",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#ondemandmode",
"text": "On-demand Mode"
},
"links": [],
"text": "Data streams in the on-demand mode require no capacity planning and automatically scale to handle gigabytes of write and read throughput per minute. On-demand mode simplifies ingesting and storing large data volumes at a low-latency because it eliminates provisioning and managing servers, storage, or throughput. You can ingest billions of records per day without any operational overhead.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#ondemandmode",
"main_header": "On-demand Mode",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#ondemandmode",
"text": "On-demand Mode"
},
"links": [],
"text": "On-demand mode is ideal for addressing the needs of highly variable and unpredictable application traffic. You no longer have to provision these workloads for peak capacity, which can result in higher costs due to low utilization. On-demand mode is suited for workloads with unpredictable and highly-variable traffic patterns.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#ondemandmode",
"main_header": "On-demand Mode",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#ondemandmode",
"text": "On-demand Mode"
},
"links": [
{
"url": "https://aws.amazon.com/kinesis/data-streams/pricing/",
"title": "Amazon Kinesis Data Streams pricing"
}
],
"text": "With the on-demand capacity mode, you pay per GB of data written and read from your data streams. You do not need to specify how much read and write throughput you expect your application to perform. Kinesis Data Streams instantly accommodates your workloads as they ramp up or down. For more information, see Amazon Kinesis Data Streams pricing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#ondemandmode",
"main_header": "On-demand Mode",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#ondemandmode",
"text": "On-demand Mode"
},
"links": [],
"text": "You can create a new data stream with the on-demand mode by using the Kinesis Data Streams console, APIs, or CLI commands.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#ondemandmode",
"main_header": "On-demand Mode",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#ondemandmode",
"text": "On-demand Mode"
},
"links": [],
"text": "A data stream in the on-demand mode accommodates up to double the peak write throughput observed in the previous 30 days. As your data stream\u00e2\u0080\u0099s write throughput reaches a new peak, Kinesis Data Streams scales the data stream\u00e2\u0080\u0099s capacity automatically. For example, if your data stream has a write throughput that varies between 10 MB/s and 40 MB/s, then Kinesis Data Streams ensures that you can easily burst to double your previous peak throughput, or 80 MB/s. If the same data stream sustains a new peak throughput of 50 MB/s, Kinesis Data Streams ensures that there is enough capacity to ingest 100 MB/s of write throughput. However, write throttling can occur if your traffic increases to more than double the previous peak within a 15-minute duration. You need to retry these throttled requests.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#ondemandmode",
"main_header": "On-demand Mode",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#ondemandmode",
"text": "On-demand Mode"
},
"links": [],
"text": "The aggregate read capacity of a data stream with the on-demand mode increases proportionally to write throughput. This helps to ensure that consumer applications always have adequate read throughput to process incoming data in real time. You get at least twice the write throughput compared to read data using the GetRecords API. We recommend that you use one consumer application with the GetRecord API, so that it has enough room to catch up when the application needs to recover from downtime. It is recommended that you use the Enhanced Fan-Out capability of Kinesis Data Streams for scenarios that require adding more than one consumer application. Enhanced Fan-Out supports adding up to 20 consumer applications to a data stream using the SubscribeToShard API, with each consumer application having dedicated throughput.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#ondemandmode",
"main_header": "On-demand Mode",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#ondemandmode",
"text": "On-demand Mode"
},
"h3": {
"urllink": "#hotshards",
"text": "Handling Read and Write Throughput Exceptions"
},
"links": [],
"text": "With the on-demand capacity mode (same as with the provisioned capacity mode), you must specify a partition key with each record to write data into your data stream. Kinesis Data Streams uses your partition keys to distribute data across shards. Kinesis Data Streams monitors traffic for each shard. When the incoming traffic exceeds 500 KB/s per shard, it splits the shard within 15 minutes. The parent shard\u00e2\u0080\u0099s hash key values are redistributed evenly across child shards.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#hotshards",
"main_header": "Handling Read and Write Throughput Exceptions",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#ondemandmode",
"text": "On-demand Mode"
},
"h3": {
"urllink": "#hotshards",
"text": "Handling Read and Write Throughput Exceptions"
},
"links": [],
"text": "If your incoming traffic exceeds twice your prior peak, you can experience read or write exceptions for about 15 minutes, even when your data is distributed evenly across the shards. We recommend that you retry all such requests so that all the records are properly stored in Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#hotshards",
"main_header": "Handling Read and Write Throughput Exceptions",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#ondemandmode",
"text": "On-demand Mode"
},
"h3": {
"urllink": "#hotshards",
"text": "Handling Read and Write Throughput Exceptions"
},
"links": [],
"text": "You may experience read and write exceptions if you are using a partition key that leads to uneven data distribution, and the records assigned to a particular shard exceed its limits. With on-demand mode, the data stream automatically adapts to handle uneven data distribution patterns unless a single partition key exceeds a shard\u00e2\u0080\u0099s 1 MB/s throughput and 1000 records per second limits.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#hotshards",
"main_header": "Handling Read and Write Throughput Exceptions",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#ondemandmode",
"text": "On-demand Mode"
},
"h3": {
"urllink": "#hotshards",
"text": "Handling Read and Write Throughput Exceptions"
},
"links": [],
"text": "In the on-demand mode, Kinesis Data Streams splits the shards evenly when it detects an increase in traffic. However, it does not detect and isolate hash keys that are driving a higher portion of incoming traffic to a particular shard. If you are using highly uneven partition keys you may continue to receive write exceptions. For such use cases, we recommend that you use the provisioned capacity mode that supports granular shard splits.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#hotshards",
"main_header": "Handling Read and Write Throughput Exceptions",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#provisionedmode",
"text": "Provisioned Mode"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_UpdateShardCount.html",
"title": "UpdateShardCount"
}
],
"text": "With provisioned mode, after you create the data stream, you can dynamically scale your shard capacity up or down using the AWS Management Console or the UpdateShardCount API. You can make updates while there is a Kinesis Data Streams producer or consumer application writing to or reading data from the stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#provisionedmode",
"main_header": "Provisioned Mode",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#provisionedmode",
"text": "Provisioned Mode"
},
"links": [],
"text": "The provisioned mode is suited for predictable traffic with capacity requirements that are easy to forecast. You can use the provisioned mode if you want fine-grained control over how data is distributed across shards.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#provisionedmode",
"main_header": "Provisioned Mode",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#provisionedmode",
"text": "Provisioned Mode"
},
"links": [],
"text": "You can calculate the number of shards (number_of_shards) that your stream needs by using the input values in the following formula.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#provisionedmode",
"main_header": "Provisioned Mode",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#provisionedmode",
"text": "Provisioned Mode"
},
"links": [],
"text": "You may still experience read and write throughput exceptions in the provisioned mode if you don't configure your data stream to handle your peak throughput. In this case, you must manually scale your data stream to accommodate your data traffic.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#provisionedmode",
"main_header": "Provisioned Mode",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#provisionedmode",
"text": "Provisioned Mode"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
],
"text": "You may also experience read and write exceptions if you're using a partition key that leads to uneven data distribution and the records assigned to a shard exceed its limits. To resolve this issue in the provisioned mode, identify such shards and manually split them to better accommodate your traffic. For more information, see Resharding a Stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#provisionedmode",
"main_header": "Provisioned Mode",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#switchingmodes",
"text": "Switching Between Capacity Modes"
},
"links": [],
"text": "You can switch the capacity mode of your data stream from on-demand to provisioned, or from provisioned to on-demand. For each data stream in your AWS account, you can switch between the on-demand and provisioned capacity modes twice within 24 hours.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#switchingmodes",
"main_header": "Switching Between Capacity Modes",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#switchingmodes",
"text": "Switching Between Capacity Modes"
},
"links": [],
"text": "Switching between capacity modes of a data stream does not cause any disruptions to your applications that use this data stream. You can continue writing to and reading from this data stream. As you are switching between capacity modes, either from on-demand to provisioned or from provisioned to on-demand, the status of the stream is set to Updating. You must wait for the data stream status to get to Active before you can modify its properties again.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#switchingmodes",
"main_header": "Switching Between Capacity Modes",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#switchingmodes",
"text": "Switching Between Capacity Modes"
},
"links": [],
"text": "When you switch from provisioned to on-demand capacity mode, your data stream initially retains whatever shard count it had before the transition, and from this point on, Kinesis Data Streams monitors your data traffic and scales the shard count of this on-demand data stream depending on your write throughput.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#switchingmodes",
"main_header": "Switching Between Capacity Modes",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-size-a-stream",
"text": "Choosing the Data Stream Capacity Mode"
},
"h2": {
"urllink": "#switchingmodes",
"text": "Switching Between Capacity Modes"
},
"links": [],
"text": "When you switch from on-demand to provisioned mode, your data stream also initially retains whatever shard count it had before the transition, but from this point on, you are responsible for monitoring and adjusting the shard count of this data stream to properly accomodate your write throughput.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html#switchingmodes",
"main_header": "Switching Between Capacity Modes",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#how-do-i-create-a-stream",
"text": "Creating a Stream via the AWS Management Console"
},
"links": [],
"text": "You can create a stream using the Kinesis Data Streams console, the Kinesis Data Streams API, or the AWS Command Line Interface (AWS CLI).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-create-a-stream.html#how-do-i-create-a-stream",
"main_header": "Creating a Stream via the AWS Management Console",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-create-stream",
"text": "Creating a Stream via the APIs"
},
"links": [],
"text": "Use the following steps to create your Kinesis data stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html#kinesis-using-sdk-java-create-stream",
"main_header": "Creating a Stream via the APIs",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-create-stream",
"text": "Creating a Stream via the APIs"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-create-client",
"text": "Build the Kinesis Data Streams Client"
},
"links": [],
"text": "Before you can work with Kinesis data streams, you must build a client object. The following Java code instantiates a client builder and uses it to set the Region, credentials, and the client configuration. It then builds a client object.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html#kinesis-using-sdk-java-create-client",
"main_header": "Build the Kinesis Data Streams Client",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-create-stream",
"text": "Creating a Stream via the APIs"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-create-client",
"text": "Build the Kinesis Data Streams Client"
},
"links": [
{
"url": "https://docs.aws.amazon.com/general/latest/gr/rande.html#ak_region",
"title": "Kinesis Data Streams Regions and Endpoints"
}
],
"text": "For more information, see Kinesis Data Streams Regions and Endpoints in the AWS General Reference.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html#kinesis-using-sdk-java-create-client",
"main_header": "Build the Kinesis Data Streams Client",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-create-stream",
"text": "Creating a Stream via the APIs"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-create-the-stream",
"text": "Create the Stream"
},
"links": [],
"text": "Now that you have created your Kinesis Data Streams client, you can create a stream to work with, which you can accomplish with the Kinesis Data Streams console, or programmatically. To create a stream programmatically, instantiate a CreateStreamRequest object and specify a name for the stream and (if you want to use provisioned mode) the number of shards for the stream to use.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html#kinesis-using-sdk-java-create-the-stream",
"main_header": "Create the Stream",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-create-stream",
"text": "Creating a Stream via the APIs"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-create-the-stream",
"text": "Create the Stream"
},
"links": [],
"text": "The stream name identifies the stream. The name is scoped to the AWS account used by the application. It is also scoped by Region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account but in two different Regions can have the same name, but not two streams on the same account and in the same Region.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html#kinesis-using-sdk-java-create-the-stream",
"main_header": "Create the Stream",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-create-stream",
"text": "Creating a Stream via the APIs"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-create-the-stream",
"text": "Create the Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html",
"title": "Choosing the Data Stream Capacity Mode"
}
],
"text": "The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput. More shards also increase the cost that AWS charges for the stream. For more information about calculating an appropriate number of shards for your application, see Choosing the Data Stream Capacity Mode.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html#kinesis-using-sdk-java-create-the-stream",
"main_header": "Create the Stream",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-create-stream",
"text": "Creating a Stream via the APIs"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-create-the-stream",
"text": "Create the Stream"
},
"links": [],
"text": "After the createStreamRequest object is configured, create a stream by calling the createStream method on the client. After calling createStream, wait for the stream to reach the ACTIVE state before performing any operations on the stream. To check the state of the stream, call the describeStream method. However, describeStream throws an exception if the stream does not exist. Therefore, enclose the describeStream call in a try/catch block.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html#kinesis-using-sdk-java-create-the-stream",
"main_header": "Create the Stream",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#updating-a-stream",
"text": "Updating a Stream"
},
"links": [],
"text": "You can update the details of a stream using the Kinesis Data Streams console, the Kinesis Data Streams API, or the AWS CLI.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html#updating-a-stream",
"main_header": "Updating a Stream",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#updating-a-stream",
"text": "Updating a Stream"
},
"h2": {
"urllink": "#update-stream-api",
"text": "Updating a Stream Using the API"
},
"links": [],
"text": "To update stream details using the API, see the following methods:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html#update-stream-api",
"main_header": "Updating a Stream Using the API",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#updating-a-stream",
"text": "Updating a Stream"
},
"h2": {
"urllink": "#update-stream-cli",
"text": "Updating a Stream Using the AWS CLI"
},
"links": [
{
"url": "https://docs.aws.amazon.com/cli/latest/reference/kinesis/index.html",
"title": "Kinesis CLI reference"
}
],
"text": "For information about updating a stream using the AWS CLI, see the Kinesis CLI reference.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/updating-a-stream.html#update-stream-cli",
"main_header": "Updating a Stream Using the AWS CLI",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-streams",
"text": "Listing Streams"
},
"links": [],
"text": "As described in the previous section, streams are scoped to the AWS account associated with the AWS credentials used to instantiate the Kinesis Data Streams client and also to the Region specified for the client. An AWS account could have many streams active at one time. You can list your streams in the Kinesis Data Streams console, or programmatically. The code in this section shows how to list all the streams for your AWS account.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html#kinesis-using-sdk-java-list-streams",
"main_header": "Listing Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-streams",
"text": "Listing Streams"
},
"links": [],
"text": "This code example first creates a new instance of ListStreamsRequest and calls its setLimit method to specify that a maximum of 20 streams should be returned for each call to listStreams. If you do not specify a value for setLimit, Kinesis Data Streams returns a number of streams less than or equal to the number in the account. The code then passes listStreamsRequest to the listStreams method of the client. The return value listStreams is stored in a ListStreamsResult object. The code calls the getStreamNames method on this object and stores the returned stream names in the streamNames list. Note that Kinesis Data Streams might return fewer streams than specified by the specified limit even if there are more streams than that in the account and Region. To ensure that you retrieve all the streams, use the getHasMoreStreams method as described in the next code example.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html#kinesis-using-sdk-java-list-streams",
"main_header": "Listing Streams",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-streams",
"text": "Listing Streams"
},
"links": [],
"text": "This code calls the getHasMoreStreams method on listStreamsRequest to check if there are additional streams available beyond the ones returned in the initial call to listStreams. If so, the code calls the setExclusiveStartStreamName method with the name of the last stream that was returned in the previous call to listStreams. The setExclusiveStartStreamName method causes the next call to listStreams to start after that stream. The group of stream names returned by that call is then added to the streamNames list. This process continues until all the stream names have been collected in the list.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html#kinesis-using-sdk-java-list-streams",
"main_header": "Listing Streams",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-streams",
"text": "Listing Streams"
},
"links": [],
"text": "The streams returned by listStreams can be in one of the following states:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html#kinesis-using-sdk-java-list-streams",
"main_header": "Listing Streams",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-streams",
"text": "Listing Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html",
"title": "Creating a Stream via the APIs"
}
],
"text": "You can check the state of a stream using the describeStream method, as shown in the previous section, Creating a Stream via the APIs.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html#kinesis-using-sdk-java-list-streams",
"main_header": "Listing Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"links": [],
"text": "A data stream can have one or more shards. There are two methods for listing (or retrieving) shards from a data stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards",
"main_header": "Listing Shards",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-list-shards-method1",
"text": "ListShards API - Recommended"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ListShards.html",
"title": "ListShards"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ListShards.html",
"title": "ListShards"
}
],
"text": "The recommended method for listing or retrieving the shards from a data stream is to use the ListShards API. The following example shows how you can get a list of the shards in a data stream. For a full description of the main operation used in this example and all of the parameters you can set for the operation, see ListShards.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards-method1",
"main_header": "ListShards API - Recommended",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-list-shards-method1",
"text": "ListShards API - Recommended"
},
"links": [],
"text": "To run the previous code example you can use a POM file like the following one.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards-method1",
"main_header": "ListShards API - Recommended",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-list-shards-method1",
"text": "ListShards API - Recommended"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ShardFilter.html",
"title": "ShardFilter"
}
],
"text": "With the ListShards API, you can use the ShardFilter parameter to filter out the response of the API. You can only specify one filter at a time.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards-method1",
"main_header": "ListShards API - Recommended",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-list-shards-method1",
"text": "ListShards API - Recommended"
},
"links": [],
"text": "If you use the ShardFilter parameter when invoking the ListShards API, the Type is the required property and must be specified. If you specify the AT_TRIM_HORIZON, FROM_TRIM_HORIZON, or AT_LATEST types, you do not need to specify either the ShardId or the Timestamp optional properties.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards-method1",
"main_header": "ListShards API - Recommended",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-list-shards-method1",
"text": "ListShards API - Recommended"
},
"links": [],
"text": "If you specify the AFTER_SHARD_ID type, you must also provide the value for the optional ShardId property. The ShardId property is identical in functionality to the ExclusiveStartShardId parameter of the ListShards API. When ShardId property is specified, the response includes the shards starting with the shard whose ID immediately follows the ShardId that you provided.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards-method1",
"main_header": "ListShards API - Recommended",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-list-shards-method1",
"text": "ListShards API - Recommended"
},
"links": [],
"text": "If you specify the AT_TIMESTAMP or FROM_TIMESTAMP_ID type, you must also provide the value for the optional Timestamp property. If you specify the AT_TIMESTAMP type, then all shards that were open at the provided timestamp are returned. If you specify the FROM_TIMESTAMP type, then all shards starting from the provided timestamp to TIP are returned.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-list-shards-method1",
"main_header": "ListShards API - Recommended",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-list-shards",
"text": "Listing Shards"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-retrieve-shards",
"text": "DescribeStream API - Deprecated"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-data-routing",
"title": "Data Routing, Data Persistence, and Shard State after a Reshard"
}
],
"text": "The response object returned by the describeStream method enables you to retrieve information about the shards that comprise the stream. To retrieve the shards, call the getShards method on this object. This method might not return all the shards from the stream in a single call. In the following code, we check the getHasMoreShards method on getStreamDescription to see if there are additional shards that were not returned. If so, that is, if this method returns true, we continue to call getShards in a loop, adding each new batch of returned shards to our list of shards. The loop exits when getHasMoreShards returns false; that is, all shards have been returned. Note that getShards does not return shards that are in the EXPIRED state. For more information about shard states, including the EXPIRED state, see Data Routing, Data Persistence, and Shard State after a Reshard.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-retrieve-shards",
"main_header": "DescribeStream API - Deprecated",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-delete-stream",
"text": "Deleting a Stream"
},
"links": [],
"text": "You can delete a stream with the Kinesis Data Streams console, or programmatically. To delete a stream programmatically, use DeleteStreamRequest, as shown in the following code.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-delete-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-delete-stream.html#kinesis-using-sdk-java-delete-stream",
"main_header": "Deleting a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-delete-stream",
"text": "Deleting a Stream"
},
"links": [],
"text": "Shut down any applications that are operating on the stream before you delete it. If an application attempts to operate on a deleted stream, it receives ResourceNotFound exceptions. Also, if you subsequently create a new stream that has the same name as your previous stream, and applications that were operating on the previous stream are still running, these applications might try to interact with the new stream as though it were the previous stream\u00e2\u0080\u0094with unpredictable results.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-delete-stream.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-delete-stream.html#kinesis-using-sdk-java-delete-stream",
"main_header": "Deleting a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding",
"text": "Resharding a Stream"
},
"links": [],
"text": "Amazon Kinesis Data Streams supports resharding, which lets you adjust the number of shards in your stream to adapt to changes in the rate of data flow through the stream. Resharding is considered an advanced operation. If you are new to Kinesis Data Streams, return to this subject after you are familiar with all the other aspects of Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html#kinesis-using-sdk-java-resharding",
"main_header": "Resharding a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding",
"text": "Resharding a Stream"
},
"links": [],
"text": "There are two types of resharding operations: shard split and shard merge. In a shard split, you divide a single shard into two shards. In a shard merge, you combine two shards into a single shard. Resharding is always pairwise in the sense that you cannot split into more than two shards in a single operation, and you cannot merge more than two shards in a single operation. The shard or pair of shards that the resharding operation acts on are referred to as parent shards. The shard or pair of shards that result from the resharding operation are referred to as child shards.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html#kinesis-using-sdk-java-resharding",
"main_header": "Resharding a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding",
"text": "Resharding a Stream"
},
"links": [],
"text": "Splitting increases the number of shards in your stream and therefore increases the data capacity of the stream. Because you are charged on a per-shard basis, splitting increases the cost of your stream. Similarly, merging reduces the number of shards in your stream and therefore decreases the data capacity\u00e2\u0080\u0094and cost\u00e2\u0080\u0094of the stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html#kinesis-using-sdk-java-resharding",
"main_header": "Resharding a Stream",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding",
"text": "Resharding a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"title": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
}
],
"text": "Resharding is typically performed by an administrative application that is distinct from the producer (put) applications and the consumer (get) applications. Such an administrative application monitors the overall performance of the stream based on metrics provided by Amazon CloudWatch or based on metrics collected from the producers and consumers. The administrative application also needs a broader set of IAM permissions than the consumers or producers because the consumers and producers usually should not need access to the APIs used for resharding. For more information about IAM permissions for Kinesis Data Streams, see Controlling Access to Amazon Kinesis Data Streams Resources Using IAM.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html#kinesis-using-sdk-java-resharding",
"main_header": "Resharding a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding",
"text": "Resharding a Stream"
},
"links": [
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-data-streams-open-shards/",
"title": "How do I change the number of open shards in Kinesis Data Streams?"
}
],
"text": "For more information about resharding, see How do I change the number of open shards in Kinesis Data Streams?",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html#kinesis-using-sdk-java-resharding",
"main_header": "Resharding a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-strategies",
"text": "Strategies for Resharding"
},
"links": [],
"text": "The purpose of resharding in Amazon Kinesis Data Streams is to enable your stream to adapt to changes in the rate of data flow. You split shards to increase the capacity (and cost) of your stream. You merge shards to reduce the cost (and capacity) of your stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html#kinesis-using-sdk-java-resharding-strategies",
"main_header": "Strategies for Resharding",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-strategies",
"text": "Strategies for Resharding"
},
"links": [],
"text": "One approach to resharding could be to split every shard in the stream\u00e2\u0080\u0094which would double the stream's capacity. However, this might provide more additional capacity than you actually need and therefore create unnecessary cost.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html#kinesis-using-sdk-java-resharding-strategies",
"main_header": "Strategies for Resharding",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-strategies",
"text": "Strategies for Resharding"
},
"links": [],
"text": "You can also use metrics to determine which are your hot or cold shards, that is, shards that are receiving much more data, or much less data, than expected. You could then selectively split the hot shards to increase capacity for the hash keys that target those shards. Similarly, you could merge cold shards to make better use of their unused capacity.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html#kinesis-using-sdk-java-resharding-strategies",
"main_header": "Strategies for Resharding",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-strategies",
"text": "Strategies for Resharding"
},
"links": [],
"text": "You can obtain some performance data for your stream from the Amazon CloudWatch metrics that Kinesis Data Streams publishes. However, you can also collect some of your own metrics for your streams. One approach would be to log the hash key values generated by the partition keys for your data records. Recall that you specify the partition key at the time that you add the record to the stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html#kinesis-using-sdk-java-resharding-strategies",
"main_header": "Strategies for Resharding",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-strategies",
"text": "Strategies for Resharding"
},
"links": [
{
"url": "http://en.wikipedia.org/wiki/MD5",
"title": "MD5"
}
],
"text": "Kinesis Data Streams uses MD5 to compute the hash key from the partition key. Because you specify the partition key for the record, you could use MD5 to compute the hash key value for that record and log it.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html#kinesis-using-sdk-java-resharding-strategies",
"main_header": "Strategies for Resharding",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-strategies",
"text": "Strategies for Resharding"
},
"links": [],
"text": "You could also log the IDs of the shards that your data records are assigned to. The shard ID is available by using the getShardId method of the putRecordResults object returned by the putRecords method, and the putRecordResult object returned by the putRecord method.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html#kinesis-using-sdk-java-resharding-strategies",
"main_header": "Strategies for Resharding",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-strategies",
"text": "Strategies for Resharding"
},
"links": [],
"text": "With the shard IDs and the hash key values, you can determine which shards and hash keys are receiving the most or least traffic. You can then use resharding to provide more or less capacity, as appropriate for these keys.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-strategies.html#kinesis-using-sdk-java-resharding-strategies",
"main_header": "Strategies for Resharding",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-split",
"text": "Splitting a Shard"
},
"links": [
{
"url": "http://en.wikipedia.org/wiki/MD5",
"title": "MD5"
}
],
"text": "To split a shard in Amazon Kinesis Data Streams, you need to specify how hash key values from the parent shard should be redistributed to the child shards. When you add a data record to a stream, it is assigned to a shard based on a hash key value. The hash key value is the MD5 hash of the partition key that you specify for the data record at the time that you add the data record to the stream. Data records that have the same partition key also have the same hash key value.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html#kinesis-using-sdk-java-resharding-split",
"main_header": "Splitting a Shard",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-split",
"text": "Splitting a Shard"
},
"links": [],
"text": "The possible hash key values for a given shard constitute a set of ordered contiguous non-negative integers. This range of possible hash key values is given by the following:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html#kinesis-using-sdk-java-resharding-split",
"main_header": "Splitting a Shard",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-split",
"text": "Splitting a Shard"
},
"links": [],
"text": "When you split the shard, you specify a value in this range. That hash key value and all higher hash key values are distributed to one of the child shards. All the lower hash key values are distributed to the other child shard.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html#kinesis-using-sdk-java-resharding-split",
"main_header": "Splitting a Shard",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-split",
"text": "Splitting a Shard"
},
"links": [],
"text": "The following code demonstrates a shard split operation that redistributes the hash keys evenly between each of the child shards, essentially splitting the parent shard in half. This is just one possible way of dividing the parent shard. You could, for example, split the shard so that the lower one-third of the keys from the parent go to one child shard and the upper two-thirds of the keys go to the other child shard. However, for many applications, splitting shards in half is an effective approach.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html#kinesis-using-sdk-java-resharding-split",
"main_header": "Splitting a Shard",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-split",
"text": "Splitting a Shard"
},
"links": [],
"text": "The code assumes that myStreamName holds the name of your stream and the object variable shard holds the shard to split. Begin by instantiating a new splitShardRequest object and setting the stream name and shard ID.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html#kinesis-using-sdk-java-resharding-split",
"main_header": "Splitting a Shard",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-split",
"text": "Splitting a Shard"
},
"links": [],
"text": "Determine the hash key value that is half-way between the lowest and highest values in the shard. This is the starting hash key value for the child shard that will contain the upper half of the hash keys from the parent shard. Specify this value in the setNewStartingHashKey method. You need specify only this value. Kinesis Data Streams automatically distributes the hash keys below this value to the other child shard that is created by the split. The last step is to call the splitShard method on the Kinesis Data Streams client.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html#kinesis-using-sdk-java-resharding-split",
"main_header": "Splitting a Shard",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-split",
"text": "Splitting a Shard"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-wait-until-active",
"title": "Waiting for a Stream to Become Active Again"
}
],
"text": "The first step after this procedure is shown in Waiting for a Stream to Become Active Again.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-split.html#kinesis-using-sdk-java-resharding-split",
"main_header": "Splitting a Shard",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-merge",
"text": "Merging Two Shards"
},
"links": [],
"text": "A shard merge operation takes two specified shards and combines them into a single shard. After the merge, the single child shard receives data for all hash key values covered by the two parent shards.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html#kinesis-using-sdk-java-resharding-merge",
"main_header": "Merging Two Shards",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-merge",
"text": "Merging Two Shards"
},
"links": [],
"text": "Shard Adjacency",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html#kinesis-using-sdk-java-resharding-merge",
"main_header": "Merging Two Shards",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-merge",
"text": "Merging Two Shards"
},
"links": [],
"text": "To merge two shards, the shards must be adjacent. Two shards are considered adjacent if the union of the hash key ranges for the two shards forms a contiguous set with no gaps. For example, suppose that you have two shards, one with a hash key range of 276...381 and the other with a hash key range of 382...454. You could merge these two shards into a single shard that would have a hash key range of 276...454.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html#kinesis-using-sdk-java-resharding-merge",
"main_header": "Merging Two Shards",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-merge",
"text": "Merging Two Shards"
},
"links": [],
"text": "To take another example, suppose that you have two shards, one with a hash key range of 276..381 and the other with a hash key range of 455...560. You could not merge these two shards because there would be one or more shards between these two that cover the range 382..454.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html#kinesis-using-sdk-java-resharding-merge",
"main_header": "Merging Two Shards",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-merge",
"text": "Merging Two Shards"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-data-routing",
"title": "Data Routing, Data Persistence, and Shard State after a Reshard"
}
],
"text": "The set of all OPEN shards in a stream\u00e2\u0080\u0094as a group\u00e2\u0080\u0094always spans the entire range of MD5 hash key values. For more information about shard states\u00e2\u0080\u0094such as CLOSED\u00e2\u0080\u0094see Data Routing, Data Persistence, and Shard State after a Reshard.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html#kinesis-using-sdk-java-resharding-merge",
"main_header": "Merging Two Shards",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-merge",
"text": "Merging Two Shards"
},
"links": [],
"text": "To identify shards that are candidates for merging, you should filter out all shards that are in a CLOSED state. Shards that are OPEN\u00e2\u0080\u0094that is, not CLOSED\u00e2\u0080\u0094have an ending sequence number of null. You can test the ending sequence number for a shard using:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html#kinesis-using-sdk-java-resharding-merge",
"main_header": "Merging Two Shards",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-merge",
"text": "Merging Two Shards"
},
"links": [],
"text": "After filtering out the closed shards, sort the remaining shards by the highest hash key value supported by each shard. You can retrieve this value using:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html#kinesis-using-sdk-java-resharding-merge",
"main_header": "Merging Two Shards",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-merge",
"text": "Merging Two Shards"
},
"links": [],
"text": "If two shards are adjacent in this filtered, sorted list, they can be merged.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html#kinesis-using-sdk-java-resharding-merge",
"main_header": "Merging Two Shards",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-merge",
"text": "Merging Two Shards"
},
"links": [],
"text": "Code for the Merge Operation",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html#kinesis-using-sdk-java-resharding-merge",
"main_header": "Merging Two Shards",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-merge",
"text": "Merging Two Shards"
},
"links": [],
"text": "The following code merges two shards. The code assumes that myStreamName holds the name of your stream and the object variables shard1 and shard2 hold the two adjacent shards to merge.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html#kinesis-using-sdk-java-resharding-merge",
"main_header": "Merging Two Shards",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-merge",
"text": "Merging Two Shards"
},
"links": [],
"text": "For the merge operation, begin by instantiating a new mergeShardsRequest object. Specify the stream name with the setStreamName method. Then specify the two shards to merge using the setShardToMerge and setAdjacentShardToMerge methods. Finally, call the mergeShards method on the Kinesis Data Streams client to carry out the operation.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html#kinesis-using-sdk-java-resharding-merge",
"main_header": "Merging Two Shards",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-resharding-merge",
"text": "Merging Two Shards"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-wait-until-active",
"title": "Waiting for a Stream to Become Active Again"
}
],
"text": "The first step after this procedure is shown in Waiting for a Stream to Become Active Again.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding-merge.html#kinesis-using-sdk-java-resharding-merge",
"main_header": "Merging Two Shards",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-after-resharding",
"text": "After Resharding"
},
"links": [],
"text": "After any kind of resharding procedure in Amazon Kinesis Data Streams, and before normal record processing resumes, other procedures and considerations are required. The following sections describe these.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-after-resharding",
"main_header": "After Resharding",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-after-resharding",
"text": "After Resharding"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-resharding-wait-until-active",
"text": "Waiting for a Stream to Become Active Again"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-create-stream.html",
"title": "creating a stream"
}
],
"text": "After you call a resharding operation, either splitShard or mergeShards, you need to wait for the stream to become active again. The code to use is the same as when you wait for a stream to become active after creating a stream. That code is as follows:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-wait-until-active",
"main_header": "Waiting for a Stream to Become Active Again",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-after-resharding",
"text": "After Resharding"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-resharding-data-routing",
"text": "Data Routing, Data Persistence, and Shard State after a Reshard"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data",
"title": "getShardIterator and getRecords"
}
],
"text": "Kinesis Data Streams is a real-time data streaming service, which is to say that your applications should assume that data is flowing continuously through the shards in your stream. When you reshard, data records that were flowing to the parent shards are re-routed to flow to the child shards based on the hash key values that the data-record partition keys map to. However, any data records that were in the parent shards before the reshard remain in those shards. In other words, the parent shards do not disappear when the reshard occurs. They persist along with the data they contained before the reshard. The data records in the parent shards are accessible using the getShardIterator and getRecords operations in the Kinesis Data Streams API, or through the Kinesis Client Library.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-data-routing",
"main_header": "Data Routing, Data Persistence, and Shard State after a Reshard",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-after-resharding",
"text": "After Resharding"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-resharding-data-routing",
"text": "Data Routing, Data Persistence, and Shard State after a Reshard"
},
"links": [],
"text": "In the process of resharding, a parent shard transitions from an OPEN state to a CLOSED state to an EXPIRED state.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-data-routing",
"main_header": "Data Routing, Data Persistence, and Shard State after a Reshard",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-using-sdk-java-after-resharding",
"text": "After Resharding"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-resharding-data-routing",
"text": "Data Routing, Data Persistence, and Shard State after a Reshard"
},
"links": [],
"text": "After the reshard has occurred and the stream is again in an ACTIVE state, you could immediately begin to read data from the child shards. However, the parent shards that remain after the reshard could still contain data that you haven't read yet that was added to the stream before the reshard. If you read data from the child shards before having read all data from the parent shards, you could read data for a particular hash key out of the order given by the data records' sequence numbers. Therefore, assuming that the order of the data is important, you should, after a reshard, always continue to read data from the parent shards until it is exhausted. Only then should you begin reading data from the child shards. When getRecordsResult.getNextShardIterator returns null, it indicates that you have read all the data in the parent shard. If you are reading data using the Kinesis Client Library, the library ensures that you receive the data in order even if a reshard occurs.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-data-routing",
"main_header": "Data Routing, Data Persistence, and Shard State after a Reshard",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
]
},
{
"h1": {
"urllink": "#kinesis-extended-retention",
"text": "Changing the Data Retention Period"
},
"links": [],
"text": "Amazon Kinesis Data Streams supports changes to the data record retention period of your data stream. A Kinesis data stream is an ordered sequence of data records meant to be written to and read from in real time. Data records are therefore stored in shards in your stream temporarily. The time period from when a record is added to when it is no longer accessible is called the retention period. A Kinesis data stream stores records from 24 hours by default, up to 8760 hours (365 days).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html#kinesis-extended-retention",
"main_header": "Changing the Data Retention Period",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-extended-retention",
"text": "Changing the Data Retention Period"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_IncreaseStreamRetentionPeriod.html",
"title": "IncreaseStreamRetentionPeriod"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DecreaseStreamRetentionPeriod.html",
"title": "DecreaseStreamRetentionPeriod"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_IncreaseStreamRetentionPeriod.html",
"title": "IncreaseStreamRetentionPeriod"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DecreaseStreamRetentionPeriod.html",
"title": "DecreaseStreamRetentionPeriod"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DescribeStream.html",
"title": "DescribeStream"
}
],
"text": "You can update the retention period via the Kinesis Data Streams console or by using the IncreaseStreamRetentionPeriod and the DecreaseStreamRetentionPeriod operations. With the Kinesis Data Streams console, you can bulk edit the retention period of more than one data stream at the same time. You can increase the retention period up to a maximum of 8760 hours (365 days) using the IncreaseStreamRetentionPeriod operation or the Kinesis Data Streams console. You can decrease the retention period down to a minimum of 24 hours using the DecreaseStreamRetentionPeriod operation or the Kinesis Data Streams console. The request syntax for both operations includes the stream name and the retention period in hours. Finally, you can check the current retention period of a stream by calling the DescribeStream operation.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html#kinesis-extended-retention",
"main_header": "Changing the Data Retention Period",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-extended-retention",
"text": "Changing the Data Retention Period"
},
"links": [],
"text": "The following is an example of changing the retention period using the AWS CLI:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html#kinesis-extended-retention",
"main_header": "Changing the Data Retention Period",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-extended-retention",
"text": "Changing the Data Retention Period"
},
"links": [],
"text": "Kinesis Data Streams stops making records inaccessible at the old retention period within several minutes of increasing the retention period. For example, changing the retention period from 24 hours to 48 hours means that records added to the stream 23 hours 55 minutes prior are still available after 24 hours.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html#kinesis-extended-retention",
"main_header": "Changing the Data Retention Period",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-extended-retention",
"text": "Changing the Data Retention Period"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DecreaseStreamRetentionPeriod.html",
"title": "DecreaseStreamRetentionPeriod"
}
],
"text": "Kinesis Data Streams almost immediately makes records older than the new retention period inaccessible upon decreasing the retention period. Therefore, take great care when calling the DecreaseStreamRetentionPeriod operation.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html#kinesis-extended-retention",
"main_header": "Changing the Data Retention Period",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-extended-retention",
"text": "Changing the Data Retention Period"
},
"links": [],
"text": "Set your data retention period to ensure that your consumers are able to read data before it expires, if problems occur. You should carefully consider all possibilities, such as an issue with your record processing logic or a downstream dependency being down for a long period of time. Think of the retention period as a safety net to allow more time for your data consumers to recover. The retention period API operations allow you to set this up proactively or to respond to operational events reactively.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html#kinesis-extended-retention",
"main_header": "Changing the Data Retention Period",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-extended-retention",
"text": "Changing the Data Retention Period"
},
"links": [
{
"url": "https://aws.amazon.com/kinesis/data-streams/pricing/",
"title": "Amazon Kinesis Data Streams Pricing"
}
],
"text": "Additional charges apply for streams with a retention period set above 24 hours. For more information, see Amazon Kinesis Data Streams Pricing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html#kinesis-extended-retention",
"main_header": "Changing the Data Retention Period",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"links": [],
"text": "You can assign your own metadata to streams you create in Amazon Kinesis Data Streams in the form of tags. A tag is a key-value pair that you define for a stream. Using tags is a simple yet powerful way to manage AWS resources and organize data, including billing data.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging",
"main_header": "Tagging Your Streams in Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-basics",
"text": "Tag Basics"
},
"links": [],
"text": "You use the Kinesis Data Streams console, AWS CLI, or Kinesis Data Streams API to complete the following tasks:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-basics",
"main_header": "Tag Basics",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-basics",
"text": "Tag Basics"
},
"links": [],
"text": "You can use tags to categorize your streams. For example, you can categorize streams by purpose, owner, or environment. Because you define the key and value for each tag, you can create a custom set of categories to meet your specific needs. For example, you might define a set of tags that helps you track streams by owner and associated application. Here are several examples of tags:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-basics",
"main_header": "Tag Basics",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-billing",
"text": "Tracking Costs Using Tagging"
},
"links": [
{
"url": "https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html",
"title": "Use\n\t\t\t\tCost Allocation Tags for Custom Billing Reports"
}
],
"text": "You can use tags to categorize and track your AWS costs. When you apply tags to your AWS resources, including streams, your AWS cost allocation report includes usage and costs aggregated by tags. You can apply tags that represent business categories (such as cost centers, application names, or owners) to organize your costs across multiple services. For more information, see Use Cost Allocation Tags for Custom Billing Reports in the AWS Billing User Guide.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-billing",
"main_header": "Tracking Costs Using Tagging",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-restrictions",
"text": "Tag Restrictions"
},
"links": [],
"text": "The following restrictions apply to tags.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-restrictions",
"main_header": "Tag Restrictions",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-console",
"text": "Tagging Streams Using the Kinesis Data Streams Console"
},
"links": [],
"text": "You can add, list, and remove tags using the Kinesis Data Streams console.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-console",
"main_header": "Tagging Streams Using the Kinesis Data Streams Console",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-cli",
"text": "Tagging Streams Using the AWS CLI"
},
"links": [],
"text": "You can add, list, and remove tags using the AWS CLI. For examples, see the following documentation.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-cli",
"main_header": "Tagging Streams Using the AWS CLI",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#tagging",
"text": "Tagging Your Streams in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#tagging-api",
"text": "Tagging Streams Using the Kinesis Data Streams API"
},
"links": [],
"text": "You can add, list, and remove tags using the Kinesis Data Streams API. For examples, see the following documentation:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/tagging.html#tagging-api",
"main_header": "Tagging Streams Using the Kinesis Data Streams API",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
]
},
{
"h1": {
"urllink": "#building-producers",
"text": "Writing Data to Amazon Kinesis Data Streams"
},
"links": [],
"text": "A producer is an application that writes data to Amazon Kinesis Data Streams. You can build producers for Kinesis Data Streams using the AWS SDK for Java and the Kinesis Producer Library.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html#building-producers",
"main_header": "Writing Data to Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#building-producers",
"text": "Writing Data to Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"title": "What Is Amazon Kinesis Data Streams?"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
],
"text": "If you are new to Kinesis Data Streams, start by becoming familiar with the concepts and terminology presented in What Is Amazon Kinesis Data Streams? and Getting Started with Amazon Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html#building-producers",
"main_header": "Writing Data to Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#building-producers",
"text": "Writing Data to Amazon Kinesis Data Streams"
},
"links": [],
"text": "To put data into the stream, you must specify the name of the stream, a partition key, and the data blob to be added to the stream. The partition key is used to determine which shard in the stream the data record is added to.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html#building-producers",
"main_header": "Writing Data to Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#building-producers",
"text": "Writing Data to Amazon Kinesis Data Streams"
},
"links": [],
"text": "All the data in the shard is sent to the same worker that is processing the shard. Which partition key you use depends on your application logic. The number of partition keys should typically be much greater than the number of shards. This is because the partition key is used to determine how to map a data record to a particular shard. If you have enough partition keys, the data can be evenly distributed across the shards in a stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html#building-producers",
"main_header": "Writing Data to Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#developing-producers-with-kpl",
"text": "Developing Producers Using the Amazon Kinesis Producer Library"
},
"links": [],
"text": "An Amazon Kinesis Data Streams producer is an application that puts user data records into a Kinesis data stream (also called data ingestion). The Kinesis Producer Library (KPL) simplifies producer application development, allowing developers to achieve high write throughput to a Kinesis data stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html#developing-producers-with-kpl",
"main_header": "Developing Producers Using the Amazon Kinesis Producer Library",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-kpl",
"text": "Developing Producers Using the Amazon Kinesis Producer Library"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"title": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
}
],
"text": "You can monitor the KPL with Amazon CloudWatch. For more information, see Monitoring the Kinesis Producer Library with Amazon CloudWatch.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html#developing-producers-with-kpl",
"main_header": "Developing Producers Using the Amazon Kinesis Producer Library",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-kpl",
"text": "Developing Producers Using the Amazon Kinesis Producer Library"
},
"h2": {
"urllink": "#developing-producers-with-kpl-role",
"text": "Role of the KPL"
},
"links": [],
"text": "The KPL is an easy-to-use, highly configurable library that helps you write to a Kinesis data stream. It acts as an intermediary between your producer application code and the Kinesis Data Streams API actions. The KPL performs the following primary tasks:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html#developing-producers-with-kpl-role",
"main_header": "Role of the KPL",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-kpl",
"text": "Developing Producers Using the Amazon Kinesis Producer Library"
},
"h2": {
"urllink": "#developing-producers-with-kpl-role",
"text": "Role of the KPL"
},
"links": [
{
"url": "https://aws.amazon.com/tools/",
"title": "AWS SDKs"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/",
"title": "Amazon Kinesis API Reference"
}
],
"text": "Note that the KPL is different from the Kinesis Data Streams API that is available in the AWS SDKs. The Kinesis Data Streams API helps you manage many aspects of Kinesis Data Streams (including creating streams, resharding, and putting and getting records), while the KPL provides a layer of abstraction specifically for ingesting data. For information about the Kinesis Data Streams API, see the Amazon Kinesis API Reference.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html#developing-producers-with-kpl-role",
"main_header": "Role of the KPL",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-kpl",
"text": "Developing Producers Using the Amazon Kinesis Producer Library"
},
"h2": {
"urllink": "#developing-producers-with-kpl-advantage",
"text": "Advantages of Using the KPL"
},
"links": [],
"text": "The following list represents some of the major advantages to using the KPL for developing Kinesis Data Streams producers.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html#developing-producers-with-kpl-advantage",
"main_header": "Advantages of Using the KPL",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-kpl",
"text": "Developing Producers Using the Amazon Kinesis Producer Library"
},
"h2": {
"urllink": "#developing-producers-with-kpl-advantage",
"text": "Advantages of Using the KPL"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-writing.html",
"title": "Writing to your Kinesis Data Stream Using the KPL"
}
],
"text": "The KPL can be used in either synchronous or asynchronous use cases. We suggest using the higher performance of the asynchronous interface unless there is a specific reason to use synchronous behavior. For more information about these two use cases and example code, see Writing to your Kinesis Data Stream Using the KPL.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html#developing-producers-with-kpl-advantage",
"main_header": "Advantages of Using the KPL",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-kpl",
"text": "Developing Producers Using the Amazon Kinesis Producer Library"
},
"h2": {
"urllink": "#developing-producers-with-kpl-when",
"text": "When Not to Use the KPL"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"title": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html",
"title": "Configuring the Kinesis Producer Library"
}
],
"text": "The KPL can incur an additional processing delay of up to RecordMaxBufferedTime within the library (user-configurable). Larger values of RecordMaxBufferedTime results in higher packing efficiencies and better performance. Applications that cannot tolerate this additional delay may need to use the AWS SDK directly. For more information about using the AWS SDK with Kinesis Data Streams, see Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java. For more information about RecordMaxBufferedTime and other user-configurable properties of the KPL, see Configuring the Kinesis Producer Library.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html#developing-producers-with-kpl-when",
"main_header": "When Not to Use the KPL",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-dl-install",
"text": "Installing the KPL"
},
"links": [],
"text": "Amazon provides pre-built binaries of the C++ Kinesis Producer Library (KPL) for macOS, Windows, and recent Linux distributions (for supported platform details, see the next section). These binaries are packaged as part of Java .jar files and are automatically invoked and used if you are using Maven to install the package. To locate the latest versions of the KPL and KCL, use the following Maven search links:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-dl-install.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-dl-install.html#kinesis-kpl-dl-install",
"main_header": "Installing the KPL",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-dl-install",
"text": "Installing the KPL"
},
"links": [],
"text": "The Linux binaries have been compiled with the GNU Compiler Collection (GCC) and statically linked against libstdc++ on Linux. They are expected to work on any 64-bit Linux distribution that includes a glibc version 2.5 or higher.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-dl-install.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-dl-install.html#kinesis-kpl-dl-install",
"main_header": "Installing the KPL",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-dl-install",
"text": "Installing the KPL"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-producer",
"title": "Kinesis Producer Library"
}
],
"text": "Users of older Linux distributions can build the KPL using the build instructions provided along with the source on GitHub. To download the KPL from GitHub, see Kinesis Producer Library.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-dl-install.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-dl-install.html#kinesis-kpl-dl-install",
"main_header": "Installing the KPL",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-upgrades",
"text": "Transitioning to Amazon Trust Services (ATS) Certificates for the Kinesis Producer Library"
},
"links": [
{
"url": "http://search.maven.org/#artifactdetails|com.amazonaws|amazon-kinesis-producer|0.12.6|jar",
"title": "version 0.12.6"
}
],
"text": "On February 9, 2018, at 9:00 AM PST, Amazon Kinesis Data Streams installed ATS certificates. To continue to be able to write records to Kinesis Data Streams using the Kinesis Producer Library (KPL), you must upgrade your installation of the KPL to version 0.12.6 or later. This change affects all AWS Regions.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-upgrades.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-upgrades.html#kinesis-kpl-upgrades",
"main_header": "Transitioning to Amazon Trust Services (ATS) Certificates for the Kinesis Producer Library",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-upgrades",
"text": "Transitioning to Amazon Trust Services (ATS) Certificates for the Kinesis Producer Library"
},
"links": [
{
"url": "https://aws.amazon.com/blogs/security/how-to-prepare-for-aws-move-to-its-own-certificate-authority/",
"title": "How to Prepare for AWS\u00e2\u0080\u0099s Move to Its Own Certificate Authority"
}
],
"text": "For information about the move to ATS, please see How to Prepare for AWS\u00e2\u0080\u0099s Move to Its Own Certificate Authority.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-upgrades.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-upgrades.html#kinesis-kpl-upgrades",
"main_header": "Transitioning to Amazon Trust Services (ATS) Certificates for the Kinesis Producer Library",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-upgrades",
"text": "Transitioning to Amazon Trust Services (ATS) Certificates for the Kinesis Producer Library"
},
"links": [
{
"url": "https://console.aws.amazon.com/support/v1#/case/create",
"title": "create a case"
}
],
"text": "If you encounter problems and need technical support, create a case with the AWS Support Center.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-upgrades.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-upgrades.html#kinesis-kpl-upgrades",
"main_header": "Transitioning to Amazon Trust Services (ATS) Certificates for the Kinesis Producer Library",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-supported-plats",
"text": "KPL Supported Platforms"
},
"links": [],
"text": "The Kinesis Producer Library (KPL) is written in C++ and runs as a child process to the main user process. Precompiled 64-bit native binaries are bundled with the Java release and are managed by the Java wrapper.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-supported-plats.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-supported-plats.html#kinesis-kpl-supported-plats",
"main_header": "KPL Supported Platforms",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-supported-plats",
"text": "KPL Supported Platforms"
},
"links": [],
"text": "The Java package runs without the need to install any additional libraries on the following operating systems:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-supported-plats.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-supported-plats.html#kinesis-kpl-supported-plats",
"main_header": "KPL Supported Platforms",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-supported-plats",
"text": "KPL Supported Platforms"
},
"links": [],
"text": "Note that the KPL is 64-bit only.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-supported-plats.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-supported-plats.html#kinesis-kpl-supported-plats",
"main_header": "KPL Supported Platforms",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-supported-plats",
"text": "KPL Supported Platforms"
},
"h2": {
"urllink": "#kinesis-kpl-supported-plats-source-code",
"text": "Source Code"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-producer",
"title": "Kinesis Producer Library"
}
],
"text": "If the binaries provided in the KPL installation are not sufficient for your environment, the core of the KPL is written as a C++ module. The source code for the C++ module and the Java interface are released under the Amazon Public License and are available on GitHub at Kinesis Producer Library. Although the KPL can be used on any platform for which a recent standards-compliant C++ compiler and JRE are available, Amazon doesn't officially support any platform that is not on the supported platforms list.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-supported-plats.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-supported-plats.html#kinesis-kpl-supported-plats-source-code",
"main_header": "Source Code",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"links": [],
"text": "The following sections contain concepts and terminology necessary to understand and benefit from the Kinesis Producer Library (KPL).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts",
"main_header": "KPL Key Concepts",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-records",
"text": "Records"
},
"links": [],
"text": "In this guide, we distinguish between KPL user records and Kinesis Data Streams records. When we use the term record without a qualifier, we refer to a KPL user record. When we refer to a Kinesis Data Streams record, we explicitly say Kinesis Data Streams record.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-records",
"main_header": "Records",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-records",
"text": "Records"
},
"links": [],
"text": "A KPL user record is a blob of data that has particular meaning to the user. Examples include a JSON blob representing a UI event on a website, or a log entry from a web server.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-records",
"main_header": "Records",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-records",
"text": "Records"
},
"links": [],
"text": "A Kinesis Data Streams record is an instance of the Record data structure defined by the Kinesis Data Streams service API. It contains a partition key, sequence number, and a blob of data.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-records",
"main_header": "Records",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-batching",
"text": "Batching"
},
"links": [],
"text": "Batching refers to performing a single action on multiple items instead of repeatedly performing the action on each individual item.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-batching",
"main_header": "Batching",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-batching",
"text": "Batching"
},
"links": [],
"text": "In this context, the \"item\" is a record, and the action is sending it to Kinesis Data Streams. In a non-batching situation, you would place each record in a separate Kinesis Data Streams record and make one HTTP request to send it to Kinesis Data Streams. With batching, each HTTP request can carry multiple records instead of just one.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-batching",
"main_header": "Batching",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-batching",
"text": "Batching"
},
"links": [],
"text": "The KPL supports two types of batching:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-batching",
"main_header": "Batching",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-batching",
"text": "Batching"
},
"links": [],
"text": "The two types of KPL batching are designed to coexist and can be turned on or off independently of one another. By default, both are turned on.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-batching",
"main_header": "Batching",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-aggretation",
"text": "Aggregation"
},
"links": [],
"text": "Aggregation refers to the storage of multiple records in a Kinesis Data Streams record. Aggregation allows customers to increase the number of records sent per API call, which effectively increases producer throughput.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-aggretation",
"main_header": "Aggregation",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-aggretation",
"text": "Aggregation"
},
"links": [],
"text": "Kinesis Data Streams shards support up to 1,000 Kinesis Data Streams records per second, or 1 MB throughput. The Kinesis Data Streams records per second limit binds customers with records smaller than 1 KB. Record aggregation allows customers to combine multiple records into a single Kinesis Data Streams record. This allows customers to improve their per shard throughput.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-aggretation",
"main_header": "Aggregation",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-aggretation",
"text": "Aggregation"
},
"links": [],
"text": "Consider the case of one shard in region us-east-1 that is currently running at a constant rate of 1,000 records per second, with records that are 512 bytes each. With KPL aggregation, you can pack 1,000 records into only 10 Kinesis Data Streams records, reducing the RPS to 10 (at 50 KB each).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-aggretation",
"main_header": "Aggregation",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-collection",
"text": "Collection"
},
"links": [],
"text": "Collection refers to batching multiple Kinesis Data Streams records and sending them in a single HTTP request with a call to the API operation PutRecords, instead of sending each Kinesis Data Streams record in its own HTTP request.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-collection",
"main_header": "Collection",
"images": [],
"container_type": "p",
"children_tags": [
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-collection",
"text": "Collection"
},
"links": [],
"text": "This increases throughput compared to using no collection because it reduces the overhead of making many separate HTTP requests. In fact, PutRecords itself was specifically designed for this purpose.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-collection",
"main_header": "Collection",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-collection",
"text": "Collection"
},
"links": [],
"text": "Collection differs from aggregation in that it is working with groups of Kinesis Data Streams records. The Kinesis Data Streams records being collected can still contain multiple records from the user. The relationship can be visualized as such:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-collection",
"main_header": "Collection",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-concepts",
"text": "KPL Key Concepts"
},
"h2": {
"urllink": "#kinesis-kpl-concepts-collection",
"text": "Collection"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-concepts.html#kinesis-kpl-concepts-collection",
"main_header": "Collection",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-integration",
"text": "Integrating the KPL with Producer Code"
},
"links": [
{
"url": "http://en.wikipedia.org/wiki/Microservices",
"title": "microservice"
}
],
"text": "The Kinesis Producer Library (KPL) runs in a separate process, and communicates with your parent user process using IPC. This architecture is sometimes called a microservice, and is chosen for two main reasons:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html#kinesis-kpl-integration",
"main_header": "Integrating the KPL with Producer Code",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-integration",
"text": "Integrating the KPL with Producer Code"
},
"links": [],
"text": "1) Your user process will not crash even if the KPL crashes",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html#kinesis-kpl-integration",
"main_header": "Integrating the KPL with Producer Code",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-integration",
"text": "Integrating the KPL with Producer Code"
},
"links": [],
"text": "Your process could have tasks unrelated to Kinesis Data Streams, and may be able to continue operation even if the KPL crashes. It is also possible for your parent user process to restart the KPL and recover to a fully working state (this functionality is in the official wrappers).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html#kinesis-kpl-integration",
"main_header": "Integrating the KPL with Producer Code",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-integration",
"text": "Integrating the KPL with Producer Code"
},
"links": [],
"text": "An example is a web server that sends metrics to Kinesis Data Streams; the server can continue serving pages even if the Kinesis Data Streams part has stopped working. Crashing the whole server because of a bug in the KPL would therefore cause an unnecessary outage.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html#kinesis-kpl-integration",
"main_header": "Integrating the KPL with Producer Code",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-integration",
"text": "Integrating the KPL with Producer Code"
},
"links": [],
"text": "2) Arbitrary clients can be supported",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html#kinesis-kpl-integration",
"main_header": "Integrating the KPL with Producer Code",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-integration",
"text": "Integrating the KPL with Producer Code"
},
"links": [],
"text": "There are always customers who use languages other than the ones officially supported. These customers should also be able to use the KPL easily.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html#kinesis-kpl-integration",
"main_header": "Integrating the KPL with Producer Code",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-integration",
"text": "Integrating the KPL with Producer Code"
},
"h2": {
"urllink": "#kinesis-kpl-integration-usage",
"text": "Recommended Usage Matrix"
},
"links": [],
"text": "The following usage matrix enumerates the recommended settings for different users and advises you about whether and how you should use the KPL. Keep in mind that if aggregation is enabled, de-aggregation must also be used to extract your records on the consumer side.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-integration.html#kinesis-kpl-integration-usage",
"main_header": "Recommended Usage Matrix",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-writing",
"text": "Writing to your Kinesis Data Stream Using the KPL"
},
"links": [],
"text": "The following sections show sample code in a progression from the simplest possible \"bare-bones\" producer on through to fully asynchronous code.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-writing.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-writing.html#kinesis-kpl-writing",
"main_header": "Writing to your Kinesis Data Stream Using the KPL",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-writing",
"text": "Writing to your Kinesis Data Stream Using the KPL"
},
"h2": {
"urllink": "#kinesis-kpl-writing-code",
"text": "Barebones Producer Code"
},
"links": [],
"text": "The following code is all that is needed to write a minimal working producer. The Kinesis Producer Library (KPL) user records are processed in the background.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-writing.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-writing.html#kinesis-kpl-writing-code",
"main_header": "Barebones Producer Code",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-writing",
"text": "Writing to your Kinesis Data Stream Using the KPL"
},
"h2": {
"urllink": "#kinesis-kpl-writing-synchronous",
"text": "Responding to Results Synchronously"
},
"links": [],
"text": "In the previous example, the code didn't check whether the KPL user records succeeded. The KPL performs any retries needed to account for failures. But if you want to check on the results, you can examine them using the Future objects that are returned from addUserRecord, as in the following example (previous example shown for context):",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-writing.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-writing.html#kinesis-kpl-writing-synchronous",
"main_header": "Responding to Results Synchronously",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-writing",
"text": "Writing to your Kinesis Data Stream Using the KPL"
},
"h2": {
"urllink": "#kinesis-kpl-writing-asynchronous",
"text": "Responding to Results Asynchronously"
},
"links": [],
"text": "The previous example is calling get() on a Future object, which blocks execution. If you don't want to block execution, you can use an asynchronous callback, as shown in the following example:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-writing.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-writing.html#kinesis-kpl-writing-asynchronous",
"main_header": "Responding to Results Asynchronously",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-config",
"text": "Configuring the Kinesis Producer Library"
},
"links": [],
"text": "Although the default settings should work well for most use cases, you may want to change some of the default settings to tailor the behavior of the KinesisProducer to your needs. An instance of the KinesisProducerConfiguration class can be passed to the KinesisProducer constructor to do so, for example:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html#kinesis-kpl-config",
"main_header": "Configuring the Kinesis Producer Library",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-config",
"text": "Configuring the Kinesis Producer Library"
},
"links": [],
"text": "You can also load a configuration from a properties file:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html#kinesis-kpl-config",
"main_header": "Configuring the Kinesis Producer Library",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-config",
"text": "Configuring the Kinesis Producer Library"
},
"links": [],
"text": "You can substitute any path and file name that the user process has access to. You can additionally call set methods on the KinesisProducerConfiguration instance created this way to customize the config.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html#kinesis-kpl-config",
"main_header": "Configuring the Kinesis Producer Library",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-config",
"text": "Configuring the Kinesis Producer Library"
},
"links": [],
"text": "The properties file should specify parameters using their names in PascalCase. The names match those used in the set methods in the KinesisProducerConfiguration class. For example:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html#kinesis-kpl-config",
"main_header": "Configuring the Kinesis Producer Library",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-config",
"text": "Configuring the Kinesis Producer Library"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-producer/blob/master/java/amazon-kinesis-producer-sample/default_config.properties",
"title": "sample configuration properties file on GitHub"
}
],
"text": "For more information about configuration parameter usage rules and value limits, see the sample configuration properties file on GitHub.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html#kinesis-kpl-config",
"main_header": "Configuring the Kinesis Producer Library",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-config",
"text": "Configuring the Kinesis Producer Library"
},
"links": [],
"text": "Note that after KinesisProducer is initialized, changing the KinesisProducerConfiguration instance that was used has no further effect. KinesisProducer does not currently support dynamic reconfiguration.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-config.html#kinesis-kpl-config",
"main_header": "Configuring the Kinesis Producer Library",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"links": [],
"text": "Beginning with release 1.4.0, the KCL supports automatic de-aggregation of KPL user records. Consumer application code written with previous versions of the KCL will compile without any modification after you update the KCL. However, if KPL aggregation is being used on the producer side, there is a subtlety involving checkpointing: all subrecords within an aggregated record have the same sequence number, so additional data has to be stored with the checkpoint if you need to distinguish between subrecords. This additional data is referred to as the subsequence number.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation",
"main_header": "Consumer De-aggregation",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-migration",
"text": "Migrating from Previous Versions of the KCL"
},
"links": [],
"text": "You are not required to change your existing calls to do checkpointing in conjunction with aggregation. It is still guaranteed that you can retrieve all records successfully stored in Kinesis Data Streams. The KCL now provides two new checkpoint operations to support particular use cases, described below.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-migration",
"main_header": "Migrating from Previous Versions of the KCL",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-migration",
"text": "Migrating from Previous Versions of the KCL"
},
"links": [],
"text": "In the event that your existing code was written for the KCL prior to KPL support, and your checkpoint operation is called without arguments, it is equivalent to checkpointing the sequence number of the last KPL user record in the batch. If your checkpoint operation is called with a sequence number string, it is equivalent to checkpointing the given sequence number of the batch along with the implicit subsequence number 0 (zero).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-migration",
"main_header": "Migrating from Previous Versions of the KCL",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-migration",
"text": "Migrating from Previous Versions of the KCL"
},
"links": [],
"text": "Calling the new KCL checkpoint operation checkpoint() without any arguments is semantically equivalent to checkpointing the sequence number of the last Record call in the batch, along with the implicit subsequence number 0 (zero).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-migration",
"main_header": "Migrating from Previous Versions of the KCL",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-migration",
"text": "Migrating from Previous Versions of the KCL"
},
"links": [],
"text": "Calling the new KCL checkpoint operation checkpoint(Record record) is semantically equivalent to checkpointing the given Record\u00e2\u0080\u0099s sequence number along with the implicit subsequence number 0 (zero). If the Record call is actually a UserRecord, the UserRecord sequence number and subsequence number are checkpointed.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-migration",
"main_header": "Migrating from Previous Versions of the KCL",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-migration",
"text": "Migrating from Previous Versions of the KCL"
},
"links": [],
"text": "Calling the new KCL checkpoint operation checkpoint(String sequenceNumber, long subSequenceNumber) explicitly checkpoints the given sequence number along with the given subsequence number.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-migration",
"main_header": "Migrating from Previous Versions of the KCL",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-migration",
"text": "Migrating from Previous Versions of the KCL"
},
"links": [],
"text": "In any of these cases, after the checkpoint is stored in the Amazon DynamoDB checkpoint table, the KCL can correctly resume retrieving records even when the application crashes and restarts. If more records are contained within the sequence, retrieval occurs starting with the next subsequence number record within the record with the most recently checkpointed sequence number. If the most recent checkpoint included the very last subsequence number of the previous sequence number record, retrieval occurs starting with the record with the next sequence number.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-migration",
"main_header": "Migrating from Previous Versions of the KCL",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-migration",
"text": "Migrating from Previous Versions of the KCL"
},
"links": [],
"text": "The next section discusses details of sequence and subsequence checkpointing for consumers that need to avoid skipping and duplication of records. If skipping (or duplication) of records when stopping and restarting your consumer\u00e2\u0080\u0099s record processing is not important, you can run your existing code with no modification.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-migration",
"main_header": "Migrating from Previous Versions of the KCL",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-extensions",
"text": "KCL Extensions for KPL De-aggregation"
},
"links": [],
"text": "As previously discussed, KPL de-aggregation can involve subsequence checkpointing. To facilitate using subsequence checkpointing, a UserRecord class has been added to the KCL:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-extensions",
"main_header": "KCL Extensions for KPL De-aggregation",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-extensions",
"text": "KCL Extensions for KPL De-aggregation"
},
"links": [],
"text": "This class is now used instead of Record. This does not break existing code because it is a subclass of Record. The UserRecord class represents both actual subrecords and standard, non-aggregated records. Non-aggregated records can be thought of as aggregated records with exactly one subrecord.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-extensions",
"main_header": "KCL Extensions for KPL De-aggregation",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-extensions",
"text": "KCL Extensions for KPL De-aggregation"
},
"links": [],
"text": "In addition, two new operations are added toIRecordProcessorCheckpointer:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-extensions",
"main_header": "KCL Extensions for KPL De-aggregation",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-extensions",
"text": "KCL Extensions for KPL De-aggregation"
},
"links": [],
"text": "To begin using subsequence number checkpointing, you can perform the following conversion. Change the following form code:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-extensions",
"main_header": "KCL Extensions for KPL De-aggregation",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-extensions",
"text": "KCL Extensions for KPL De-aggregation"
},
"links": [],
"text": "New form code:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-extensions",
"main_header": "KCL Extensions for KPL De-aggregation",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-extensions",
"text": "KCL Extensions for KPL De-aggregation"
},
"links": [],
"text": "We recommend that you use the checkpoint(Record record) form for subsequence checkpointing. However, if you are already storing sequenceNumbers in strings to use for checkpointing, you should now also store subSequenceNumber, as shown in the following example:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-extensions",
"main_header": "KCL Extensions for KPL De-aggregation",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-extensions",
"text": "KCL Extensions for KPL De-aggregation"
},
"links": [],
"text": "The cast from RecordtoUserRecord always succeeds because the implementation always uses UserRecord under the hood. Unless there is a need to perform arithmetic on the sequence numbers, this approach is not recommended.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-extensions",
"main_header": "KCL Extensions for KPL De-aggregation",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-extensions",
"text": "KCL Extensions for KPL De-aggregation"
},
"links": [],
"text": "While processing KPL user records, the KCL writes the subsequence number into Amazon DynamoDB as an extra field for each row. Previous versions of the KCL used AFTER_SEQUENCE_NUMBER to fetch records when resuming checkpoints. The current KCL with KPL support uses AT_SEQUENCE_NUMBER instead. When the record at the checkpointed sequence number is retrieved, the checkpointed subsequence number is checked, and subrecords are dropped as appropriate (which may be all of them, if the last subrecord is the one checkpointed). Again, non-aggregated records can be thought of as aggregated records with a single subrecord, so the same algorithm works for both aggregated and non-aggregated records.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-extensions",
"main_header": "KCL Extensions for KPL De-aggregation",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-getrecords",
"text": "Using GetRecords Directly"
},
"links": [],
"text": "You can also choose not to use the KCL but instead invoke the API operation GetRecords directly to retrieve Kinesis Data Streams records. To unpack these retrieved records into your original KPL user records, call one of the following static operations in UserRecord.java:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-getrecords",
"main_header": "Using GetRecords Directly",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-getrecords",
"text": "Using GetRecords Directly"
},
"links": [],
"text": "The first operation uses the default value 0 (zero) for startingHashKey and the default value 2^128 -1 for endingHashKey.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-getrecords",
"main_header": "Using GetRecords Directly",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kinesis-kpl-consumer-deaggregation",
"text": "Consumer De-aggregation"
},
"h2": {
"urllink": "#kinesis-kpl-consumer-deaggregation-getrecords",
"text": "Using GetRecords Directly"
},
"links": [],
"text": "Each of these operations de-aggregates the given list of Kinesis Data Streams records into a list of KPL user records. Any KPL user records whose explicit hash key or partition key falls outside the range of the startingHashKey (inclusive) and the endingHashKey (inclusive) are discarded from the returned list of records.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html#kinesis-kpl-consumer-deaggregation-getrecords",
"main_header": "Using GetRecords Directly",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kpl-with-firehose",
"text": "Using the KPL with Kinesis Data Firehose"
},
"links": [
{
"url": "https://docs.aws.amazon.com/firehose/latest/dev/writing-with-kinesis-streams.html",
"title": "Writing to Kinesis Data Firehose Using Kinesis Data Streams"
}
],
"text": "If you use the Kinesis Producer Library (KPL) to write data to a Kinesis data stream, you can use aggregation to combine the records that you write to that Kinesis data stream. If you then use that data stream as a source for your Kinesis Data Firehose delivery stream, Kinesis Data Firehose de-aggregates the records before it delivers them to the destination. If you configure your delivery stream to transform the data, Kinesis Data Firehose de-aggregates the records before it delivers them to AWS Lambda. For more information, see Writing to Kinesis Data Firehose Using Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-firehose.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-firehose.html#kpl-with-firehose",
"main_header": "Using the KPL with Kinesis Data Firehose",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kpl-with-schemaregistry",
"text": "Using the KPL with the AWS Glue Schema Registry"
},
"links": [
{
"url": "https://docs.aws.amazon.com/glue/latest/dg/schema-registry.html",
"title": "AWS Glue Schema Registry"
}
],
"text": "You can integrate your Kinesis data streams with the AWS Glue schema registry. The AWS Glue schema registry allows you to centrally discover, control, and evolve schemas, while ensuring data produced is continuously validated by a registered schema. A schema defines the structure and format of a data record. A schema is a versioned specification for reliable data publication, consumption, or storage. The AWS Glue Schema Registry enables you to improve end-to-end data quality and data governance within your streaming applications. For more information, see AWS Glue Schema Registry. One of the ways to set up this integration is through the KPL and Kinesis Client Library (KCL) libraries in Java.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-schemaregistry.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-schemaregistry.html#kpl-with-schemaregistry",
"main_header": "Using the KPL with the AWS Glue Schema Registry",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kpl-with-schemaregistry",
"text": "Using the KPL with the AWS Glue Schema Registry"
},
"links": [
{
"url": "https://docs.aws.amazon.com/glue/latest/dg/schema-registry-integrations.html#schema-registry-integrations-kds",
"title": "Use Case: Integrating Amazon Kinesis Data Streams with the AWS Glue Schema Registry"
}
],
"text": "For detailed instructions on how to set up integration of Kinesis Data Streams with Schema Registry using the KPL, see the \"Interacting with Data Using the KPL/KCL Libraries\" section in Use Case: Integrating Amazon Kinesis Data Streams with the AWS Glue Schema Registry.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-schemaregistry.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-with-schemaregistry.html#kpl-with-schemaregistry",
"main_header": "Using the KPL with the AWS Glue Schema Registry",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kpl-proxy-configuration",
"text": "KPL Proxy Configuration"
},
"links": [
{
"url": "https://aws.amazon.com/blogs/big-data/implementing-efficient-and-reliable-producers-with-the-amazon-kinesis-producer-library/",
"title": "Implementing Efficient and Reliable Producers with the Amazon Kinesis Producer Library"
}
],
"text": "For applications that cannot directly connect to the internet, all AWS SDK clients support the use of HTTP or HTTPS proxies. In a typical enterprise environment, all outbound network traffic has to go through proxy servers. If your application uses Kinesis Producer Library (KPL) to collect and send data to AWS in an environment that uses proxy servers, your application will require KPL proxy configuration. KPL is a high level library built on top of the AWS Kinesis SDK. It is split into a native process and a wrapper. The native process performs all of the jobs of processing and sending records, while the wrapper manages the native process and communicates with it. For more information, see Implementing Efficient and Reliable Producers with the Amazon Kinesis Producer Library.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-proxy-configuration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-proxy-configuration.html#kpl-proxy-configuration",
"main_header": "KPL Proxy Configuration",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kpl-proxy-configuration",
"text": "KPL Proxy Configuration"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/The wrapper is written in Java and the native process is written in C++ with the use of Kinesis SDK. KPL version 0.14.7 now supports proxy configuration in the Java wrapper which can pass all proxy configurations to the native process. For more information, see https:/github.com/awslabs/amazon-kinesis-producer/releases/tag/v0.14.7",
"title": "https://github.com/awslabs/amazon-kinesis-producer/releases/tag/v0.14.7"
}
],
"text": "The wrapper is written in Java and the native process is written in C++ with the use of Kinesis SDK. KPL version 0.14.7 and higher now supports proxy configuration in the Java wrapper which can pass all proxy configurations to the native process. For more information, see https://github.com/awslabs/amazon-kinesis-producer/releases/tag/v0.14.7.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-proxy-configuration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-proxy-configuration.html#kpl-proxy-configuration",
"main_header": "KPL Proxy Configuration",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#kpl-proxy-configuration",
"text": "KPL Proxy Configuration"
},
"links": [],
"text": "You can use the following code to add proxy configurations to your KPL applications.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-proxy-configuration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kpl-proxy-configuration.html#kpl-proxy-configuration",
"main_header": "KPL Proxy Configuration",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/introduction.html",
"title": "What Is Amazon Kinesis Data Streams?"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started.html",
"title": "Getting Started with Amazon Kinesis Data Streams"
}
],
"text": "You can develop producers using the Amazon Kinesis Data Streams API with the AWS SDK for Java. If you are new to Kinesis Data Streams, start by becoming familiar with the concepts and terminology presented in What Is Amazon Kinesis Data Streams? and Getting Started with Amazon Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#developing-producers-with-sdk",
"main_header": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/",
"title": "Kinesis Data Streams API"
},
{
"url": "https://aws.amazon.com/sdk-for-java/",
"title": "AWS SDK for Java"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-kpl.html",
"title": "Developing Producers Using the Amazon Kinesis Producer Library"
}
],
"text": "These examples discuss the Kinesis Data Streams API and use the AWS SDK for Java to add (put) data to a stream. However, for most use cases, you should prefer the Kinesis Data Streams KPL library. For more information, see Developing Producers Using the Amazon Kinesis Producer Library.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#developing-producers-with-sdk",
"main_header": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/",
"title": "Kinesis Data Streams API"
},
{
"url": "https://aws.amazon.com/developers/getting-started/",
"title": "Start Developing with Amazon Web Services"
}
],
"text": "The Java example code in this chapter demonstrates how to perform basic Kinesis Data Streams API operations, and is divided up logically by operation type. These examples do not represent production-ready code, in that they do not check for all possible exceptions, or account for all possible security or performance considerations. Also, you can call the Kinesis Data Streams API using other programming languages. For more information about all available AWS SDKs, see Start Developing with Amazon Web Services.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#developing-producers-with-sdk",
"main_header": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
],
"text": "Each task has prerequisites; for example, you cannot add data to a stream until you have created a stream, which requires you to create a client . For more information, see Creating and Managing Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#developing-producers-with-sdk",
"main_header": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"links": [],
"text": "Once a stream is created, you can add data to it in the form of records. A record is a data structure that contains the data to be processed in the form of a data blob. After you store the data in the record, Kinesis Data Streams does not inspect, interpret, or change the data in any way. Each record also has an associated sequence number and partition key.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream",
"main_header": "Adding Data to a Stream",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecords.html",
"title": "PutRecords"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecord.html",
"title": "PutRecord"
}
],
"text": "There are two different operations in the Kinesis Data Streams API that add data to a stream, PutRecords and PutRecord. The PutRecords operation sends multiple records to your stream per HTTP request, and the singular PutRecord operation sends records to your stream one at a time (a separate HTTP request is required for each record). You should prefer using PutRecords for most applications because it will achieve higher throughput per data producer. For more information about each of these operations, see the separate subsections below.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream",
"main_header": "Adding Data to a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data",
"title": "Getting Data from a Stream"
}
],
"text": "Always keep in mind that, as your source application is adding data to the stream using the Kinesis Data Streams API, there are most likely one or more consumer applications that are simultaneously processing data off the stream. For information about how consumers get data using the Kinesis Data Streams API, see Getting Data from a Stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream",
"main_header": "Adding Data to a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecords.html",
"title": "PutRecords"
}
],
"text": "The PutRecords operation sends multiple records to Kinesis Data Streams in a single request. By using PutRecords, producers can achieve higher throughput when sending data to their Kinesis data stream. Each PutRecords request can support up to 500 records. Each record in the request can be as large as 1 MB, up to a limit of 5 MB for the entire request, including partition keys. As with the single PutRecord operation described below, PutRecords uses sequence numbers and partition keys. However, the PutRecord parameter SequenceNumberForOrdering is not included in a PutRecords call. The PutRecords operation attempts to process all records in the natural order of the request.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords",
"main_header": "Adding Multiple Records with PutRecords",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"links": [],
"text": "Each data record has a unique sequence number. The sequence number is assigned by Kinesis Data Streams after you call client.putRecords to add the data records to the stream. Sequence numbers for the same partition key generally increase over time; the longer the time period between PutRecords requests, the larger the sequence numbers become.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords",
"main_header": "Adding Multiple Records with PutRecords",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"links": [],
"text": "A PutRecords request can include records with different partition keys. The scope of the request is a stream; each request may include any combination of partition keys and records up to the request limits. Requests made with many different partition keys to streams with many different shards are generally faster than requests with a small number of partition keys to a small number of shards. The number of partition keys should be much larger than the number of shards to reduce latency and maximize throughput.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords",
"main_header": "Adding Multiple Records with PutRecords",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecords-example",
"text": "PutRecords Example"
},
"links": [],
"text": "The following code creates 100 data records with sequential partition keys and puts them in a stream called DataStream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords-example",
"main_header": "PutRecords Example",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecords-example",
"text": "PutRecords Example"
},
"links": [],
"text": "The PutRecords response includes an array of response Records. Each record in the response array directly correlates with a record in the request array using natural ordering, from the top to the bottom of the request and response. The response Records array always includes the same number of records as the request array.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords-example",
"main_header": "PutRecords Example",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecords-handling-failures",
"text": "Handling Failures When Using PutRecords"
},
"links": [],
"text": "By default, failure of individual records within a request does not stop the processing of subsequent records in a PutRecords request. This means that a response Records array includes both successfully and unsuccessfully processed records. You must detect unsuccessfully processed records and include them in a subsequent call.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords-handling-failures",
"main_header": "Handling Failures When Using PutRecords",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecords-handling-failures",
"text": "Handling Failures When Using PutRecords"
},
"links": [],
"text": "Successful records include SequenceNumber and ShardID values, and unsuccessful records include ErrorCode and ErrorMessage values. The ErrorCode parameter reflects the type of error and can be one of the following values: ProvisionedThroughputExceededException or InternalFailure. ErrorMessage provides more detailed information about the ProvisionedThroughputExceededException exception including the account ID, stream name, and shard ID of the record that was throttled. The example below has three records in a PutRecords request. The second record fails and is reflected in the response.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords-handling-failures",
"main_header": "Handling Failures When Using PutRecords",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecords",
"text": "Adding Multiple Records with PutRecords"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecords-handling-failures",
"text": "Handling Failures When Using PutRecords"
},
"links": [],
"text": "Records that were unsuccessfully processed can be included in subsequent PutRecords requests. First, check the FailedRecordCount parameter in the putRecordsResult to confirm if there are failed records in the request. If so, each putRecordsEntry that has an ErrorCode that is not null should be added to a subsequent request. For an example of this type of handler, refer to the following code.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords-handling-failures",
"main_header": "Handling Failures When Using PutRecords",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecord",
"text": "Adding a Single Record with PutRecord"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecord.html",
"title": "PutRecord"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords",
"title": "Adding Multiple Records with PutRecords"
}
],
"text": "Each call to PutRecord operates on a single record. Prefer the PutRecords operation described in Adding Multiple Records with PutRecords unless your application specifically needs to always send single records per request, or some other reason PutRecords can't be used.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord",
"main_header": "Adding a Single Record with PutRecord",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecord",
"text": "Adding a Single Record with PutRecord"
},
"links": [],
"text": "Each data record has a unique sequence number. The sequence number is assigned by Kinesis Data Streams after you call client.putRecord to add the data record to the stream. Sequence numbers for the same partition key generally increase over time; the longer the time period between PutRecord requests, the larger the sequence numbers become.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord",
"main_header": "Adding a Single Record with PutRecord",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecord",
"text": "Adding a Single Record with PutRecord"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord-example",
"title": "PutRecord Example"
}
],
"text": "When puts occur in quick succession, the returned sequence numbers are not guaranteed to increase because the put operations appear essentially as simultaneous to Kinesis Data Streams. To guarantee strictly increasing sequence numbers for the same partition key, use the SequenceNumberForOrdering parameter, as shown in the PutRecord Example code sample.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord",
"main_header": "Adding a Single Record with PutRecord",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecord",
"text": "Adding a Single Record with PutRecord"
},
"links": [],
"text": "Whether or not you use SequenceNumberForOrdering, records that Kinesis Data Streams receives through a GetRecords call are strictly ordered by sequence number.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord",
"main_header": "Adding a Single Record with PutRecord",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecord",
"text": "Adding a Single Record with PutRecord"
},
"links": [],
"text": "A partition key is used to group data within the stream. A data record is assigned to a shard within the stream based on its partition key. Specifically, Kinesis Data Streams uses the partition key as input to a hash function that maps the partition key (and associated data) to a specific shard.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord",
"main_header": "Adding a Single Record with PutRecord",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecord",
"text": "Adding a Single Record with PutRecord"
},
"links": [],
"text": "As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream. However, if the number of partition keys exceeds the number of shards, some shards necessarily contain records with different partition keys. From a design standpoint, to ensure that all your shards are well utilized, the number of shards (specified by the setShardCount method of CreateStreamRequest) should be substantially less than the number of unique partition keys, and the amount of data flowing to a single partition key should be substantially less than the capacity of the shard.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord",
"main_header": "Adding a Single Record with PutRecord",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecord",
"text": "Adding a Single Record with PutRecord"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecord-example",
"text": "PutRecord Example"
},
"links": [],
"text": "The following code creates ten data records, distributed across two partition keys, and puts them in a stream called myStreamName.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord-example",
"main_header": "PutRecord Example",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecord",
"text": "Adding a Single Record with PutRecord"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecord-example",
"text": "PutRecord Example"
},
"links": [],
"text": "The preceding code sample uses setSequenceNumberForOrdering to guarantee strictly increasing ordering within each partition key. To use this parameter effectively, set the SequenceNumberForOrdering of the current record (record n) to the sequence number of the preceding record (record n-1). To get the sequence number of a record that has been added to the stream, call getSequenceNumber on the result of putRecord.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord-example",
"main_header": "PutRecord Example",
"images": [],
"container_type": "p",
"children_tags": [
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-add-data-to-stream",
"text": "Adding Data to a Stream"
},
"h3": {
"urllink": "#kinesis-using-sdk-java-putrecord",
"text": "Adding a Single Record with PutRecord"
},
"h4": {
"urllink": "#kinesis-using-sdk-java-putrecord-example",
"text": "PutRecord Example"
},
"links": [],
"text": "The SequenceNumberForOrdering parameter ensures strictly increasing sequence numbers for the same partition key. SequenceNumberForOrdering does not provide ordering of records across multiple partition keys.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord-example",
"main_header": "PutRecord Example",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-integration-glue-schema-registry",
"text": "Interacting with Data Using the AWS Glue Schema Registry"
},
"links": [
{
"url": "https://docs.aws.amazon.com/glue/latest/dg/schema-registry.html",
"title": "AWS Glue Schema Registry"
}
],
"text": "You can integrate your Kinesis data streams with the AWS Glue schema registry. The AWS Glue schema registry allows you to centrally discover, control, and evolve schemas, while ensuring data produced is continuously validated by a registered schema. A schema defines the structure and format of a data record. A schema is a versioned specification for reliable data publication, consumption, or storage. The AWS Glue Schema Registry enables you to improve end-to-end data quality and data governance within your streaming applications. For more information, see AWS Glue Schema Registry. One of the ways to set up this integration is through the PutRecords and PutRecord Kinesis Data Streams APIs available in the AWS Java SDK.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-integration-glue-schema-registry",
"main_header": "Interacting with Data Using the AWS Glue Schema Registry",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#developing-producers-with-sdk",
"text": "Developing Producers Using the Amazon Kinesis Data Streams API with the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-integration-glue-schema-registry",
"text": "Interacting with Data Using the AWS Glue Schema Registry"
},
"links": [
{
"url": "https://docs.aws.amazon.com/glue/latest/dg/schema-registry-integrations.html#schema-registry-integrations-kds",
"title": "Use Case: Integrating Amazon Kinesis Data Streams with the AWS Glue Schema Registry"
}
],
"text": "For detailed instructions on how to set up integration of Kinesis Data Streams with Schema Registry using the PutRecords and PutRecord Kinesis Data Streams APIs, see the \"Interacting with Data Using the Kinesis Data Streams APIs\" section in Use Case: Integrating Amazon Kinesis Data Streams with the AWS Glue Schema Registry.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-integration-glue-schema-registry",
"main_header": "Interacting with Data Using the AWS Glue Schema Registry",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"links": [],
"text": "Kinesis Agent is a stand-alone Java software application that offers an easy way to collect and send data to Kinesis Data Streams. The agent continuously monitors a set of files and sends new data to your stream. The agent handles file rotation, checkpointing, and retry upon failures. It delivers all of your data in a reliable, timely, and simple manner. It also emits Amazon CloudWatch metrics to help you better monitor and troubleshoot the streaming process.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#writing-with-agents",
"main_header": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#agent-config-settings",
"title": "Agent Configuration Settings"
}
],
"text": "By default, records are parsed from each file based on the newline ('\\n') character. However, the agent can also be configured to parse multi-line records (see Agent Configuration Settings).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#writing-with-agents",
"main_header": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"links": [],
"text": "You can install the agent on Linux-based server environments such as web servers, log servers, and database servers. After installing the agent, configure it by specifying the files to monitor and the stream for the data. After the agent is configured, it durably collects data from the files and reliably sends it to the stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#writing-with-agents",
"main_header": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#download-install",
"text": "Download and Install the Agent"
},
"links": [
{
"url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-connect-to-instance-linux.html",
"title": "Connect to Your Instance"
},
{
"url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html",
"title": "Troubleshooting Connecting to Your Instance"
}
],
"text": "First, connect to your instance. For more information, see Connect to Your Instance in the Amazon EC2 User Guide for Linux Instances. If you have trouble connecting, see Troubleshooting Connecting to Your Instance in the Amazon EC2 User Guide for Linux Instances.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#download-install",
"main_header": "Download and Install the Agent",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#download-install",
"text": "Download and Install the Agent"
},
"links": [],
"text": "To set up the agent using the Amazon Linux AMI",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#download-install",
"main_header": "Download and Install the Agent",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#download-install",
"text": "Download and Install the Agent"
},
"links": [],
"text": "Use the following command to download and install the agent:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#download-install",
"main_header": "Download and Install the Agent",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#download-install",
"text": "Download and Install the Agent"
},
"links": [],
"text": "To set up the agent using Red Hat Enterprise Linux",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#download-install",
"main_header": "Download and Install the Agent",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#download-install",
"text": "Download and Install the Agent"
},
"links": [],
"text": "Use the following command to download and install the agent:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#download-install",
"main_header": "Download and Install the Agent",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#config-start",
"text": "Configure and Start the Agent"
},
"links": [],
"text": "The agent is now running as a system service in the background. It continuously monitors the specified files and sends data to the specified stream. Agent activity is logged in /var/log/aws-kinesis-agent/aws-kinesis-agent.log.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#config-start",
"main_header": "Configure and Start the Agent",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#agent-config-settings",
"text": "Agent Configuration Settings"
},
"links": [],
"text": "The agent supports the two mandatory configuration settings, filePattern and kinesisStream, plus optional configuration settings for additional features. You can specify both mandatory and optional configuration in /etc/aws-kinesis/agent.json.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#agent-config-settings",
"main_header": "Agent Configuration Settings",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#agent-config-settings",
"text": "Agent Configuration Settings"
},
"links": [],
"text": "Whenever you change the configuration file, you must stop and start the agent, using the following commands:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#agent-config-settings",
"main_header": "Agent Configuration Settings",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#agent-config-settings",
"text": "Agent Configuration Settings"
},
"links": [],
"text": "Alternatively, you could use the following command:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#agent-config-settings",
"main_header": "Agent Configuration Settings",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#agent-config-settings",
"text": "Agent Configuration Settings"
},
"links": [],
"text": "The following are the general configuration settings.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#agent-config-settings",
"main_header": "Agent Configuration Settings",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#agent-config-settings",
"text": "Agent Configuration Settings"
},
"links": [],
"text": "The following are the flow configuration settings.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#agent-config-settings",
"main_header": "Agent Configuration Settings",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#sim-writes",
"text": "Monitor Multiple File Directories and Write to Multiple Streams"
},
"links": [],
"text": "By specifying multiple flow configuration settings, you can configure the agent to monitor multiple file directories and send data to multiple streams. In the following configuration example, the agent monitors two file directories and sends data to an Kinesis stream and a Kinesis Data Firehose delivery stream respectively. Note that you can specify different endpoints for Kinesis Data Streams and Kinesis Data Firehose so that your Kinesis stream and Kinesis Data Firehose delivery stream don\u00e2\u0080\u0099t need to be in the same region.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#sim-writes",
"main_header": "Monitor Multiple File Directories and Write to Multiple Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#sim-writes",
"text": "Monitor Multiple File Directories and Write to Multiple Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/firehose/latest/dev/writing-with-agents.html",
"title": "Writing to Amazon Kinesis Data Firehose with Kinesis Agent"
}
],
"text": "For more detailed information about using the agent with Kinesis Data Firehose, see Writing to Amazon Kinesis Data Firehose with Kinesis Agent.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#sim-writes",
"main_header": "Monitor Multiple File Directories and Write to Multiple Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [],
"text": "The agent can pre-process the records parsed from monitored files before sending them to your stream. You can enable this feature by adding the dataProcessingOptions configuration setting to your file flow. One or more processing options can be added and they will be performed in the specified order.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#pre-processing",
"text": "Use the Agent to Pre-process Data"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-agent",
"title": "Kinesis Agent"
}
],
"text": "The agent supports the following processing options listed. Because the agent is open-source, you can further develop and extend its processing options. You can download the agent from Kinesis Agent.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#pre-processing",
"main_header": "Use the Agent to Pre-process Data",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#cli-commands",
"text": "Agent CLI Commands"
},
"links": [],
"text": "Automatically start the agent on system startup:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#cli-commands",
"main_header": "Agent CLI Commands",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#cli-commands",
"text": "Agent CLI Commands"
},
"links": [],
"text": "Check the status of the agent:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#cli-commands",
"main_header": "Agent CLI Commands",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#cli-commands",
"text": "Agent CLI Commands"
},
"links": [],
"text": "Stop the agent:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#cli-commands",
"main_header": "Agent CLI Commands",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#cli-commands",
"text": "Agent CLI Commands"
},
"links": [],
"text": "Read the agent's log file from this location:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#cli-commands",
"main_header": "Agent CLI Commands",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#writing-with-agents",
"text": "Writing to Amazon Kinesis Data Streams Using Kinesis Agent"
},
"h2": {
"urllink": "#cli-commands",
"text": "Agent CLI Commands"
},
"links": [],
"text": "Uninstall the agent:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#cli-commands",
"main_header": "Agent CLI Commands",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"h3": {
"urllink": "#service-limits-exceeded",
"text": "Service Limits Exceeded"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html",
"title": "Quotas and Limits"
}
],
"text": "To find out if service limits are being exceeded, check to see if your producer is throwing throughput exceptions from the service, and validate what API operations are being throttled. Keep in mind that there are different limits based on the call, see Quotas and Limits. For example, in addition to the shard-level limits for writes and reads that are most commonly known, there are the following stream-level limits:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#service-limits-exceeded",
"main_header": "Service Limits Exceeded",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"h3": {
"urllink": "#service-limits-exceeded",
"text": "Service Limits Exceeded"
},
"links": [],
"text": "The operations CreateStream, DeleteStream, ListStreams, GetShardIterator, and MergeShards are limited to 5 calls per second. The DescribeStream operation is limited to 10 calls per second. The DescribeStreamSummary operation is limited to 20 calls per second.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#service-limits-exceeded",
"main_header": "Service Limits Exceeded",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"h3": {
"urllink": "#service-limits-exceeded",
"text": "Service Limits Exceeded"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/working-with-streams.html",
"title": "Creating and Managing Streams"
}
],
"text": "If these calls aren't the issue, make sure you've selected a partition key that allows you to distribute put operations evenly across all shards, and that you don't have a particular partition key that's bumping into the service limits when the rest are not. This requires that you measure peak throughput and take into account the number of shards in your stream. For more information about managing streams, see Creating and Managing Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#service-limits-exceeded",
"main_header": "Service Limits Exceeded",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"h3": {
"urllink": "#producer-optimization",
"text": "Producer Optimization"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#service-limits-exceeded",
"title": "Service Limits Exceeded"
}
],
"text": "Before you begin optimizing your producer, there are some key tasks to be completed. First, identify your desired peak throughput in terms of record size and records per second. Next, rule out stream capacity as the limiting factor (Service Limits Exceeded). If you've ruled out stream capacity, use the following troubleshooting tips and optimization guidelines for the two common types of producers.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#producer-optimization",
"main_header": "Producer Optimization",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"h3": {
"urllink": "#producer-optimization",
"text": "Producer Optimization"
},
"links": [],
"text": "Large Producer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#producer-optimization",
"main_header": "Producer Optimization",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"h3": {
"urllink": "#producer-optimization",
"text": "Producer Optimization"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-kpl.html",
"title": "Kinesis Producer Library"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecords.html",
"title": "PutRecords"
},
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecord.html",
"title": "PutRecord"
}
],
"text": "A large producer is usually running from an on-premises server or Amazon EC2 instance. Customers who need higher throughput from a large producer typically care about per-record latency. Strategies for dealing with latency include the following: If the customer can micro-batch/buffer records, use the Kinesis Producer Library (which has advanced aggregation logic), the multi-record operation PutRecords, or aggregate records into a larger file before using the single-record operation PutRecord. If you are unable to batch/buffer, use multiple threads to write to the Kinesis Data Streams service at the same time. The AWS SDK for Java and other SDKs include async clients that can do this with very little code.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#producer-optimization",
"main_header": "Producer Optimization",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"h3": {
"urllink": "#producer-optimization",
"text": "Producer Optimization"
},
"links": [],
"text": "Small Producer",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#producer-optimization",
"main_header": "Producer Optimization",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#producer-writing-at-slower-rate",
"text": "Producer Application is Writing at a Slower Rate Than Expected"
},
"h3": {
"urllink": "#producer-optimization",
"text": "Producer Optimization"
},
"links": [],
"text": "A small producer is usually a mobile app, IoT device, or web client. If it\u00e2\u0080\u0099s a mobile app, we recommend using the PutRecords operation or the Kinesis Recorder in the AWS Mobile SDKs. For more information, see AWS Mobile SDK for Android Getting Started Guide and AWS Mobile SDK for iOS Getting Started Guide. Mobile apps must handle intermittent connections inherently and need some sort of batch put, such as PutRecords. If you are unable to batch for some reason, see the Large Producer information above. If your producer is a browser, the amount of data being generated is typically very small. However, you are putting the put operations on the critical path of the application, which we don\u00e2\u0080\u0099t recommend.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#producer-optimization",
"main_header": "Producer Optimization",
"images": [],
"container_type": "p",
"children_tags": [
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-producers",
"text": "Troubleshooting Amazon Kinesis Data Streams Producers"
},
"h2": {
"urllink": "#unauthorized-kms-producer",
"text": "Unauthorized KMS master key permission error"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html",
"title": "Using Key Policies in AWS KMS"
},
{
"url": "https://docs.aws.amazon.com/kms/latest/developerguide/iam-policies.html",
"title": "Using IAM Policies with AWS KMS"
}
],
"text": "This error occurs when a producer application writes to an encrypted stream without permissions on the KMS master key. To assign permissions to an application to access a KMS key, see Using Key Policies in AWS KMS and Using IAM Policies with AWS KMS.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-producers.html#unauthorized-kms-producer",
"main_header": "Unauthorized KMS master key permission error",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#advanced-producers",
"text": "Advanced Topics for Kinesis Data Streams Producers"
},
"links": [],
"text": "This section discusses how to optimize your Amazon Kinesis Data Streams producers.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html#advanced-producers",
"main_header": "Advanced Topics for Kinesis Data Streams Producers",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-producer-adv-retries-rate-limiting",
"text": "KPL Retries and Rate Limiting"
},
"links": [],
"text": "When you add Kinesis Producer Library (KPL) user records using the KPL addUserRecord() operation, a record is given a time stamp and added to a buffer with a deadline set by the RecordMaxBufferedTime configuration parameter. This time stamp/deadline combination sets the buffer priority. Records are flushed from the buffer based on the following criteria:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html#kinesis-producer-adv-retries-rate-limiting",
"main_header": "KPL Retries and Rate Limiting",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"title": "Advanced Topics for Kinesis Data Streams Producers"
}
]
},
{
"h1": {
"urllink": "#kinesis-producer-adv-retries-rate-limiting",
"text": "KPL Retries and Rate Limiting"
},
"links": [],
"text": "The aggregation and collection configuration parameters affecting buffer behavior are as follows:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html#kinesis-producer-adv-retries-rate-limiting",
"main_header": "KPL Retries and Rate Limiting",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"title": "Advanced Topics for Kinesis Data Streams Producers"
}
]
},
{
"h1": {
"urllink": "#kinesis-producer-adv-retries-rate-limiting",
"text": "KPL Retries and Rate Limiting"
},
"links": [],
"text": "Records flushed are then sent to your Kinesis data stream as Amazon Kinesis Data Streams records using a call to the Kinesis Data Streams API operation PutRecords. The PutRecords operation sends requests to your stream that occasionally exhibit full or partial failures. Records that fail are automatically added back to the KPL buffer. The new deadline is set based on the minimum of these two values:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html#kinesis-producer-adv-retries-rate-limiting",
"main_header": "KPL Retries and Rate Limiting",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"title": "Advanced Topics for Kinesis Data Streams Producers"
}
]
},
{
"h1": {
"urllink": "#kinesis-producer-adv-retries-rate-limiting",
"text": "KPL Retries and Rate Limiting"
},
"links": [],
"text": "This strategy allows retried KPL user records to be included in subsequent Kinesis Data Streams API calls, to improve throughput and reduce complexity while enforcing the Kinesis Data Streams record\u00e2\u0080\u0099s time-to-live value. There is no backoff algorithm, making this a relatively aggressive retry strategy. Spamming due to excessive retries is prevented by rate limiting, discussed in the next section.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html#kinesis-producer-adv-retries-rate-limiting",
"main_header": "KPL Retries and Rate Limiting",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"title": "Advanced Topics for Kinesis Data Streams Producers"
}
]
},
{
"h1": {
"urllink": "#kinesis-producer-adv-retries-rate-limiting",
"text": "KPL Retries and Rate Limiting"
},
"h2": {
"urllink": "#kinesis-producer-adv-retries-rate-limiting-rate-limit",
"text": "Rate Limiting"
},
"links": [],
"text": "The KPL includes a rate limiting feature, which limits per-shard throughput sent from a single producer. Rate limiting is implemented using a token bucket algorithm with separate buckets for both Kinesis Data Streams records and bytes. Each successful write to a Kinesis data stream adds a token (or multiple tokens) to each bucket, up to a certain threshold. This threshold is configurable but by default is set 50 percent higher than the actual shard limit, to allow shard saturation from a single producer.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html#kinesis-producer-adv-retries-rate-limiting-rate-limit",
"main_header": "Rate Limiting",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"title": "Advanced Topics for Kinesis Data Streams Producers"
}
]
},
{
"h1": {
"urllink": "#kinesis-producer-adv-retries-rate-limiting",
"text": "KPL Retries and Rate Limiting"
},
"h2": {
"urllink": "#kinesis-producer-adv-retries-rate-limiting-rate-limit",
"text": "Rate Limiting"
},
"links": [],
"text": "You can lower this limit to reduce spamming due to excessive retries. However, the best practice is for each producer to retry for maximum throughput aggressively and to handle any resulting throttling determined as excessive by expanding the capacity of the stream and implementing an appropriate partition key strategy.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-retries-rate-limiting.html#kinesis-producer-adv-retries-rate-limiting-rate-limit",
"main_header": "Rate Limiting",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"title": "Advanced Topics for Kinesis Data Streams Producers"
}
]
},
{
"h1": {
"urllink": "#kinesis-producer-adv-aggregation",
"text": "Considerations When Using KPL Aggregation"
},
"links": [],
"text": "While the sequence number scheme of the resulting Amazon Kinesis Data Streams records remains the same, aggregation causes the indexing of Kinesis Producer Library (KPL) user records contained within an aggregated Kinesis Data Streams record to start at 0 (zero); however, as long as you do not rely on sequence numbers to uniquely identify your KPL user records, your code can ignore this, as the aggregation (of your KPL user records into a Kinesis Data Streams record) and subsequent de-aggregation (of a Kinesis Data Streams record into your KPL user records) automatically takes care of this for you. This applies whether your consumer is using the KCL or the AWS SDK. To use this aggregation functionality, you\u00e2\u0080\u0099ll need to pull the Java part of the KPL into your build if your consumer is written using the API provided in the AWS SDK.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-aggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-aggregation.html#kinesis-producer-adv-aggregation",
"main_header": "Considerations When Using KPL Aggregation",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"title": "Advanced Topics for Kinesis Data Streams Producers"
}
]
},
{
"h1": {
"urllink": "#kinesis-producer-adv-aggregation",
"text": "Considerations When Using KPL Aggregation"
},
"links": [],
"text": "If you intend to use sequence numbers as unique identifiers for your KPL user records, we recommend that you use the contract-abiding public int hashCode() and public boolean equals(Object obj) operations provided in Record and UserRecord to enable the comparison of your KPL user records. Additionally, if you want to examine the subsequence number of your KPL user record, you can cast it to a UserRecord instance and retrieve its subsequence number.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-aggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-aggregation.html#kinesis-producer-adv-aggregation",
"main_header": "Considerations When Using KPL Aggregation",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"title": "Advanced Topics for Kinesis Data Streams Producers"
}
]
},
{
"h1": {
"urllink": "#kinesis-producer-adv-aggregation",
"text": "Considerations When Using KPL Aggregation"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-kpl-consumer-deaggregation.html",
"title": "Consumer De-aggregation"
}
],
"text": "For more information, see Consumer De-aggregation.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-aggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-producer-adv-aggregation.html#kinesis-producer-adv-aggregation",
"main_header": "Considerations When Using KPL Aggregation",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-producers.html",
"title": "Writing Data to Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-producers.html",
"title": "Advanced Topics for Kinesis Data Streams Producers"
}
]
},
{
"h1": {
"urllink": "#building-consumers",
"text": "Reading Data from Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
],
"text": "A consumer is an application that processes all data from a Kinesis data stream. When a consumer uses enhanced fan-out, it gets its own 2 MB/sec allotment of read throughput, allowing multiple consumers to read data from the same stream in parallel, without contending for read throughput with other consumers. To use the enhanced fan-out capability of shards, see Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html#building-consumers",
"main_header": "Reading Data from Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#building-consumers",
"text": "Reading Data from Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
],
"text": "By default, shards in a stream provide 2 MB/sec of read throughput per shard. This throughput gets shared across all the consumers that are reading from a given shard. In other words, the default 2 MB/sec of throughput per shard is fixed, even if there are multiple consumers that are reading from the shard. To use this default throughput of shards see, Developing Custom Consumers with Shared Throughput.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html#building-consumers",
"main_header": "Reading Data from Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#building-consumers",
"text": "Reading Data from Amazon Kinesis Data Streams"
},
"links": [],
"text": "The following table compares default throughput to enhanced fan-out. Message propagation delay is defined as the time taken in milliseconds for a payload sent using the payload-dispatching APIs (like PutRecord and PutRecords) to reach the consumer application through the payload-consuming APIs (like GetRecords and SubscribeToShard).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html#building-consumers",
"main_header": "Reading Data from Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#lambda-consumer",
"text": "Developing Consumers Using AWS Lambda"
},
"links": [
{
"url": "https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html",
"title": "Using AWS Lambda with Amazon Kinesis"
}
],
"text": "You can use an AWS Lambda function to process records in a data stream. AWS Lambda is a compute service that lets you run code without provisioning or managing servers. It executes your code only when needed and scales automatically, from a few requests per day to thousands per second. You pay only for the compute time you consume. There is no charge when your code is not running. With AWS Lambda, you can run code for virtually any type of application or backend service, all with zero administration. It runs your code on a high-availability compute infrastructure and performs all of the administration of the compute resources, including server and operating system maintenance, capacity provisioning and automatic scaling, code monitoring and logging. For more information, see Using AWS Lambda with Amazon Kinesis.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/lambda-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/lambda-consumer.html#lambda-consumer",
"main_header": "Developing Consumers Using AWS Lambda",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#lambda-consumer",
"text": "Developing Consumers Using AWS Lambda"
},
"links": [
{
"url": "https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-data-streams-lambda-invocation/",
"title": "Why is Kinesis Data Streams trigger unable to invoke my Lambda function?"
}
],
"text": "For troubleshooting information, see Why is Kinesis Data Streams trigger unable to invoke my Lambda function?",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/lambda-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/lambda-consumer.html#lambda-consumer",
"main_header": "Developing Consumers Using AWS Lambda",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kda-consumer",
"text": "Developing Consumers Using Amazon Kinesis Data Analytics"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesisanalytics/latest/dev/what-is.html",
"title": "Kinesis Data Analytics Developer Guide for SQL Applications"
},
{
"url": "https://docs.aws.amazon.com/kinesisanalytics/latest/java/what-is.html",
"title": "Kinesis Data Analytics Developer Guide for Flink Applications"
}
],
"text": "You can use an Amazon Kinesis Data Analytics application to process and analyze data in a Kinesis stream using SQL, Java, or Scala. Kinesis Data Analytics applications can enrich data using reference sources, aggregate data over time, or use machine learning to find data anomalies. Then you can write the analysis results to another Kinesis stream, a Kinesis Data Firehose delivery stream, or a Lambda function. For more information, see the Kinesis Data Analytics Developer Guide for SQL Applications or the Kinesis Data Analytics Developer Guide for Flink Applications.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kda-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kda-consumer.html#kda-consumer",
"main_header": "Developing Consumers Using Amazon Kinesis Data Analytics",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kdf-consumer",
"text": "Developing Consumers Using Amazon Kinesis Data Firehose"
},
"links": [
{
"url": "https://docs.aws.amazon.com/firehose/latest/dev/writing-with-kinesis-streams.html",
"title": "Writing to Kinesis Data Firehose Using Kinesis Data Streams"
}
],
"text": "You can use a Kinesis Data Firehose to read and process records from a Kinesis stream. Kinesis Data Firehose is a fully managed service for delivering real-time streaming data to destinations such as Amazon S3, Amazon Redshift, Amazon OpenSearch Service, and Splunk. Kinesis Data Firehose also supports any custom HTTP endpoint or HTTP endpoints owned by supported third-party service providers, including Datadog, MongoDB, and New Relic. You can also configure Kinesis Data Firehose to transform your data records and to convert the record format before delivering your data to its destination. For more information, see Writing to Kinesis Data Firehose Using Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kdf-consumer.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kdf-consumer.html#kdf-consumer",
"main_header": "Developing Consumers Using Amazon Kinesis Data Firehose",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"links": [],
"text": "One of the methods of developing custom consumer applications that can process data from KDS data streams is to use the Kinesis Client Library (KCL).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers",
"main_header": "Using the Kinesis Client Library",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-overview",
"text": "What is the Kinesis Client Library?"
},
"links": [],
"text": "KCL helps you consume and process data from a Kinesis data stream by taking care of many of the complex tasks associated with distributed computing. These include load balancing across multiple consumer application instances, responding to consumer application instance failures, checkpointing processed records, and reacting to resharding. The KCL takes care of all of these subtasks so that you can focus your efforts on writing your custom record-processing logic.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-overview",
"main_header": "What is the Kinesis Client Library?",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-overview",
"text": "What is the Kinesis Client Library?"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/Welcome.html",
"title": "Amazon Kinesis API Reference"
}
],
"text": "The KCL is different from the Kinesis Data Streams APIs that are available in the AWS SDKs. The Kinesis Data Streams APIs help you manage many aspects of Kinesis Data Streams, including creating streams, resharding, and putting and getting records. The KCL provides a layer of abstraction around all these subtasks, specifically so that you can focus on your consumer application\u00e2\u0080\u0099s custom data processing logic. For information about the Kinesis Data Streams API, see the Amazon Kinesis API Reference.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-overview",
"main_header": "What is the Kinesis Client Library?",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-overview",
"text": "What is the Kinesis Client Library?"
},
"links": [],
"text": "The KCL acts as an intermediary between your record processing logic and Kinesis Data Streams. The KCL performs the following tasks:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-overview",
"main_header": "What is the Kinesis Client Library?",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-versions",
"text": "KCL Available Versions"
},
"links": [],
"text": "Currently, you can use either of the following supported versions of KCL to build your custom consumer applications:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-versions",
"main_header": "KCL Available Versions",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-versions",
"text": "KCL Available Versions"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
}
],
"text": "You can use either KCL 1.x or KCL 2.x to build consumer applications that use shared throughput. For more information, see Developing Custom Consumers with Shared Throughput Using KCL.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-versions",
"main_header": "KCL Available Versions",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-versions",
"text": "KCL Available Versions"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
],
"text": "To build consumer applications that use dedicated throughput (enhanced fan-out consumers), you can only use KCL 2.x. For more information, see Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-versions",
"main_header": "KCL Available Versions",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-versions",
"text": "KCL Available Versions"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"title": "Migrating Consumers from KCL 1.x to KCL 2.x"
}
],
"text": "For information about the differences between KCL 1.x and KCL 2.x, and instructions on how to migrate from KCL 1.x to KCL 2.x, see Migrating Consumers from KCL 1.x to KCL 2.x.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-versions",
"main_header": "KCL Available Versions",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-what-is-leasetable",
"text": "What Is a Lease Table"
},
"links": [],
"text": "For each Amazon Kinesis Data Streams application, KCL uses a unique lease table (stored in a Amazon DynamoDB table) to keep track of the shards in a KDS data stream that are being leased and processed by the workers of the KCL consumer application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"main_header": "What Is a Lease Table",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-what-is-leasetable",
"text": "What Is a Lease Table"
},
"links": [
{
"url": "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ConsoleDynamoDB.html",
"title": "Amazon DynamoDB console"
}
],
"text": "You can view the lease table using the Amazon DynamoDB console while the consumer application is running.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"main_header": "What Is a Lease Table",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-what-is-leasetable",
"text": "What Is a Lease Table"
},
"links": [],
"text": "If the lease table for your KCL consumer application does not exist when the application starts up, one of the workers creates the lease table for this application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"main_header": "What Is a Lease Table",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-what-is-leasetable",
"text": "What Is a Lease Table"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-multistream",
"title": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application"
}
],
"text": "Each row in the lease table represents a shard that is being processed by the workers of your consumer application. If your KCL consumer application processes only one data stream, then leaseKey which is the hash key for the lease table is the shard ID. If you are Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application, then the structure of the leaseKey looks like this: account-id:StreamName:streamCreationTimestamp:ShardId. For example, 111111111:multiStreamTest-1:12345:shardId-000000000336.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"main_header": "What Is a Lease Table",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-what-is-leasetable",
"text": "What Is a Lease Table"
},
"links": [],
"text": "In addition to the shard ID, each row also includes the following data:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-what-is-leasetable",
"main_header": "What Is a Lease Table",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-leasetable-throughput",
"text": "Throughput"
},
"links": [],
"text": "If your Amazon Kinesis Data Streams application receives provisioned-throughput exceptions, you should increase the provisioned throughput for the DynamoDB table. The KCL creates the table with a provisioned throughput of 10 reads per second and 10 writes per second, but this might not be sufficient for your application. For example, if your Amazon Kinesis Data Streams application does frequent checkpointing or operates on a stream that is composed of many shards, you might need more throughput.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-leasetable-throughput",
"main_header": "Throughput",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-leasetable-throughput",
"text": "Throughput"
},
"links": [
{
"url": "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html",
"title": "Read/Write Capacity Mode"
},
{
"url": "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithDDTables.html",
"title": "Working with Tables and Data"
}
],
"text": "For information about provisioned throughput in DynamoDB, see Read/Write Capacity Mode and Working with Tables and Data in the Amazon DynamoDB Developer Guide.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-leasetable-throughput",
"main_header": "Throughput",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync",
"text": "How a Lease Table Is Synchronized with the Shards in a KDS Data Stream"
},
"links": [],
"text": "Workers in KCL consumer applications use leases to process shards from a given data stream. The information on what worker is leasing what shard at any given time is stored in a lease table. The lease table must remain in sync with the latest shard information from the data stream while the KCL consumer application is running. KCL synchronizes the lease table with the shards information acquired from the Kinesis Data Streams service during the consumer application bootstraping (either when the consumer application is initialized or restarted) and also whenever a shard that is being processed reaches an end (resharding). In other words, the workers or a KCL consumer application are synchronized with the data stream that they are processing during the initial consumer application bootstrap and whenever the consumer application encounters a data stream reshard event.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable-sync",
"main_header": "How a Lease Table Is Synchronized with the Shards in a KDS Data Stream",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync",
"text": "How a Lease Table Is Synchronized with the Shards in a KDS Data Stream"
},
"h4": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync-old",
"text": "Synchronization in KCL 1.0 - 1.13 and KCL 2.0 - 2.2"
},
"links": [],
"text": "In KCL 1.0 - 1.13 and KCL 2.0 - 2.2, during consumer application's bootstraping and also during each data stream reshard event, KCL synchronizes the lease table with the shards information acquired from the Kinesis Data Streams service by invoking the ListShards or the DescribeStream discovery APIs. In all the KCL versions listed above, each worker of a KCL consumer application completes the following steps to perform the lease/shard synchronization process during the consumer application's bootstrapping and at each stream reshard event:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable-sync-old",
"main_header": "Synchronization in KCL 1.0 - 1.13 and KCL 2.0 - 2.2",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync",
"text": "How a Lease Table Is Synchronized with the Shards in a KDS Data Stream"
},
"h4": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync-new-kcl2",
"text": "Synchronization in KCL 2.x, Starting with KCL 2.3 and Beyond"
},
"links": [],
"text": "Starting with the latest supported versions of KCL 2.x (KCL 2.3) and beyond, the library now supports the following changes to the synchronization process. These lease/shard synchronization changes significantly reduce the number of API calls made by KCL consumer applications to the Kinesis Data Streams service and optimize the lease management in your KCL consumer application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable-sync-new-kcl2",
"main_header": "Synchronization in KCL 2.x, Starting with KCL 2.3 and Beyond",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-leasetable",
"text": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
},
"h3": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync",
"text": "How a Lease Table Is Synchronized with the Shards in a KDS Data Stream"
},
"h4": {
"urllink": "#shared-throughput-kcl-consumers-leasetable-sync-new-kcl1",
"text": "Synchronization in KCL 1.x, Starting with KCL 1.14 and Beyond"
},
"links": [],
"text": "Starting with the latest supported versions of KCL 1.x (KCL 1.14) and beyond, the library now supports the following changes to the synchronization process. These lease/shard synchronization changes significantly reduce the number of API calls made by KCL consumer applications to the Kinesis Data Streams service and optimize the lease management in your KCL consumer application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable-sync-new-kcl1",
"main_header": "Synchronization in KCL 1.x, Starting with KCL 1.14 and Beyond",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-multistream",
"text": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application"
},
"links": [],
"text": "This section describes the following changes in KCL 2.x for Java that enable you to create KCL consumer applicaitons that can process more than one data stream at the same time.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-multistream",
"main_header": "Processing Multiple Data Streams with the same KCL 2.x for Java Consumer Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-glue-schema-registry",
"text": "Using the Kinesis Client Library with the AWS Glue Schema Registry"
},
"links": [
{
"url": "https://docs.aws.amazon.com/glue/latest/dg/schema-registry.html",
"title": "AWS Glue Schema Registry"
}
],
"text": "You can integrate your Kinesis data streams with the AWS Glue schema registry. The AWS Glue schema registry allows you to centrally discover, control, and evolve schemas, while ensuring data produced is continuously validated by a registered schema. A schema defines the structure and format of a data record. A schema is a versioned specification for reliable data publication, consumption, or storage. The AWS Glue Schema Registry enables you to improve end-to-end data quality and data governance within your streaming applications. For more information, see AWS Glue Schema Registry. One of the ways to set up this integration is through the KCL in Java.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-glue-schema-registry",
"main_header": "Using the Kinesis Client Library with the AWS Glue Schema Registry",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-kcl-consumers",
"text": "Using the Kinesis Client Library"
},
"h2": {
"urllink": "#shared-throughput-kcl-consumers-glue-schema-registry",
"text": "Using the Kinesis Client Library with the AWS Glue Schema Registry"
},
"links": [
{
"url": "https://docs.aws.amazon.com/glue/latest/dg/schema-registry-integrations.html#schema-registry-integrations-kds",
"title": "Use Case: Integrating Amazon Kinesis Data Streams with the AWS Glue Schema Registry"
}
],
"text": "For detailed instructions on how to set up integration of Kinesis Data Streams with Schema Registry using the KCL, see the \"Interacting with Data Using the KPL/KCL Libraries\" section in Use Case: Integrating Amazon Kinesis Data Streams with the AWS Glue Schema Registry.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-glue-schema-registry",
"main_header": "Using the Kinesis Client Library with the AWS Glue Schema Registry",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-consumers",
"text": "Developing Custom Consumers with Shared Throughput"
},
"links": [],
"text": "If you don't need dedicated throughput when receiving data from Kinesis Data Streams, and if you don't need read propagation delays under 200 ms, you can build consumer applications as described in the following topics.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html#shared-throughput-consumers",
"main_header": "Developing Custom Consumers with Shared Throughput",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#shared-throughput-consumers",
"text": "Developing Custom Consumers with Shared Throughput"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
],
"text": "For information about building consumers that can receive records from Kinesis data streams with dedicated throughput, see Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html#shared-throughput-consumers",
"main_header": "Developing Custom Consumers with Shared Throughput",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#custom-kcl-consumers",
"text": "Developing Custom Consumers with Shared Throughput Using KCL"
},
"links": [],
"text": "One of the methods of developing a custom consumer application with shared throughput is to use the Kinesis Client Library (KCL).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html#custom-kcl-consumers",
"main_header": "Developing Custom Consumers with Shared Throughput Using KCL",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-kcl",
"text": "Developing KCL 1.x Consumers"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-overview",
"title": "What is the Kinesis Client Library?"
}
],
"text": "You can develop a consumer application for Amazon Kinesis Data Streams using the Kinesis Client Library (KCL). For more information about KCL, see What is the Kinesis Client Library? .",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html#developing-consumers-with-kcl",
"main_header": "Developing KCL 1.x Consumers",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"links": [
{
"url": "https://docs.aws.amazon.com/sdk-for-java/latest/reference/com/amazonaws/services/kinesis/AmazonKinesisClient.html",
"title": "AWS Javadoc topic for Class AmazonKinesisClient"
}
],
"text": "You can use the Kinesis Client Library (KCL) to build applications that process data from your Kinesis data streams. The Kinesis Client Library is available in multiple languages. This topic discusses Java. To view the Javadoc reference, see the AWS Javadoc topic for Class AmazonKinesisClient.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-app-java",
"main_header": "Developing a Kinesis Client Library Consumer in Java",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client",
"title": "Kinesis Client Library (Java)"
},
{
"url": "https://search.maven.org/#search|ga|1|amazon-kinesis-client",
"title": "KCL search results"
},
{
"url": "https://github.com/aws/aws-sdk-java/tree/master/src/samples/AmazonKinesis",
"title": "KCL for Java sample project"
}
],
"text": "To download the Java KCL from GitHub, go to Kinesis Client Library (Java). To locate the Java KCL on Apache Maven, go to the KCL search results page. To download sample code for a Java KCL consumer application from GitHub, go to the KCL for Java sample project page on GitHub.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-app-java",
"main_header": "Developing a Kinesis Client Library Consumer in Java",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"links": [
{
"url": "http://commons.apache.org/proper/commons-logging/guide.html",
"title": "Apache Commons Logging"
},
{
"url": "https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/java-dg-logging.html",
"title": "Logging with Log4j"
}
],
"text": "The sample application uses Apache Commons Logging. You can change the logging configuration in the static configure method defined in the AmazonKinesisApplicationSample.java file. For more information about how to use Apache Commons Logging with Log4j and AWS Java applications, see Logging with Log4j in the AWS SDK for Java Developer Guide.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-app-java",
"main_header": "Developing a Kinesis Client Library Consumer in Java",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"links": [],
"text": "You must complete the following tasks when implementing a KCL consumer application in Java:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-app-java",
"main_header": "Developing a Kinesis Client Library Consumer in Java",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"links": [],
"text": "The KCL currently supports two versions of the IRecordProcessor interface:The original interface is available with the first version of the KCL, and version 2 is available starting with KCL version 1.5.0. Both interfaces are fully supported. Your choice depends on your specific scenario requirements. Refer to your locally built Javadocs or the source code to see all the differences. The following sections outline the minimal implementation for getting started.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-interface-java",
"main_header": "Implement the IRecordProcessor Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "The original IRecordProcessor interface (package com.amazonaws.services.kinesis.clientlibrary.interfaces) exposes the following record processor methods that your consumer must implement. The sample provides implementations that you can use as a starting point (see AmazonKinesisApplicationSampleRecordProcessor.java).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "initialize",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"title": "Resharding, Scaling, and Parallel Processing"
}
],
"text": "The KCL calls the initialize method when the record processor is instantiated, passing a specific shard ID as a parameter. This record processor processes only this shard and typically, the reverse is also true (this shard is processed only by this record processor). However, your consumer should account for the possibility that a data record might be processed more than one time. Kinesis Data Streams has at least once semantics, meaning that every data record from a shard is processed at least one time by a worker in your consumer. For more information about cases in which a particular shard may be processed by more than one worker, see Resharding, Scaling, and Parallel Processing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "processRecords",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "The KCL calls the processRecords method, passing a list of data record from the shard specified by the initialize(shardId) method. The record processor processes the data in these records according to the semantics of the consumer. For example, the worker might perform a transformation on the data and then store the result in an Amazon Simple Storage Service (Amazon S3) bucket.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "In addition to the data itself, the record also contains a sequence number and partition key. The worker can use these values when processing the data. For example, the worker could choose the S3 bucket in which to store the data based on the value of the partition key. The Record class exposes the following methods that provide access to the record's data, sequence number, and partition key.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "In the sample, the private method processRecordsWithRetries has code that shows how a worker can access the record's data, sequence number, and partition key.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "Kinesis Data Streams requires the record processor to keep track of the records that have already been processed in a shard. The KCL takes care of this tracking for you by passing a checkpointer (IRecordProcessorCheckpointer) to processRecords. The record processor calls the checkpoint method on this interface to inform the KCL of how far it has progressed in processing the records in the shard. If the worker fails, the KCL uses this information to restart the processing of the shard at the last known processed record.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "For a split or merge operation, the KCL won't start processing the new shards until the processors for the original shards have called checkpoint to signal that all processing on the original shards is complete.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "If you don't pass a parameter, the KCL assumes that the call to checkpoint means that all records have been processed, up to the last record that was passed to the record processor. Therefore, the record processor should call checkpoint only after it has processed all the records in the list that was passed to it. Record processors do not need to call checkpoint on each call to processRecords. A processor could, for example, call checkpoint on every third call to processRecords. You can optionally specify the exact sequence number of a record as a parameter to checkpoint. In this case, the KCL assumes that all records have been processed up to that record only.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "In the sample, the private method checkpoint shows how to call IRecordProcessorCheckpointer.checkpoint using the appropriate exception handling and retry logic.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "The KCL relies on processRecords to handle any exceptions that arise from processing the data records. If an exception is thrown from processRecords, the KCL skips over the data records that were passed before the exception. That is, these records are not re-sent to the record processor that threw the exception or to any other record processor in the consumer.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "shutdown",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "The KCL calls the shutdown method either when processing ends (the shutdown reason is TERMINATE) or the worker is no longer responding (the shutdown reason is ZOMBIE).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "Processing ends when the record processor does not receive any further records from the shard, because either the shard was split or merged, or the stream was deleted.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-original",
"text": "Original Interface (Version 1)"
},
"links": [],
"text": "The KCL also passes a IRecordProcessorCheckpointer interface to shutdown. If the shutdown reason is TERMINATE, the record processor should finish processing any data records, and then call the checkpoint method on this interface.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-original",
"main_header": "Original Interface (Version 1)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-v2",
"text": "Updated Interface (Version 2)"
},
"links": [],
"text": "The updated IRecordProcessor interface (package com.amazonaws.services.kinesis.clientlibrary.interfaces.v2) exposes the following record processor methods that your consumer must implement:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-v2",
"main_header": "Updated Interface (Version 2)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-v2",
"text": "Updated Interface (Version 2)"
},
"links": [],
"text": "All of the arguments from the original version of the interface are accessible through get methods on the container objects. For example, to retrieve the list of records in processRecords(), you can use processRecordsInput.getRecords().",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-v2",
"main_header": "Updated Interface (Version 2)",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-java",
"text": "Implement the IRecordProcessor Methods"
},
"h3": {
"urllink": "#kcl-java-interface-v2",
"text": "Updated Interface (Version 2)"
},
"links": [],
"text": "As of version 2 of this interface (KCL 1.5.0 and later), the following new inputs are available in addition to the inputs provided by the original interface:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-interface-v2",
"main_header": "Updated Interface (Version 2)",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-factory-java",
"text": "Implement a Class Factory for the IRecordProcessor Interface"
},
"links": [],
"text": "You also need to implement a factory for the class that implements the record processor methods. When your consumer instantiates the worker, it passes a reference to this factory.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-factory-java",
"main_header": "Implement a Class Factory for the IRecordProcessor Interface",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-factory-java",
"text": "Implement a Class Factory for the IRecordProcessor Interface"
},
"links": [],
"text": "The sample implements the factory class in the file AmazonKinesisApplicationSampleRecordProcessorFactory.java using the original record processor interface. If you want the class factory to create version 2 record processors, use the package name com.amazonaws.services.kinesis.clientlibrary.interfaces.v2.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-factory-java",
"main_header": "Implement a Class Factory for the IRecordProcessor Interface",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kcl-java-worker",
"text": "Create a Worker"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-implementation-interface-java",
"title": "Implement the IRecordProcessor Methods"
}
],
"text": "As discussed in Implement the IRecordProcessor Methods, there are two versions of the KCL record processor interface to choose from, which affects how you would create a worker. The original record processor interface uses the following code structure to create a worker:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-worker",
"main_header": "Create a Worker",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kcl-java-worker",
"text": "Create a Worker"
},
"links": [],
"text": "With version 2 of the record processor interface, you can use Worker.Builder to create a worker without needing to worry about which constructor to use and the order of the arguments. The updated record processor interface uses the following code structure to create a worker:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-worker",
"main_header": "Create a Worker",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-java",
"text": "Modify the Configuration Properties"
},
"links": [],
"text": "The sample provides default values for configuration properties. This configuration data for the worker is then consolidated in a KinesisClientLibConfiguration object. This object and a reference to the class factory for IRecordProcessor are passed in the call that instantiates the worker. You can override any of these properties with your own values using a Java properties file (see AmazonKinesisApplicationSample.java).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-initialization-java",
"main_header": "Modify the Configuration Properties",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-java",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#configuration-property-application-name",
"text": "Application Name"
},
"links": [],
"text": "The KCL requires an application name that is unique across your applications, and across Amazon DynamoDB tables in the same Region. It uses the application name configuration value in the following ways:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#configuration-property-application-name",
"main_header": "Application Name",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-java",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-cred-java",
"text": "Set Up Credentials"
},
"links": [],
"text": "You must make your AWS credentials available to one of the credential providers in the default credential providers chain. For example, if you are running your consumer on an EC2 instance, we recommend that you launch the instance with an IAM role. AWS credentials that reflect the permissions associated with this IAM role are made available to applications on the instance through its instance metadata. This is the most secure way to manage credentials for a consumer running on an EC2 instance.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-cred-java",
"main_header": "Set Up Credentials",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-java",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-cred-java",
"text": "Set Up Credentials"
},
"links": [],
"text": "The sample application first attempts to retrieve IAM credentials from instance metadata:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-cred-java",
"main_header": "Set Up Credentials",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-java",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-cred-java",
"text": "Set Up Credentials"
},
"links": [],
"text": "If the sample application cannot obtain credentials from the instance metadata, it attempts to retrieve credentials from a properties file:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-cred-java",
"main_header": "Set Up Credentials",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-java",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-cred-java",
"text": "Set Up Credentials"
},
"links": [
{
"url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
"title": "Instance Metadata"
}
],
"text": "For more information about instance metadata, see Instance Metadata in the Amazon EC2 User Guide for Linux Instances.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-cred-java",
"main_header": "Set Up Credentials",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-java",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-workerid-java",
"text": "Use Worker ID for Multiple Instances"
},
"links": [],
"text": "The sample initialization code creates an ID for the worker, workerId, using the name of the local computer and appending a globally unique identifier as shown in the following code snippet. This approach supports the scenario of multiple instances of the consumer application running on a single computer.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kinesis-record-processor-workerid-java",
"main_header": "Use Worker ID for Multiple Instances",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-java",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"h2": {
"urllink": "#kcl-java-v2-migration",
"text": "Migrating to Version 2 of the Record Processor Interface"
},
"links": [],
"text": "If you want to migrate code that uses the original interface, in addition to the steps described previously, the following steps are required:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-java.html#kcl-java-v2-migration",
"main_header": "Migrating to Version 2 of the Record Processor Interface",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"links": [],
"text": "You can use the Kinesis Client Library (KCL) to build applications that process data from your Kinesis data streams. The Kinesis Client Library is available in multiple languages. This topic discusses Node.js.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-app-nodejs",
"main_header": "Developing a Kinesis Client Library Consumer in Node.js",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client/tree/v1.x/src/main/java/com/amazonaws/services/kinesis/multilang",
"title": "KCL MultiLangDaemon project"
}
],
"text": "The KCL is a Java library; support for languages other than Java is provided using a multi-language interface called the MultiLangDaemon. This daemon is Java-based and runs in the background when you are using a KCL language other than Java. Therefore, if you install the KCL for Node.js and write your consumer app entirely in Node.js, you still need Java installed on your system because of the MultiLangDaemon. Further, MultiLangDaemon has some default settings you may need to customize for your use case, for example, the AWS Region that it connects to. For more information about the MultiLangDaemon on GitHub, go to the KCL MultiLangDaemon project page.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-app-nodejs",
"main_header": "Developing a Kinesis Client Library Consumer in Node.js",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client-nodejs",
"title": "Kinesis Client Library (Node.js)"
}
],
"text": "To download the Node.js KCL from GitHub, go to Kinesis Client Library (Node.js).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-app-nodejs",
"main_header": "Developing a Kinesis Client Library Consumer in Node.js",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"links": [],
"text": "You must complete the following tasks when implementing a KCL consumer application in Node.js:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-app-nodejs",
"main_header": "Developing a Kinesis Client Library Consumer in Node.js",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "The simplest possible consumer using the KCL for Node.js must implement a recordProcessor function, which in turn contains the functions initialize, processRecords, and shutdown. The sample provides an implementation that you can use as a starting point (see sample_kcl_app.js).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "initialize",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"title": "Resharding, Scaling, and Parallel Processing"
}
],
"text": "The KCL calls the initialize function when the record processor starts. This record processor processes only the shard ID passed as initializeInput.shardId, and typically, the reverse is also true (this shard is processed only by this record processor). However, your consumer should account for the possibility that a data record might be processed more than one time. This is because Kinesis Data Streams has at least once semantics, meaning that every data record from a shard is processed at least one time by a worker in your consumer. For more information about cases in which a particular shard might be processed by more than one worker, see Resharding, Scaling, and Parallel Processing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "processRecords",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "The KCL calls this function with input that contains a list of data records from the shard specified to the initialize function. The record processor that you implement processes the data in these records according to the semantics of your consumer. For example, the worker might perform a transformation on the data and then store the result in an Amazon Simple Storage Service (Amazon S3) bucket.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "In addition to the data itself, the record also contains a sequence number and partition key, which the worker can use when processing the data. For example, the worker could choose the S3 bucket in which to store the data based on the value of the partition key. The record dictionary exposes the following key-value pairs to access the record's data, sequence number, and partition key:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "Note that the data is Base64-encoded.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "In the basic sample, the function processRecords has code that shows how a worker can access the record's data, sequence number, and partition key.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "Kinesis Data Streams requires the record processor to keep track of the records that have already been processed in a shard. The KCL takes care of this tracking for with a checkpointer object passed as processRecordsInput.checkpointer. Your record processor calls the checkpointer.checkpoint function to inform the KCL how far it has progressed in processing the records in the shard. In the event that the worker fails, the KCL uses this information when you restart the processing of the shard so that it continues from the last known processed record.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "For a split or merge operation, the KCL doesn't start processing the new shards until the processors for the original shards have called checkpoint to signal that all processing on the original shards is complete.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "If you don't pass the sequence number to the checkpoint function, the KCL assumes that the call to checkpoint means that all records have been processed, up to the last record that was passed to the record processor. Therefore, the record processor should call checkpoint\nonly after it has processed all the records in the list that was passed to it. Record processors do not need to call checkpoint on each call to processRecords. A processor could, for example, call checkpoint on every third call, or some event external to your record processor, such as a custom verification/validation service you've implemented.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"b",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "You can optionally specify the exact sequence number of a record as a parameter to checkpoint. In this case, the KCL assumes that all records have been processed up to that record only.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "The basic sample application shows the simplest possible call to the checkpointer.checkpoint function. You can add other checkpointing logic you need for your consumer at this point in the function.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "shutdown",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "The KCL calls the shutdown function either when processing ends (shutdownInput.reason is TERMINATE) or the worker is no longer responding (shutdownInput.reason is ZOMBIE).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "Processing ends when the record processor does not receive any further records from the shard, because either the shard was split or merged, or the stream was deleted.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-nodejs",
"text": "Implement the Record Processor"
},
"links": [],
"text": "The KCL also passes a shutdownInput.checkpointer object to shutdown. If the shutdown reason is TERMINATE, you should make sure that the record processor has finished processing any data records, and then call the checkpoint function on this interface.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-implementation-interface-nodejs",
"main_header": "Implement the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-nodejs",
"text": "Modify the Configuration Properties"
},
"links": [],
"text": "The sample provides default values for the configuration properties. You can override any of these properties with your own values (see sample.properties in the basic sample).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-initialization-nodejs",
"main_header": "Modify the Configuration Properties",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-nodejs",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-application-name-nodejs",
"text": "Application Name"
},
"links": [],
"text": "The KCL requires an application that this is unique among your applications, and among Amazon DynamoDB tables in the same Region. It uses the application name configuration value in the following ways:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-application-name-nodejs",
"main_header": "Application Name",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-nodejs",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-credentials-nodejs",
"text": "Set Up Credentials"
},
"links": [
{
"url": "https://docs.aws.amazon.com/sdk-for-java/latest/reference/com/amazonaws/auth/DefaultAWSCredentialsProviderChain.html",
"title": "default credential providers chain"
}
],
"text": "You must make your AWS credentials available to one of the credential providers in the default credential providers chain. You can you use the AWSCredentialsProvider property to set a credentials provider. The sample.properties file must make your credentials available to one of the credentials providers in the default credential providers chain. If you are running your consumer on an Amazon EC2 instance, we recommend that you configure the instance with an IAM role. AWS credentials that reflect the permissions associated with this IAM role are made available to applications on the instance through its instance metadata. This is the most secure way to manage credentials for a consumer application running on an EC2 instance.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-credentials-nodejs",
"main_header": "Set Up Credentials",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-nodejs",
"text": "Developing a Kinesis Client Library Consumer in Node.js"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-nodejs",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-credentials-nodejs",
"text": "Set Up Credentials"
},
"links": [],
"text": "The following example configures KCL to process a Kinesis data stream named kclnodejssample using the record processor supplied in sample_kcl_app.js:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-nodejs.html#kinesis-record-processor-credentials-nodejs",
"main_header": "Set Up Credentials",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"links": [],
"text": "You can use the Kinesis Client Library (KCL) to build applications that process data from your Kinesis data streams. The Kinesis Client Library is available in multiple languages. This topic discusses .NET.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-app-dotnet",
"main_header": "Developing a Kinesis Client Library Consumer in .NET",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client/tree/v1.x/src/main/java/com/amazonaws/services/kinesis/multilang",
"title": "KCL MultiLangDaemon project"
}
],
"text": "The KCL is a Java library; support for languages other than Java is provided using a multi-language interface called the MultiLangDaemon. This daemon is Java-based and runs in the background when you are using a KCL language other than Java. Therefore, if you install the KCL for .NET and write your consumer app entirely in .NET, you still need Java installed on your system because of the MultiLangDaemon. Further, MultiLangDaemon has some default settings you may need to customize for your use case, for example, the AWS Region that it connects to. For more information about the MultiLangDaemon on GitHub, go to the KCL MultiLangDaemon project page.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-app-dotnet",
"main_header": "Developing a Kinesis Client Library Consumer in .NET",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client-net",
"title": "Kinesis Client Library (.NET)"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client-net/tree/master/SampleConsumer",
"title": "KCL for .NET sample consumer project"
}
],
"text": "To download the .NET KCL from GitHub, go to Kinesis Client Library (.NET). To download sample code for a .NET KCL consumer application, go to the KCL for .NET sample consumer project page on GitHub.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-app-dotnet",
"main_header": "Developing a Kinesis Client Library Consumer in .NET",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"links": [],
"text": "You must complete the following tasks when implementing a KCL consumer application in .NET:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-app-dotnet",
"main_header": "Developing a Kinesis Client Library Consumer in .NET",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "The consumer must implement the following methods for IRecordProcessor. The sample consumer provides implementations that you can use as a starting point (see the SampleRecordProcessor class in SampleConsumer/AmazonKinesisSampleConsumer.cs).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "Initialize",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"title": "Resharding, Scaling, and Parallel Processing"
}
],
"text": "The KCL calls this method when the record processor is instantiated, passing a specific shard ID in the input parameter (input.ShardId). This record processor processes only this shard, and typically, the reverse is also true (this shard is processed only by this record processor). However, your consumer should account for the possibility that a data record might be processed more than one time. This is because Kinesis Data Streams has at least once semantics, meaning that every data record from a shard is processed at least one time by a worker in your consumer. For more information about cases in which a particular shard might be processed by more than one worker, see Resharding, Scaling, and Parallel Processing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "ProcessRecords",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "The KCL calls this method, passing a list of data records in the input parameter (input.Records) from the shard specified by the Initialize method. The record processor that you implement processes the data in these records according to the semantics of your consumer. For example, the worker might perform a transformation on the data and then store the result in an Amazon Simple Storage Service (Amazon S3) bucket.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "In addition to the data itself, the record also contains a sequence number and partition key. The worker can use these values when processing the data. For example, the worker could choose the S3 bucket in which to store the data based on the value of the partition key. The Record class exposes the following to access the record's data, sequence number, and partition key:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "In the sample, the method ProcessRecordsWithRetries has code that shows how a worker can access the record's data, sequence number, and partition key.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "Kinesis Data Streams requires the record processor to keep track of the records that have already been processed in a shard. The KCL takes care of this tracking for you by passing a Checkpointer object to ProcessRecords (input.Checkpointer). The record processor calls the Checkpointer.Checkpoint method to inform the KCL of how far it has progressed in processing the records in the shard. If the worker fails, the KCL uses this information to restart the processing of the shard at the last known processed record.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "For a split or merge operation, the KCL doesn't start processing the new shards until the processors for the original shards have called Checkpointer.Checkpoint to signal that all processing on the original shards is complete.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "If you don't pass a parameter, the KCL assumes that the call to Checkpointer.Checkpoint signifies that all records have been processed, up to the last record that was passed to the record processor. Therefore, the record processor should call Checkpointer.Checkpoint only after it has processed all the records in the list that was passed to it. Record processors do not need to call Checkpointer.Checkpoint on each call to ProcessRecords. A processor could, for example, call Checkpointer.Checkpoint on every third or fourth call. You can optionally specify the exact sequence number of a record as a parameter to Checkpointer.Checkpoint. In this case, the KCL assumes that records have been processed only up to that record.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "In the sample, the private method Checkpoint(Checkpointer checkpointer) shows how to call the Checkpointer.Checkpoint method using appropriate exception handling and retry logic.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "The KCL for .NET handles exceptions differently from other KCL language libraries in that it does not handle any exceptions that arise from processing the data records. Any uncaught exceptions from user code crashes the program.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "Shutdown",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "The KCL calls the Shutdown method either when processing ends (the shutdown reason is TERMINATE) or the worker is no longer responding (the shutdown input.Reason value is ZOMBIE).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "Processing ends when the record processor does not receive any further records from the shard, because the shard was split or merged, or the stream was deleted.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-dotnet",
"text": "Implement the IRecordProcessor Class Methods"
},
"links": [],
"text": "The KCL also passes a Checkpointer object to shutdown. If the shutdown reason is TERMINATE, the record processor should finish processing any data records, and then call the checkpoint method on this interface.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-implementation-interface-dotnet",
"main_header": "Implement the IRecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-dotnet",
"text": "Modify the Configuration Properties"
},
"links": [],
"text": "The sample consumer provides default values for the configuration properties. You can override any of these properties with your own values (see SampleConsumer/kcl.properties).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-initialization-dotnet",
"main_header": "Modify the Configuration Properties",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-dotnet",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#modify-kinesis-record-processor-application-name",
"text": "Application Name"
},
"links": [],
"text": "The KCL requires an application that this is unique among your applications, and among Amazon DynamoDB tables in the same Region. It uses the application name configuration value in the following ways:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#modify-kinesis-record-processor-application-name",
"main_header": "Application Name",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-dotnet",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-creds-dotnet",
"text": "Set Up Credentials"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client-python/blob/master/samples/sample.properties",
"title": "sample.properties"
},
{
"url": "https://docs.aws.amazon.com/sdk-for-java/latest/reference/com/amazonaws/auth/DefaultAWSCredentialsProviderChain.html",
"title": "default credential providers chain"
}
],
"text": "You must make your AWS credentials available to one of the credential providers in the default credential providers chain. You can you use the AWSCredentialsProvider property to set a credentials provider. The sample.properties must make your credentials available to one of the credentials providers in the default credential providers chain. If you are running your consumer application on an EC2 instance, we recommend that you configure the instance with an IAM role. AWS credentials that reflect the permissions associated with this IAM role are made available to applications on the instance through its instance metadata. This is the most secure way to manage credentials for a consumer running on an EC2 instance.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-creds-dotnet",
"main_header": "Set Up Credentials",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-dotnet",
"text": "Developing a Kinesis Client Library Consumer in .NET"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-dotnet",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-creds-dotnet",
"text": "Set Up Credentials"
},
"links": [],
"text": "The sample's properties file configures KCL to process a Kinesis data stream called \"words\" using the record processor supplied in AmazonKinesisSampleConsumer.cs.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-dotnet.html#kinesis-record-processor-creds-dotnet",
"main_header": "Set Up Credentials",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"links": [],
"text": "You can use the Kinesis Client Library (KCL) to build applications that process data from your Kinesis data streams. The Kinesis Client Library is available in multiple languages. This topic discusses Python.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-app-py",
"main_header": "Developing a Kinesis Client Library Consumer in Python",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client/tree/v1.x/src/main/java/com/amazonaws/services/kinesis/multilang",
"title": "KCL MultiLangDaemon project"
}
],
"text": "The KCL is a Java library; support for languages other than Java is provided using a multi-language interface called the MultiLangDaemon. This daemon is Java-based and runs in the background when you are using a KCL language other than Java. Therefore, if you install the KCL for Python and write your consumer app entirely in Python, you still need Java installed on your system because of the MultiLangDaemon. Further, MultiLangDaemon has some default settings you may need to customize for your use case, for example, the AWS Region that it connects to. For more information about the MultiLangDaemon on GitHub, go to the KCL MultiLangDaemon project page.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-app-py",
"main_header": "Developing a Kinesis Client Library Consumer in Python",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client-python",
"title": "Kinesis Client Library (Python)"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client-python/tree/master/samples",
"title": "KCL for Python sample project"
}
],
"text": "To download the Python KCL from GitHub, go to Kinesis Client Library (Python). To download sample code for a Python KCL consumer application, go to the KCL for Python sample project page on GitHub.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-app-py",
"main_header": "Developing a Kinesis Client Library Consumer in Python",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"links": [],
"text": "You must complete the following tasks when implementing a KCL consumer application in Python:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-app-py",
"main_header": "Developing a Kinesis Client Library Consumer in Python",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "The RecordProcess class must extend the RecordProcessorBase to implement the following methods. The sample provides implementations that you can use as a starting point (see sample_kclpy_app.py).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "initialize",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"title": "Resharding, Scaling, and Parallel Processing"
}
],
"text": "The KCL calls the initialize method when the record processor is instantiated, passing a specific shard ID as a parameter. This record processor processes only this shard, and typically, the reverse is also true (this shard is processed only by this record processor). However, your consumer should account for the possibility that a data record might be processed more than one time. This is because Kinesis Data Streams has at least once semantics, meaning that every data record from a shard is processed at least one time by a worker in your consumer. For more information about cases in which a particular shard may be processed by more than one worker, see Resharding, Scaling, and Parallel Processing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "process_records",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "The KCL calls this method, passing a list of data record from the shard specified by the initialize method. The record processor that you implement processes the data in these records according to the semantics of your consumer. For example, the worker might perform a transformation on the data and then store the result in an Amazon Simple Storage Service (Amazon S3) bucket.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "In addition to the data itself, the record also contains a sequence number and partition key. The worker can use these values when processing the data. For example, the worker could choose the S3 bucket in which to store the data based on the value of the partition key. The record dictionary exposes the following key-value pairs to access the record's data, sequence number, and partition key:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "Note that the data is Base64-encoded.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "In the sample, the method process_records has code that shows how a worker can access the record's data, sequence number, and partition key.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "Kinesis Data Streams requires the record processor to keep track of the records that have already been processed in a shard. The KCL takes care of this tracking for you by passing a Checkpointer object to process_records. The record processor calls the checkpoint method on this object to inform the KCL of how far it has progressed in processing the records in the shard. If the worker fails, the KCL uses this information to restart the processing of the shard at the last known processed record.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "For a split or merge operation, the KCL doesn't start processing the new shards until the processors for the original shards have called checkpoint to signal that all processing on the original shards is complete.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "If you don't pass a parameter, the KCL assumes that the call to checkpoint means that all records have been processed, up to the last record that was passed to the record processor. Therefore, the record processor should call checkpoint only after it has processed all the records in the list that was passed to it. Record processors do not need to call checkpoint on each call to process_records. A processor could, for example, call checkpoint on every third call. You can optionally specify the exact sequence number of a record as a parameter to checkpoint. In this case, the KCL assumes that all records have been processed up to that record only.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "In the sample, the private method checkpoint shows how to call the Checkpointer.checkpoint method using appropriate exception handling and retry logic.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "The KCL relies on process_records to handle any exceptions that arise from processing the data records. If an exception is thrown from process_records, the KCL skips over the data records that were passed to process_records before the exception. That is, these records are not re-sent to the record processor that threw the exception or to any other record processor in the consumer.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "shutdown",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "The KCL calls the shutdown method either when processing ends (the shutdown reason is TERMINATE) or the worker is no longer responding (the shutdown reason is ZOMBIE).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "Processing ends when the record processor does not receive any further records from the shard, because either the shard was split or merged, or the stream was deleted.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "The KCL also passes a Checkpointer object to shutdown. If the shutdown reason is TERMINATE, the record processor should finish processing any data records, and then call the checkpoint method on this interface.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-py",
"text": "Modify the Configuration Properties"
},
"links": [],
"text": "The sample provides default values for the configuration properties. You can override any of these properties with your own values (see sample.properties).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-initialization-py",
"main_header": "Modify the Configuration Properties",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-py",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-application-name-py",
"text": "Application Name"
},
"links": [],
"text": "The KCL requires an application name that is unique among your applications, and among Amazon DynamoDB tables in the same Region. It uses the application name configuration value in the following ways:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-application-name-py",
"main_header": "Application Name",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-py",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-creds-py",
"text": "Set Up Credentials"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client-python/blob/master/samples/sample.properties",
"title": "sample.properties"
},
{
"url": "https://docs.aws.amazon.com/sdk-for-java/latest/reference/com/amazonaws/auth/DefaultAWSCredentialsProviderChain.html",
"title": "default credential providers chain"
}
],
"text": "You must make your AWS credentials available to one of the credential providers in the default credential providers chain. You can you use the AWSCredentialsProvider property to set a credentials provider. The sample.properties must make your credentials available to one of the credentials providers in the default credential providers chain. If you are running your consumer application on an Amazon EC2 instance, we recommend that you configure the instance with an IAM role. AWS credentials that reflect the permissions associated with this IAM role are made available to applications on the instance through its instance metadata. This is the most secure way to manage credentials for a consumer application running on an EC2 instance.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-creds-py",
"main_header": "Set Up Credentials",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-py",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-py",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-creds-py",
"text": "Set Up Credentials"
},
"links": [],
"text": "The sample's properties file configures KCL to process a Kinesis data stream called \"words\" using the record processor supplied in sample_kclpy_app.py.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-py.html#kinesis-record-processor-creds-py",
"main_header": "Set Up Credentials",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-ruby",
"text": "Developing a Kinesis Client Library Consumer in Ruby"
},
"links": [],
"text": "You can use the Kinesis Client Library (KCL) to build applications that process data from your Kinesis data streams. The Kinesis Client Library is available in multiple languages. This topic discusses Ruby.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-ruby.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-ruby.html#kinesis-record-processor-implementation-app-ruby",
"main_header": "Developing a Kinesis Client Library Consumer in Ruby",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-ruby",
"text": "Developing a Kinesis Client Library Consumer in Ruby"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client/tree/v1.x/src/main/java/com/amazonaws/services/kinesis/multilang",
"title": "KCL MultiLangDaemon project"
}
],
"text": "The KCL is a Java library; support for languages other than Java is provided using a multi-language interface called the MultiLangDaemon. This daemon is Java-based and runs in the background when you are using a KCL language other than Java. Therefore, if you install the KCL for Ruby and write your consumer app entirely in Ruby, you still need Java installed on your system because of the MultiLangDaemon. Further, MultiLangDaemon has some default settings you may need to customize for your use case, for example, the AWS Region that it connects to. For more information about the MultiLangDaemon on GitHub, go to the KCL MultiLangDaemon project page.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-ruby.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-ruby.html#kinesis-record-processor-implementation-app-ruby",
"main_header": "Developing a Kinesis Client Library Consumer in Ruby",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-ruby",
"text": "Developing a Kinesis Client Library Consumer in Ruby"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client-ruby",
"title": "Kinesis Client Library (Ruby)"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client-ruby/tree/master/samples",
"title": "KCL for Ruby sample project"
}
],
"text": "To download the Ruby KCL from GitHub, go to Kinesis Client Library (Ruby). To download sample code for a Ruby KCL consumer application, go to the KCL for Ruby sample project page on GitHub.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-ruby.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-ruby.html#kinesis-record-processor-implementation-app-ruby",
"main_header": "Developing a Kinesis Client Library Consumer in Ruby",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-implementation-app-ruby",
"text": "Developing a Kinesis Client Library Consumer in Ruby"
},
"links": [
{
"url": "http://www.rubydoc.info/gems/aws-kclrb",
"title": "KCL Ruby Gems Documentation"
}
],
"text": "For more information about the KCL Ruby support library, see KCL Ruby Gems Documentation.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-ruby.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-implementation-app-ruby.html#kinesis-record-processor-implementation-app-ruby",
"main_header": "Developing a Kinesis Client Library Consumer in Ruby",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-kcl-v2",
"text": "Developing KCL 2.x Consumers"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing Consumers Using the Kinesis Client Library 1.x"
}
],
"text": "This topic shows you how to use version 2.0 of the Kinesis Client Library (KCL). For more information about the KCL, see the overview provided in Developing Consumers Using the Kinesis Client Library 1.x.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html#developing-consumers-with-kcl-v2",
"main_header": "Developing KCL 2.x Consumers",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-java-example",
"text": "Developing a Kinesis Client Library Consumer in Java"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/introduction-to-enhanced-consumers.html",
"title": "Using Consumers with Enhanced Fan-Out"
}
],
"text": "The following code shows an example implementation in Java of ProcessorFactory and RecordProcessor. If you want to take advantage of the enhanced fan-out feature, see Using Consumers with Enhanced Fan-Out .",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-java-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-java-example.html#kcl2-standard-consumer-java-example",
"main_header": "Developing a Kinesis Client Library Consumer in Java",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-python-example",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"links": [],
"text": "You can use the Kinesis Client Library (KCL) to build applications that process data from your Kinesis data streams. The Kinesis Client Library is available in multiple languages. This topic discusses Python.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kcl2-standard-consumer-python-example",
"main_header": "Developing a Kinesis Client Library Consumer in Python",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-python-example",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client/tree/v1.x/src/main/java/com/amazonaws/services/kinesis/multilang",
"title": "KCL MultiLangDaemon project"
}
],
"text": "The KCL is a Java library; support for languages other than Java is provided using a multi-language interface called the MultiLangDaemon. This daemon is Java-based and runs in the background when you are using a KCL language other than Java. Therefore, if you install the KCL for Python and write your consumer app entirely in Python, you still need Java installed on your system because of the MultiLangDaemon. Further, MultiLangDaemon has some default settings you may need to customize for your use case, for example, the AWS Region that it connects to. For more information about the MultiLangDaemon on GitHub, go to the KCL MultiLangDaemon project page.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kcl2-standard-consumer-python-example",
"main_header": "Developing a Kinesis Client Library Consumer in Python",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-python-example",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"links": [
{
"url": "https://github.com/awslabs/amazon-kinesis-client-python",
"title": "Kinesis Client Library (Python)"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client-python/tree/master/samples",
"title": "KCL for Python sample project"
}
],
"text": "To download the Python KCL from GitHub, go to Kinesis Client Library (Python). To download sample code for a Python KCL consumer application, go to the KCL for Python sample project page on GitHub.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kcl2-standard-consumer-python-example",
"main_header": "Developing a Kinesis Client Library Consumer in Python",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-python-example",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"links": [],
"text": "You must complete the following tasks when implementing a KCL consumer application in Python:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kcl2-standard-consumer-python-example",
"main_header": "Developing a Kinesis Client Library Consumer in Python",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-python-example",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "The RecordProcess class must extend the RecordProcessorBase class to implement the following methods:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-python-example",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-implementation-interface-py",
"text": "Implement the RecordProcessor Class Methods"
},
"links": [],
"text": "This sample provides implementations that you can use as a starting point.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kinesis-record-processor-implementation-interface-py",
"main_header": "Implement the RecordProcessor Class Methods",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-python-example",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-py",
"text": "Modify the Configuration Properties"
},
"links": [],
"text": "The sample provides default values for the configuration properties, as shown in the following script. You can override any of these properties with your own values.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kinesis-record-processor-initialization-py",
"main_header": "Modify the Configuration Properties",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-python-example",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-py",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-application-name-py",
"text": "Application Name"
},
"links": [],
"text": "The KCL requires an application name that is unique among your applications and among Amazon DynamoDB tables in the same Region. It uses the application name configuration value in the following ways:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kinesis-record-processor-application-name-py",
"main_header": "Application Name",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#kcl2-standard-consumer-python-example",
"text": "Developing a Kinesis Client Library Consumer in Python"
},
"h2": {
"urllink": "#kinesis-record-processor-initialization-py",
"text": "Modify the Configuration Properties"
},
"h3": {
"urllink": "#kinesis-record-processor-creds-py",
"text": "Credentials"
},
"links": [
{
"url": "https://docs.aws.amazon.com/sdk-for-java/latest/reference/com/amazonaws/auth/DefaultAWSCredentialsProviderChain.html",
"title": "default credential providers chain"
}
],
"text": "You must make your AWS credentials available to one of the credential providers in the default credential providers chain. You can you use the AWSCredentialsProvider property to set a credentials provider. If you run your consumer application on an Amazon EC2 instance, we recommend that you configure the instance with an IAM role. AWS credentials that reflect the permissions associated with this IAM role are made available to applications on the instance through its instance metadata. This is the most secure way to manage credentials for a consumer application running on an EC2 instance.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl2-standard-consumer-python-example.html#kinesis-record-processor-creds-py",
"main_header": "Credentials",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/custom-kcl-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput Using KCL"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing KCL 2.x Consumers"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"links": [],
"text": "One of the methods for developing custom Kinesis Data Streams consumers with shared throughout is to use the Amazon Kinesis Data Streams APIs. This section describes using the Kinesis Data Streams APIs with the AWS SDK for Java. The Java sample code in this section demonstrates how to perform basic KDS API operations, and is divided up logically by operation type.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#developing-consumers-with-sdk",
"main_header": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"links": [],
"text": "These examples don't represent production-ready code. They don't check for all possible exceptions or account for all possible security or performance considerations.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#developing-consumers-with-sdk",
"main_header": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"links": [
{
"url": "https://aws.amazon.com/developers/getting-started/",
"title": "Start Developing with Amazon Web Services"
}
],
"text": "You can call the Kinesis Data Streams APIs using other different programming languages. For more information about all available AWS SDKs, see Start Developing with Amazon Web Services.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#developing-consumers-with-sdk",
"main_header": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data",
"text": "Getting Data from a Stream"
},
"links": [],
"text": "The Kinesis Data Streams APIs include the getShardIterator and getRecords methods that you can invoke to retrieve records from a data stream. This is the pull model, where your code draws data records directly from the shards of the data stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data",
"main_header": "Getting Data from a Stream",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data",
"text": "Getting Data from a Stream"
},
"links": [],
"text": "However, in some cases you might prefer to use the Kinesis Data Streams APIs. For example, to implement custom tools for monitoring or debugging your data streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data",
"main_header": "Getting Data from a Stream",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-shard-iterators",
"text": "Using Shard Iterators"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-retrieve-shards",
"title": "DescribeStream API - Deprecated"
}
],
"text": "You retrieve records from the stream on a per-shard basis. For each shard, and for each batch of records that you retrieve from that shard, you must obtain a shard iterator. The shard iterator is used in the getRecordsRequest object to specify the shard from which records are to be retrieved. The type associated with the shard iterator determines the point in the shard from which the records should be retrieved (see later in this section for more details). Before you can work with the shard iterator, you need to retrieve the shard, as discussed in DescribeStream API - Deprecated.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-shard-iterators",
"main_header": "Using Shard Iterators",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-shard-iterators",
"text": "Using Shard Iterators"
},
"links": [],
"text": "Obtain the initial shard iterator using the getShardIterator method. Obtain shard iterators for additional batches of records using the getNextShardIterator method of the getRecordsResult object returned by the getRecords method. A shard iterator is valid for 5 minutes. If you use a shard iterator while it is valid, you get a new one. Each shard iterator remains valid for 5 minutes, even after it is used.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-shard-iterators",
"main_header": "Using Shard Iterators",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-shard-iterators",
"text": "Using Shard Iterators"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-streams.html",
"title": "Listing Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-list-shards.html#kinesis-using-sdk-java-retrieve-shards",
"title": "DescribeStream API - Deprecated"
}
],
"text": "To obtain the initial shard iterator, instantiate GetShardIteratorRequest and pass it to the getShardIterator method. To configure the request, specify the stream and the shard ID. For information about how to obtain the streams in your AWS account, see Listing Streams. For information about how to obtain the shards in a stream, see DescribeStream API - Deprecated.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-shard-iterators",
"main_header": "Using Shard Iterators",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-shard-iterators",
"text": "Using Shard Iterators"
},
"links": [],
"text": "This sample code specifies TRIM_HORIZON as the iterator type when obtaining the initial shard iterator. This iterator type means that records should be returned beginning with the first record added to the shard\u00e2\u0080\u0094rather than beginning with the most recently added record, also known as the tip. The following are possible iterator types:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-shard-iterators",
"main_header": "Using Shard Iterators",
"images": [],
"container_type": "p",
"children_tags": [
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-shard-iterators",
"text": "Using Shard Iterators"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetShardIterator.html#Kinesis-GetShardIterator-request-ShardIteratorType",
"title": "ShardIteratorType"
}
],
"text": "For more information, see ShardIteratorType.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-shard-iterators",
"main_header": "Using Shard Iterators",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-shard-iterators",
"text": "Using Shard Iterators"
},
"links": [],
"text": "Some iterator types require that you specify a sequence number in addition to the type; for example:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-shard-iterators",
"main_header": "Using Shard Iterators",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-shard-iterators",
"text": "Using Shard Iterators"
},
"links": [],
"text": "After you obtain a record using getRecords, you can get the sequence number for the record by calling the record's getSequenceNumber method.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-shard-iterators",
"main_header": "Using Shard Iterators",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-shard-iterators",
"text": "Using Shard Iterators"
},
"links": [],
"text": "In addition, the code that adds records to the data stream can get the sequence number for an added record by calling getSequenceNumber on the result of putRecord.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-shard-iterators",
"main_header": "Using Shard Iterators",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-shard-iterators",
"text": "Using Shard Iterators"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecord-example",
"title": "PutRecord Example"
}
],
"text": "You can use sequence numbers to guarantee strictly increasing ordering of records. For more information, see the code example in PutRecord Example.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-shard-iterators",
"main_header": "Using Shard Iterators",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-getrecords",
"text": "Using GetRecords"
},
"links": [],
"text": "After you obtain the shard iterator, instantiate a GetRecordsRequest object. Specify the iterator for the request using the setShardIterator method.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-getrecords",
"main_header": "Using GetRecords",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-getrecords",
"text": "Using GetRecords"
},
"links": [],
"text": "Optionally, you can also set the number of records to retrieve using the setLimit method. The number of records returned by getRecords is always equal to or less than this limit. If you do not specify this limit, getRecords returns 10 MB of retrieved records. The sample code below sets this limit to 25 records.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-getrecords",
"main_header": "Using GetRecords",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-getrecords",
"text": "Using GetRecords"
},
"links": [],
"text": "If no records are returned, that means no data records are currently available from this shard at the sequence number referenced by the shard iterator. In this situation, your application should wait for an amount of time that's appropriate for the data sources for the stream, but at least 1 second. Then try to get data from the shard again using the shard iterator returned by the preceding call to getRecords. There is about a 3-second latency from the time that a record is added to the stream to the time that it is available from getRecords.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-getrecords",
"main_header": "Using GetRecords",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-getrecords",
"text": "Using GetRecords"
},
"links": [],
"text": "Pass the getRecordsRequest to the getRecords method, and capture the returned value as a getRecordsResult object. To get the data records, call the getRecords method on the getRecordsResult object.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-getrecords",
"main_header": "Using GetRecords",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-getrecords",
"text": "Using GetRecords"
},
"links": [],
"text": "To prepare for another call to getRecords, obtain the next shard iterator from getRecordsResult.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-getrecords",
"main_header": "Using GetRecords",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-getrecords",
"text": "Using GetRecords"
},
"links": [],
"text": "For best results, sleep for at least 1 second (1,000 milliseconds) between calls to getRecords to avoid exceeding the limit on getRecords frequency.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-getrecords",
"main_header": "Using GetRecords",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-getrecords",
"text": "Using GetRecords"
},
"links": [],
"text": "Typically, you should call getRecords in a loop, even when you're retrieving a single record in a test scenario. A single call to getRecords might return an empty record list, even when the shard contains more records at later sequence numbers. When this occurs, the NextShardIterator returned along with the empty record list references a later sequence number in the shard, and successive getRecords calls eventually returns the records. The following sample demonstrates the use of a loop.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-getrecords",
"main_header": "Using GetRecords",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-getrecords",
"text": "Using GetRecords"
},
"links": [],
"text": "Example: getRecords",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-getrecords",
"main_header": "Using GetRecords",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-getrecords",
"text": "Using GetRecords"
},
"links": [],
"text": "The following code example reflects the getRecords tips in this section, including making calls in a loop.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-getrecords",
"main_header": "Using GetRecords",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-getrecords",
"text": "Using GetRecords"
},
"links": [],
"text": "If you are using the Kinesis Client Library, it might make multiple calls before returning data. This behavior is by design and does not indicate a problem with the KCL or your data.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-getrecords",
"main_header": "Using GetRecords",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-reshard",
"text": "Adapting to a Reshard"
},
"links": [],
"text": "If getRecordsResult.getNextShardIterator returns null, it indicates that a shard split or merge has occurred that involved this shard. This shard is now in a CLOSED state and you have read all available data records from this shard.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-reshard",
"main_header": "Adapting to a Reshard",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-reshard",
"text": "Adapting to a Reshard"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ChildShard.html",
"title": "ChildShard"
}
],
"text": "In this scenario, you can use getRecordsResult.childShards to learn about the new child shards of the shard that is being processed that were created by the split or merge. For more information, see ChildShard.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-reshard",
"main_header": "Adapting to a Reshard",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-reshard",
"text": "Adapting to a Reshard"
},
"links": [],
"text": "In the case of a split, the two new shards both have parentShardId equal to the shard ID of the shard that you were processing previously. The value of adjacentParentShardId for both of these shards is null.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-reshard",
"main_header": "Adapting to a Reshard",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-reshard",
"text": "Adapting to a Reshard"
},
"links": [],
"text": "In the case of a merge, the single new shard created by the merge has parentShardId equal to shard ID of one of the parent shards and adjacentParentShardId equal to the shard ID of the other parent shard. Your application has already read all the data from one of these shards. This is the shard for which getRecordsResult.getNextShardIterator returned null. If the order of the data is important to your application, ensure that it also reads all the data from the other parent shard before reading any new data from the child shard created by the merge.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-reshard",
"main_header": "Adapting to a Reshard",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-reshard",
"text": "Adapting to a Reshard"
},
"links": [],
"text": "If you are using multiple processors to retrieve data from the stream (say, one processor per shard), and a shard split or merge occurs, adjust the number of processors up or down to adapt to the change in the number of shards.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-reshard",
"main_header": "Adapting to a Reshard",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-get-data-reshard",
"text": "Adapting to a Reshard"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
],
"text": "For more information about resharding, including a discussion of shards states\u00e2\u0080\u0094such as CLOSED\u00e2\u0080\u0094see Resharding a Stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-reshard",
"main_header": "Adapting to a Reshard",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-glue-schema-registry",
"text": "Interacting with Data Using the AWS Glue Schema Registry"
},
"links": [
{
"url": "https://docs.aws.amazon.com/glue/latest/dg/schema-registry.html",
"title": "AWS Glue Schema Registry"
}
],
"text": "You can integrate your Kinesis data streams with the AWS Glue schema registry. The AWS Glue schema registry allows you to centrally discover, control, and evolve schemas, while ensuring data produced is continuously validated by a registered schema. A schema defines the structure and format of a data record. A schema is a versioned specification for reliable data publication, consumption, or storage. The AWS Glue Schema Registry enables you to improve end-to-end data quality and data governance within your streaming applications. For more information, see AWS Glue Schema Registry. One of the ways to set up this integration is through the GetRecords Kinesis Data Streams API available in the AWS Java SDK.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-glue-schema-registry",
"main_header": "Interacting with Data Using the AWS Glue Schema Registry",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#developing-consumers-with-sdk",
"text": "Developing Custom Consumers with Shared Throughput Using the AWS SDK for Java"
},
"h2": {
"urllink": "#kinesis-using-sdk-java-glue-schema-registry",
"text": "Interacting with Data Using the AWS Glue Schema Registry"
},
"links": [
{
"url": "https://docs.aws.amazon.com/glue/latest/dg/schema-registry-integrations.html#schema-registry-integrations-kds",
"title": "Use Case: Integrating Amazon Kinesis Data Streams with the AWS Glue Schema Registry"
}
],
"text": "For detailed instructions on how to set up integration of Kinesis Data Streams with Schema Registry using the GetRecords Kinesis Data Streams APIs, see the \"Interacting with Data Using the Kinesis Data Streams APIs\" section in Use Case: Integrating Amazon Kinesis Data Streams with the AWS Glue Schema Registry.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-glue-schema-registry",
"main_header": "Interacting with Data Using the AWS Glue Schema Registry",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-consumers.html",
"title": "Developing Custom Consumers with Shared Throughput"
}
]
},
{
"h1": {
"urllink": "#enhanced-consumers",
"text": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
"links": [],
"text": "In Amazon Kinesis Data Streams, you can build consumers that use a feature called enhanced fan-out. This feature enables consumers to receive records from a stream with throughput of up to 2 MB of data per second per shard. This throughput is dedicated, which means that consumers that use enhanced fan-out don't have to contend with other consumers that are receiving data from the stream. Kinesis Data Streams pushes data records from the stream to consumers that use enhanced fan-out. Therefore, these consumers don't need to poll for data.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html#enhanced-consumers",
"main_header": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#enhanced-consumers",
"text": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
"links": [],
"text": "The following diagram shows the enhanced fan-out architecture. If you use version 2.0 or later of the Amazon Kinesis Client Library (KCL) to build a consumer, the KCL sets up the consumer to use enhanced fan-out to receive data from all the shards of the stream. If you use the API to build a consumer that uses enhanced fan-out, then you can subscribe to individual shards.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html#enhanced-consumers",
"main_header": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#enhanced-consumers",
"text": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
"links": [],
"text": "The diagram shows the following:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html#enhanced-consumers",
"main_header": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-kcl",
"text": "Developing Enhanced Fan-Out Consumers with KCL 2.x"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
],
"text": "Consumers that use enhanced fan-out in Amazon Kinesis Data Streams can receive records from a data stream with dedicated throughput of up to 2 MB of data per second per shard. This type of consumer doesn't have to contend with other consumers that are receiving data from the stream. For more information, see Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl.html#building-enhanced-consumers-kcl",
"main_header": "Developing Enhanced Fan-Out Consumers with KCL 2.x",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-kcl",
"text": "Developing Enhanced Fan-Out Consumers with KCL 2.x"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl-v2.html",
"title": "Developing Consumers Using the Kinesis Client Library 2.0"
}
],
"text": "You can use version 2.0 or later of the Kinesis Client Library (KCL) to develop applications that use enhanced fan-out to receive data from streams. The KCL automatically subscribes your application to all the shards of a stream, and ensures that your consumer application can read with a throughput value of 2 MB/sec per shard. If you want to use the KCL without turning on enhanced fan-out, see Developing Consumers Using the Kinesis Client Library 2.0.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl.html#building-enhanced-consumers-kcl",
"main_header": "Developing Enhanced Fan-Out Consumers with KCL 2.x",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-kcl-java",
"text": "Developing Enhanced Fan-Out Consumers Using KCL 2.x in Java"
},
"links": [],
"text": "You can use version 2.0 or later of the Kinesis Client Library (KCL) to develop applications in Amazon Kinesis Data Streams to receive data from streams using enhanced fan-out. The following code shows an example implementation in Java of ProcessorFactory and RecordProcessor.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl-java.html#building-enhanced-consumers-kcl-java",
"main_header": "Developing Enhanced Fan-Out Consumers Using KCL 2.x in Java",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl.html",
"title": "Developing Enhanced Fan-Out Consumers with KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-kcl-java",
"text": "Developing Enhanced Fan-Out Consumers Using KCL 2.x in Java"
},
"links": [],
"text": "It is recommended that you use KinesisClientUtil to create KinesisAsyncClient and to configure maxConcurrency in KinesisAsyncClient.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl-java.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl-java.html#building-enhanced-consumers-kcl-java",
"main_header": "Developing Enhanced Fan-Out Consumers Using KCL 2.x in Java",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-kcl.html",
"title": "Developing Enhanced Fan-Out Consumers with KCL 2.x"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-api",
"text": "Developing Enhanced Fan-Out Consumers with the Kinesis Data Streams API"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
],
"text": "Enhanced fan-out is an Amazon Kinesis Data Streams feature that enables consumers to receive records from a data stream with dedicated throughput of up to 2 MB of data per second per shard. A consumer that uses enhanced fan-out doesn't have to contend with other consumers that are receiving data from the stream. For more information, see Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-api.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-api.html#building-enhanced-consumers-api",
"main_header": "Developing Enhanced Fan-Out Consumers with the Kinesis Data Streams API",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-api",
"text": "Developing Enhanced Fan-Out Consumers with the Kinesis Data Streams API"
},
"links": [],
"text": "You can use API operations to build a consumer that uses enhanced fan-out in Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-api.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-api.html#building-enhanced-consumers-api",
"main_header": "Developing Enhanced Fan-Out Consumers with the Kinesis Data Streams API",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-api",
"text": "Developing Enhanced Fan-Out Consumers with the Kinesis Data Streams API"
},
"links": [],
"text": "The following code is an example of how you can subscribe your consumer to a shard, renew the subscription periodically, and handle the events.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-api.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-api.html#building-enhanced-consumers-api",
"main_header": "Developing Enhanced Fan-Out Consumers with the Kinesis Data Streams API",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-api",
"text": "Developing Enhanced Fan-Out Consumers with the Kinesis Data Streams API"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ChildShard.html",
"title": "ChildShard"
}
],
"text": "If event.ContinuationSequenceNumber returns null, it indicates that a shard split or merge has occurred that involved this shard. This shard is now in a CLOSED state, and you have read all available data records from this shard. In this scenario, per example above, you can use event.childShards to learn about the new child shards of the shard that is being processed that were created by the split or merge. For more information, see ChildShard.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-api.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-api.html#building-enhanced-consumers-api",
"main_header": "Developing Enhanced Fan-Out Consumers with the Kinesis Data Streams API",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-glue-schema-registry",
"text": "Interacting with Data Using the AWS Glue Schema Registry"
},
"links": [
{
"url": "https://docs.aws.amazon.com/glue/latest/dg/schema-registry.html",
"title": "AWS Glue Schema Registry"
}
],
"text": "You can integrate your Kinesis data streams with the AWS Glue schema registry. The AWS Glue schema registry allows you to centrally discover, control, and evolve schemas, while ensuring data produced is continuously validated by a registered schema. A schema defines the structure and format of a data record. A schema is a versioned specification for reliable data publication, consumption, or storage. The AWS Glue Schema Registry enables you to improve end-to-end data quality and data governance within your streaming applications. For more information, see AWS Glue Schema Registry. One of the ways to set up this integration is through the GetRecords Kinesis Data Streams API available in the AWS Java SDK.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-glue-schema-registry.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-glue-schema-registry.html#building-enhanced-consumers-glue-schema-registry",
"main_header": "Interacting with Data Using the AWS Glue Schema Registry",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#building-enhanced-consumers-glue-schema-registry",
"text": "Interacting with Data Using the AWS Glue Schema Registry"
},
"links": [
{
"url": "https://docs.aws.amazon.com/glue/latest/dg/schema-registry-integrations.html#schema-registry-integrations-kds",
"title": "Use Case: Integrating Amazon Kinesis Data Streams with the AWS Glue Schema Registry"
}
],
"text": "For detailed instructions on how to set up integration of Kinesis Data Streams with Schema Registry using the GetRecords Kinesis Data Streams APIs, see the \"Interacting with Data Using the Kinesis Data Streams APIs\" section in Use Case: Integrating Amazon Kinesis Data Streams with the AWS Glue Schema Registry.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-glue-schema-registry.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-glue-schema-registry.html#building-enhanced-consumers-glue-schema-registry",
"main_header": "Interacting with Data Using the AWS Glue Schema Registry",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#building-enhanced-consumers-console",
"text": "Managing Enhanced Fan-Out Consumers with the AWS Management Console"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
],
"text": "Consumers that use enhanced fan-out in Amazon Kinesis Data Streams can receive records from a data stream with dedicated throughput of up to 2 MB of data per second per shard. For more information, see Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-console.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-console.html#building-enhanced-consumers-console",
"main_header": "Managing Enhanced Fan-Out Consumers with the AWS Management Console",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#building-enhanced-consumers-console",
"text": "Managing Enhanced Fan-Out Consumers with the AWS Management Console"
},
"links": [],
"text": "You can use the AWS Management Console to see a list of all the consumers that are registered to use enhanced fan-out with a specific stream. For each such consumer, you can see details such as ARN, status, and creation date, in addition to the monitoring metrics and the tags associated with the consumer.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-console.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/building-enhanced-consumers-console.html#building-enhanced-consumers-console",
"main_header": "Managing Enhanced Fan-Out Consumers with the AWS Management Console",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/enhanced-consumers.html",
"title": "Developing Custom Consumers with Dedicated Throughput (Enhanced Fan-Out)"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"links": [],
"text": "This topic explains the differences between versions 1.x and 2.x of the Kinesis Client Library (KCL). It also shows you how to migrate your consumer from version 1.x to version 2.x of the KCL. After you migrate your client, it will start processing records from the last checkpointed location.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#kcl-migration",
"main_header": "Migrating Consumers from KCL 1.x to KCL 2.x",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"links": [],
"text": "Version 2.0 of the KCL introduces the following interface changes:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#kcl-migration",
"main_header": "Migrating Consumers from KCL 1.x to KCL 2.x",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#recrod-processor-migration",
"text": "Migrating the Record Processor"
},
"links": [],
"text": "The following example shows a record processor implemented for KCL 1.x:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#recrod-processor-migration",
"main_header": "Migrating the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#recrod-processor-migration",
"text": "Migrating the Record Processor"
},
"links": [],
"text": "The following is the updated version of the record processor class.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#recrod-processor-migration",
"main_header": "Migrating the Record Processor",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#recrod-processor-factory-migration",
"text": "Migrating the Record Processor Factory"
},
"links": [],
"text": "The record processor factory is responsible for creating record processors when a lease is acquired. The following is an example of a KCL 1.x factory.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#recrod-processor-factory-migration",
"main_header": "Migrating the Record Processor Factory",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#recrod-processor-factory-migration",
"text": "Migrating the Record Processor Factory"
},
"links": [],
"text": "The following is an example of the record processor factory in 2.0:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#recrod-processor-factory-migration",
"main_header": "Migrating the Record Processor Factory",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#worker-migration",
"text": "Migrating the Worker"
},
"links": [],
"text": "In version 2.0 of the KCL, a new class, called Scheduler, replaces the Worker class. The following is an example of a KCL 1.x worker.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#worker-migration",
"main_header": "Migrating the Worker",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#client-configuration",
"text": "Configuring the Amazon Kinesis Client"
},
"links": [],
"text": "With the 2.0 release of the Kinesis Client Library, the configuration of the client moved from a single configuration class (KinesisClientLibConfiguration) to six configuration classes. The following table describes the migration.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#client-configuration",
"main_header": "Configuring the Amazon Kinesis Client",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#idle-time-removal",
"text": "Idle Time Removal"
},
"links": [],
"text": "In the 1.x version of the KCL, the idleTimeBetweenReadsInMillis corresponded to two quantities:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#idle-time-removal",
"main_header": "Idle Time Removal",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kcl-migration",
"text": "Migrating Consumers from KCL 1.x to KCL 2.x"
},
"h2": {
"urllink": "#client-configuration-removals",
"text": "Client Configuration Removals"
},
"links": [],
"text": "In version 2.0, the KCL no longer creates clients. It depends on the user to supply a valid client. With this change, all configuration parameters that controlled client creation have been removed. If you need these parameters, you can set them on the clients before providing the clients to ConfigsBuilder.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kcl-migration.html#client-configuration-removals",
"main_header": "Client Configuration Removals",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#w3aac23c27b5",
"text": "Some Kinesis Data Streams Records are Skipped When Using the Kinesis Client Library"
},
"links": [],
"text": "The most common cause of skipped records is an unhandled exception thrown from processRecords. The Kinesis Client Library (KCL) relies on your processRecords code to handle any exceptions that arise from processing the data records. Any exception thrown from processRecords is absorbed by the KCL. To avoid infinite retries on a recurring failure, the KCL does not resend the batch of records processed at the time of the exception. The KCL then calls processRecords for the next batch of data records without restarting the record processor. This effectively results in consumer applications observing skipped records. To prevent skipped records, handle all exceptions within processRecords appropriately.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#w3aac23c27b5",
"main_header": "Some Kinesis Data Streams Records are Skipped When Using the Kinesis Client Library",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#records-belonging-to-the-same-shard",
"text": "Records Belonging to the Same Shard are Processed by Different Record Processors at the Same Time"
},
"links": [],
"text": "For any running Kinesis Client Library (KCL) application, a shard only has one owner. However, multiple record processors may temporarily process the same shard. In the case of a worker instance that loses network connectivity, the KCL assumes that the unreachable worker is no longer processing records, after the failover time expires, and directs other worker instances to take over. For a brief period, new record processors and record processors from the unreachable worker may process data from the same shard.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#records-belonging-to-the-same-shard",
"main_header": "Records Belonging to the Same Shard are Processed by Different Record Processors at the Same Time",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#records-belonging-to-the-same-shard",
"text": "Records Belonging to the Same Shard are Processed by Different Record Processors at the Same Time"
},
"links": [],
"text": "You should set a failover time that is appropriate for your application. For low-latency applications, the 10-second default may represent the maximum time you want to wait. However, in cases where you expect connectivity issues such as making calls across geographical areas where connectivity could be lost more frequently, this number may be too low.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#records-belonging-to-the-same-shard",
"main_header": "Records Belonging to the Same Shard are Processed by Different Record Processors at the Same Time",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#records-belonging-to-the-same-shard",
"text": "Records Belonging to the Same Shard are Processed by Different Record Processors at the Same Time"
},
"links": [],
"text": "Your application should anticipate and handle this scenario, especially because network connectivity is usually restored to the previously unreachable worker. If a record processor has its shards taken by another record processor, it must handle the following two cases to perform graceful shutdown:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#records-belonging-to-the-same-shard",
"main_header": "Records Belonging to the Same Shard are Processed by Different Record Processors at the Same Time",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#records-belonging-to-the-same-shard",
"text": "Records Belonging to the Same Shard are Processed by Different Record Processors at the Same Time"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"title": "Handling Duplicate Records"
}
],
"text": "For more information, see Handling Duplicate Records.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#records-belonging-to-the-same-shard",
"main_header": "Records Belonging to the Same Shard are Processed by Different Record Processors at the Same Time",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#consumer-app-reading-slower",
"text": "Consumer Application is Reading at a Slower Rate Than Expected"
},
"links": [],
"text": "The most common reasons for read throughput being slower than expected are as follows:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#consumer-app-reading-slower",
"main_header": "Consumer Application is Reading at a Slower Rate Than Expected",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#consumer-app-reading-slower",
"text": "Consumer Application is Reading at a Slower Rate Than Expected"
},
"links": [],
"text": "If you have only one consumer application, it is always possible to read at least two times faster than the put rate. That\u00e2\u0080\u0099s because you can write up to 1,000 records per second for writes, up to a maximum total data write rate of 1 MB per second (including partition keys). Each open shard can support up to 5 transactions per second for reads, up to a maximum total data read rate of 2 MB per second. Note that each read (GetRecords call) gets a batch of records. The size of the data returned by GetRecords varies depending on the utilization of the shard. The maximum size of data that GetRecords can return is 10 MB. If a call returns that limit, subsequent calls made within the next 5 seconds throw ProvisionedThroughputExceededException.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#consumer-app-reading-slower",
"main_header": "Consumer Application is Reading at a Slower Rate Than Expected",
"images": [],
"container_type": "p",
"children_tags": [
"b",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#getrecords-returns-empty",
"text": "GetRecords Returns Empty Records Array Even When There is Data in the Stream"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetRecords.html",
"title": "GetRecords"
}
],
"text": "Consuming, or getting records is a pull model. Developers are expected to call GetRecords in a continuous loop with no back-offs. Every call to GetRecords also returns a ShardIterator value, which must be used in the next iteration of the loop.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#getrecords-returns-empty",
"main_header": "GetRecords Returns Empty Records Array Even When There is Data in the Stream",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"b",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#getrecords-returns-empty",
"text": "GetRecords Returns Empty Records Array Even When There is Data in the Stream"
},
"links": [],
"text": "The GetRecords operation does not block. Instead, it returns immediately; with either relevant data records or with an empty Records element. An empty Records element is returned under two conditions:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#getrecords-returns-empty",
"main_header": "GetRecords Returns Empty Records Array Even When There is Data in the Stream",
"images": [],
"container_type": "p",
"children_tags": [
"b",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#getrecords-returns-empty",
"text": "GetRecords Returns Empty Records Array Even When There is Data in the Stream"
},
"links": [],
"text": "The latter condition is subtle, but is a necessary design tradeoff to avoid unbounded seek time (latency) when retrieving records. Thus, the stream-consuming application should loop and call GetRecords, handling empty records as a matter of course.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#getrecords-returns-empty",
"main_header": "GetRecords Returns Empty Records Array Even When There is Data in the Stream",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#getrecords-returns-empty",
"text": "GetRecords Returns Empty Records Array Even When There is Data in the Stream"
},
"links": [],
"text": "In a production scenario, the only time the continuous loop should be exited is when the NextShardIterator value is NULL. When NextShardIterator is NULL, it means that the current shard has been closed and the ShardIteratorvalue would otherwise point past the last record. If the consuming application never calls SplitShard or MergeShards, the shard remains open and the calls to GetRecords never return a NextShardIterator value that is NULL.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#getrecords-returns-empty",
"main_header": "GetRecords Returns Empty Records Array Even When There is Data in the Stream",
"images": [],
"container_type": "p",
"children_tags": [
"b",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#getrecords-returns-empty",
"text": "GetRecords Returns Empty Records Array Even When There is Data in the Stream"
},
"links": [],
"text": "If you use the Kinesis Client Library (KCL), the above consumption pattern is abstracted for you. This includes automatic handling of a set of shards that dynamically change. With the KCL, the developer only supplies the logic to process incoming records. This is possible because the library makes continuous calls to GetRecords for you.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#getrecords-returns-empty",
"main_header": "GetRecords Returns Empty Records Array Even When There is Data in the Stream",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#shard-iterator-expires-unexpectedly",
"text": "Shard Iterator Expires Unexpectedly"
},
"links": [],
"text": "A new shard iterator is returned by every GetRecords\u00c2\u00a0request (as NextShardIterator), which you then use in the next GetRecords request (as ShardIterator). Typically, this shard iterator does not expire before you use it. However, you may find that shard iterators expire because you have not called GetRecords for more than 5 minutes, or because you've performed a restart of your consumer application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#shard-iterator-expires-unexpectedly",
"main_header": "Shard Iterator Expires Unexpectedly",
"images": [],
"container_type": "p",
"children_tags": [
"b",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#shard-iterator-expires-unexpectedly",
"text": "Shard Iterator Expires Unexpectedly"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable",
"title": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
}
],
"text": "If the shard iterator expires immediately, before you can use it, this might indicate that the DynamoDB table used by Kinesis does not have enough capacity to store the lease data. This situation is more likely to happen if you have a large number of shards. To solve this problem, increase the write capacity assigned to the shard table. For more information, see Using a Lease Table to Track the Shards Processed by the KCL Consumer Application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#shard-iterator-expires-unexpectedly",
"main_header": "Shard Iterator Expires Unexpectedly",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#record-processing-falls-behind",
"text": "Consumer Record Processing Falling Behind"
},
"links": [],
"text": "For most use cases, consumer applications are reading the latest data from the stream. In certain circumstances, consumer reads may fall behind, which may not be desired. After you identify how far behind your consumers are reading, look at the most common reasons why consumers fall behind.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#record-processing-falls-behind",
"main_header": "Consumer Record Processing Falling Behind",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#record-processing-falls-behind",
"text": "Consumer Record Processing Falling Behind"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"title": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"title": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
}
],
"text": "Start with the GetRecords.IteratorAgeMilliseconds metric, which tracks the read position across all shards and consumers in the stream. Note that if an iterator's age passes 50% of the retention period (by default, 24 hours, configurable up to 365 days), there is risk for data loss due to record expiration. A quick stopgap solution is to increase the retention period. This stops the loss of important data while you troubleshoot the issue further. For more information, see Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch. Next, identify how far behind your consumer application is reading from each shard using a custom CloudWatch metric emitted by the Kinesis Client Library (KCL), MillisBehindLatest. For more information, see Monitoring the Kinesis Client Library with Amazon CloudWatch.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#record-processing-falls-behind",
"main_header": "Consumer Record Processing Falling Behind",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#record-processing-falls-behind",
"text": "Consumer Record Processing Falling Behind"
},
"links": [],
"text": "Here are the most common reasons consumers can fall behind:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#record-processing-falls-behind",
"main_header": "Consumer Record Processing Falling Behind",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#troubleshooting-consumers",
"text": "Troubleshooting Kinesis Data Streams Consumers"
},
"h2": {
"urllink": "#unauthorized-kms-consumer",
"text": "Unauthorized KMS master key permission error"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html",
"title": "Using Key Policies in AWS KMS"
},
{
"url": "https://docs.aws.amazon.com/kms/latest/developerguide/iam-policies.html",
"title": "Using IAM Policies with AWS KMS"
}
],
"text": "This error occurs when a consumer application reads from an encrypted stream without permissions on the KMS master key. To assign permissions to an application to access a KMS key, see Using Key Policies in AWS KMS and Using IAM Policies with AWS KMS.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/troubleshooting-consumers.html#unauthorized-kms-consumer",
"main_header": "Unauthorized KMS master key permission error",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#advanced-consumers",
"text": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
},
"links": [],
"text": "Learn how to optimize your Amazon Kinesis Data Streams consumer.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html#advanced-consumers",
"main_header": "Advanced Topics for Amazon Kinesis Data Streams Consumers",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#kinesis-low-latency",
"text": "Low-Latency Processing"
},
"links": [],
"text": "Propagation delay is defined as the end-to-end latency from the moment a record is written to the stream until it is read by a consumer application. This delay varies depending upon a number of factors, but it is primarily affected by the polling interval of consumer applications.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html#kinesis-low-latency",
"main_header": "Low-Latency Processing",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-low-latency",
"text": "Low-Latency Processing"
},
"links": [],
"text": "For most applications, we recommend polling each shard one time per second per application. This enables you to have multiple consumer applications processing a stream concurrently without hitting Amazon Kinesis Data Streams limits of 5 GetRecords calls per second. Additionally, processing larger batches of data tends to be more efficient at reducing network and other downstream latencies in your application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html#kinesis-low-latency",
"main_header": "Low-Latency Processing",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-low-latency",
"text": "Low-Latency Processing"
},
"links": [],
"text": "The KCL defaults are set to follow the best practice of polling every 1 second. This default results in average propagation delays that are typically below 1 second.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html#kinesis-low-latency",
"main_header": "Low-Latency Processing",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-low-latency",
"text": "Low-Latency Processing"
},
"links": [],
"text": "Kinesis Data Streams records are available to be read immediately after they are written. There are some use cases that need to take advantage of this and require consuming data from the stream as soon as it is available. You can significantly reduce the propagation delay by overriding the KCL default settings to poll more frequently, as shown in the following examples.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html#kinesis-low-latency",
"main_header": "Low-Latency Processing",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-low-latency",
"text": "Low-Latency Processing"
},
"links": [],
"text": "Java KCL configuration code:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html#kinesis-low-latency",
"main_header": "Low-Latency Processing",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-low-latency",
"text": "Low-Latency Processing"
},
"links": [],
"text": "Property file setting for Python and Ruby KCL:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-low-latency.html#kinesis-low-latency",
"main_header": "Low-Latency Processing",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-deaggregation",
"text": "Using AWS Lambda with the Kinesis Producer Library"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-kpl.html",
"title": "Kinesis Producer Library"
},
{
"url": "https://github.com/awslabs/kinesis-deaggregation",
"title": "Kinesis Producer Library Deaggregation Modules for AWS Lambda"
},
{
"url": "https://github.com/awslabs/amazon-kinesis-client/blob/master/amazon-kinesis-client-multilang/src/main/java/software/amazon/kinesis/multilang/package-info.java",
"title": "multi-lang KCL application"
}
],
"text": "The Kinesis Producer Library (KPL) aggregates small user-formatted records into larger records up to 1 MB to make better use of Amazon Kinesis Data Streams throughput. While the KCL for Java supports deaggregating these records, you need to use a special module to deaggregate records when using AWS Lambda as the consumer of your streams. You can obtain the necessary project code and instructions from GitHub at Kinesis Producer Library Deaggregation Modules for AWS Lambda. The components in this project give you the ability to process KPL serialized data within AWS Lambda, in Java, Node.js and Python. These components can also be used as part of a multi-lang KCL application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-deaggregation.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-deaggregation.html#kinesis-record-deaggregation",
"main_header": "Using AWS Lambda with the Kinesis Producer Library",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-scaling",
"text": "Resharding, Scaling, and Parallel Processing"
},
"links": [],
"text": "Resharding enables you to increase or decrease the number of shards in a stream in order to adapt to changes in the rate of data flowing through the stream. Resharding is typically performed by an administrative application that monitors shard data-handling metrics. Although the KCL itself doesn't initiate resharding operations, it is designed to adapt to changes in the number of shards that result from resharding.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html#kinesis-record-processor-scaling",
"main_header": "Resharding, Scaling, and Parallel Processing",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-scaling",
"text": "Resharding, Scaling, and Parallel Processing"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/shared-throughput-kcl-consumers.html#shared-throughput-kcl-consumers-leasetable",
"title": "Using a Lease Table to Track the Shards Processed by the KCL Consumer Application"
}
],
"text": "As noted in Using a Lease Table to Track the Shards Processed by the KCL Consumer Application, the KCL tracks the shards in the stream using an Amazon DynamoDB table. When new shards are created as a result of resharding, the KCL discovers the new shards and populates new rows in the table. The workers automatically discover the new shards and create processors to handle the data from them. The KCL also distributes the shards in the stream across all the available workers and record processors.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html#kinesis-record-processor-scaling",
"main_header": "Resharding, Scaling, and Parallel Processing",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-scaling",
"text": "Resharding, Scaling, and Parallel Processing"
},
"links": [],
"text": "The KCL ensures that any data that existed in shards prior to the resharding is processed first. After that data has been processed, data from the new shards is sent to record processors. In this way, the KCL preserves the order in which data records were added to the stream for a particular partition key.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html#kinesis-record-processor-scaling",
"main_header": "Resharding, Scaling, and Parallel Processing",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-scaling",
"text": "Resharding, Scaling, and Parallel Processing"
},
"h2": {
"urllink": "#kinesis-record-processor-scaling-example",
"text": "Example: Resharding, Scaling, and Parallel Processing"
},
"links": [],
"text": "The following example illustrates how the KCL helps you handle scaling and resharding:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html#kinesis-record-processor-scaling-example",
"main_header": "Example: Resharding, Scaling, and Parallel Processing",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-scaling",
"text": "Resharding, Scaling, and Parallel Processing"
},
"h2": {
"urllink": "#kinesis-record-processor-scaling-example",
"text": "Example: Resharding, Scaling, and Parallel Processing"
},
"links": [],
"text": "Typically, when you use the KCL, you should ensure that the number of instances does not exceed the number of shards (except for failure standby purposes). Each shard is processed by exactly one KCL worker and has exactly one corresponding record processor, so you never need multiple instances to process one shard. However, one worker can process any number of shards, so it's fine if the number of shards exceeds the number of instances.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html#kinesis-record-processor-scaling-example",
"main_header": "Example: Resharding, Scaling, and Parallel Processing",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-scaling",
"text": "Resharding, Scaling, and Parallel Processing"
},
"h2": {
"urllink": "#kinesis-record-processor-scaling-example",
"text": "Example: Resharding, Scaling, and Parallel Processing"
},
"links": [],
"text": "To scale up processing in your application, you should test a combination of these approaches:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html#kinesis-record-processor-scaling-example",
"main_header": "Example: Resharding, Scaling, and Parallel Processing",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-scaling",
"text": "Resharding, Scaling, and Parallel Processing"
},
"h2": {
"urllink": "#kinesis-record-processor-scaling-example",
"text": "Example: Resharding, Scaling, and Parallel Processing"
},
"links": [
{
"url": "https://docs.aws.amazon.com/autoscaling/ec2/userguide/",
"title": "Amazon EC2 Auto Scaling User Guide"
}
],
"text": "Note that you can use Auto Scaling to automatically scale your instances based on appropriate metrics. For more information, see the Amazon EC2 Auto Scaling User Guide.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html#kinesis-record-processor-scaling-example",
"main_header": "Example: Resharding, Scaling, and Parallel Processing",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-scaling",
"text": "Resharding, Scaling, and Parallel Processing"
},
"h2": {
"urllink": "#kinesis-record-processor-scaling-example",
"text": "Example: Resharding, Scaling, and Parallel Processing"
},
"links": [],
"text": "When resharding increases the number of shards in the stream, the corresponding increase in the number of record processors increases the load on the EC2 instances that are hosting them. If the instances are part of an Auto Scaling group, and the load increases sufficiently, the Auto Scaling group adds more instances to handle the increased load. You should configure your instances to launch your Amazon Kinesis Data Streams application at startup, so that additional workers and record processors become active on the new instance right away.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html#kinesis-record-processor-scaling-example",
"main_header": "Example: Resharding, Scaling, and Parallel Processing",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-scaling",
"text": "Resharding, Scaling, and Parallel Processing"
},
"h2": {
"urllink": "#kinesis-record-processor-scaling-example",
"text": "Example: Resharding, Scaling, and Parallel Processing"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-resharding.html",
"title": "Resharding a Stream"
}
],
"text": "For more information about resharding, see Resharding a Stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html#kinesis-record-processor-scaling-example",
"main_header": "Example: Resharding, Scaling, and Parallel Processing",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"links": [],
"text": "There are two primary reasons why records may be delivered more than one time to your Amazon Kinesis Data Streams application: producer retries and consumer retries. Your application must anticipate and appropriately handle processing individual records multiple times.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates",
"main_header": "Handling Duplicate Records",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-producer",
"text": "Producer Retries"
},
"links": [],
"text": "Consider a producer that experiences a network-related timeout after it makes a call to PutRecord, but before it can receive an acknowledgement from Amazon Kinesis Data Streams. The producer cannot be sure if the record was delivered to Kinesis Data Streams. Assuming that every record is important to the application, the producer would have been written to retry the call with the same data. If both PutRecord calls on that same data were successfully committed to Kinesis Data Streams, then there will be two Kinesis Data Streams records. Although the two records have identical data, they also have unique sequence numbers. Applications that need strict guarantees should embed a primary key within the record to remove duplicates later when processing. Note that the number of duplicates due to producer retries is usually low compared to the number of duplicates due to consumer retries.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-producer",
"main_header": "Producer Retries",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-consumer",
"text": "Consumer Retries"
},
"links": [],
"text": "Consumer (data processing application) retries happen when record processors restart. Record processors for the same shard restart in the following cases:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-consumer",
"main_header": "Consumer Retries",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-consumer",
"text": "Consumer Retries"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-scaling.html",
"title": "Resharding, Scaling, and Parallel Processing"
}
],
"text": "In all these cases, the shards-to-worker-to-record-processor mapping is continuously updated to load balance processing. Shard processors that were migrated to other instances restart processing records from the last checkpoint. This results in duplicated record processing as shown in the example below. For more information about load-balancing, see Resharding, Scaling, and Parallel Processing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-consumer",
"main_header": "Consumer Retries",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-consumer",
"text": "Consumer Retries"
},
"h3": {
"urllink": "#kinesis-record-processor-duplicates-consumer-example",
"text": "Example: Consumer Retries Resulting in Redelivered Records"
},
"links": [],
"text": "In this example, you have an application that continuously reads records from a stream, aggregates records into a local file, and uploads the file to Amazon S3. For simplicity, assume there is only 1 shard and 1 worker processing the shard. Consider the following example sequence of events, assuming that the last checkpoint was at record number 10000:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-consumer-example",
"main_header": "Example: Consumer Retries Resulting in Redelivered Records",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-consumer",
"text": "Consumer Retries"
},
"h3": {
"urllink": "#kinesis-record-processor-duplicates-consumer-example",
"text": "Example: Consumer Retries Resulting in Redelivered Records"
},
"links": [],
"text": "Thus, records 10001-20000 are consumed more than one time.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-consumer-example",
"main_header": "Example: Consumer Retries Resulting in Redelivered Records",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-consumer",
"text": "Consumer Retries"
},
"h3": {
"urllink": "#kinesis-record-processor-duplicates-consumer-resilience",
"text": "Being Resilient to Consumer Retries"
},
"links": [
{
"url": "https://www.opensearch.org/",
"title": "Opensearch"
}
],
"text": "Even though records may be processed more than one time, your application may want to present the side effects as if records were processed only one time (idempotent processing). Solutions to this problem vary in complexity and accuracy. If the destination of the final data can handle duplicates well, we recommend relying on the final destination to achieve idempotent processing. For example, with Opensearch you can use a combination of versioning and unique IDs to prevent duplicated processing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-consumer-resilience",
"main_header": "Being Resilient to Consumer Retries",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-consumer",
"text": "Consumer Retries"
},
"h3": {
"urllink": "#kinesis-record-processor-duplicates-consumer-resilience",
"text": "Being Resilient to Consumer Retries"
},
"links": [],
"text": "In the example application in the previous section, it continuously reads records from a stream, aggregates records into a local file, and uploads the file to Amazon S3. As illustrated, records 10001 -20000 are consumed more than one time resulting in multiple Amazon S3 files with the same data. One way to mitigate duplicates from this example is to ensure that step 3 uses the following scheme:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-consumer-resilience",
"main_header": "Being Resilient to Consumer Retries",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-consumer",
"text": "Consumer Retries"
},
"h3": {
"urllink": "#kinesis-record-processor-duplicates-consumer-resilience",
"text": "Being Resilient to Consumer Retries"
},
"links": [],
"text": "With this scheme, even if records are processed more than one time, the resulting Amazon S3 file has the same name and has the same data. The retries only result in writing the same data to the same file more than one time.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-consumer-resilience",
"main_header": "Being Resilient to Consumer Retries",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-duplicates",
"text": "Handling Duplicate Records"
},
"h2": {
"urllink": "#kinesis-record-processor-duplicates-consumer",
"text": "Consumer Retries"
},
"h3": {
"urllink": "#kinesis-record-processor-duplicates-consumer-resilience",
"text": "Being Resilient to Consumer Retries"
},
"links": [],
"text": "In the case of a reshard operation, the number of records left in the shard may be less than your desired fixed number needed. In this case, your shutdown() method has to flush the file to Amazon S3 and checkpoint on the last sequence number. The above scheme is compatible with reshard operations as well.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-duplicates.html#kinesis-record-processor-duplicates-consumer-resilience",
"main_header": "Being Resilient to Consumer Retries",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-additional-considerations",
"text": "Handling Startup, Shutdown, and Throttling"
},
"links": [],
"text": "Here are some additional considerations to incorporate into the design of your Amazon Kinesis Data Streams application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-additional-considerations",
"main_header": "Handling Startup, Shutdown, and Throttling",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-additional-considerations",
"text": "Handling Startup, Shutdown, and Throttling"
},
"h2": {
"urllink": "#kinesis-record-processor-producer-consumer-coordination",
"text": "Starting Up Data Producers and Data Consumers"
},
"links": [],
"text": "By default, the KCL begins reading records from the tip of the stream, which is the most recently added record. In this configuration, if a data-producing application adds records to the stream before any receiving record processors are running, the records are not read by the record processors after they start up.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-producer-consumer-coordination",
"main_header": "Starting Up Data Producers and Data Consumers",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-additional-considerations",
"text": "Handling Startup, Shutdown, and Throttling"
},
"h2": {
"urllink": "#kinesis-record-processor-producer-consumer-coordination",
"text": "Starting Up Data Producers and Data Consumers"
},
"links": [],
"text": "To change the behavior of the record processors so that it always reads data from the beginning of the stream, set the following value in the properties file for your Amazon Kinesis Data Streams application:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-producer-consumer-coordination",
"main_header": "Starting Up Data Producers and Data Consumers",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-additional-considerations",
"text": "Handling Startup, Shutdown, and Throttling"
},
"h2": {
"urllink": "#kinesis-record-processor-producer-consumer-coordination",
"text": "Starting Up Data Producers and Data Consumers"
},
"links": [],
"text": "By default, Amazon Kinesis Data Streams stores all data for 24 hours. It also supports extended retention of up to 7 days and the long-term retention of up to 365 days. This time frame is called the retention period. Setting the starting position to the TRIM_HORIZON will start the record processor with the oldest data in the stream, as defined by the retention period. Even with the TRIM_HORIZON setting, if a record processor were to start after a greater time has passed than the retention period, then some of the records in the stream will no longer be available. For this reason, you should always have consumer applications reading from the stream and use the CloudWatch metric GetRecords.IteratorAgeMilliseconds to monitor that applications are keeping up with incoming data.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-producer-consumer-coordination",
"main_header": "Starting Up Data Producers and Data Consumers",
"images": [],
"container_type": "p",
"children_tags": [
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-additional-considerations",
"text": "Handling Startup, Shutdown, and Throttling"
},
"h2": {
"urllink": "#kinesis-record-processor-producer-consumer-coordination",
"text": "Starting Up Data Producers and Data Consumers"
},
"links": [],
"text": "In some scenarios, it may be fine for record processors to miss the first few records in the stream. For example, you might run some initial records through the stream to test that the stream is working end-to-end as expected. After doing this initial verification, you would then start your workers and begin to put production data into the stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-producer-consumer-coordination",
"main_header": "Starting Up Data Producers and Data Consumers",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-additional-considerations",
"text": "Handling Startup, Shutdown, and Throttling"
},
"h2": {
"urllink": "#kinesis-record-processor-producer-consumer-coordination",
"text": "Starting Up Data Producers and Data Consumers"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-sdk.html#kinesis-using-sdk-java-get-data-shard-iterators",
"title": "Using Shard Iterators"
}
],
"text": "For more information about the TRIM_HORIZON setting, see Using Shard Iterators.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-producer-consumer-coordination",
"main_header": "Starting Up Data Producers and Data Consumers",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-additional-considerations",
"text": "Handling Startup, Shutdown, and Throttling"
},
"h2": {
"urllink": "#developing-consumers-with-kcl-shutdown",
"text": "Shutting Down an Amazon Kinesis Data Streams Application"
},
"links": [
{
"url": "https://console.aws.amazon.com//ec2/home",
"title": "AWS Management Console"
},
{
"url": "https://docs.aws.amazon.com/cli/latest/reference/ec2/index.html",
"title": "AWS CLI"
}
],
"text": "When your Amazon Kinesis Data Streams application has completed its intended task, you should shut it down by terminating the EC2 instances on which it is running. You can terminate the instances using the AWS Management Console or the AWS CLI.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#developing-consumers-with-kcl-shutdown",
"main_header": "Shutting Down an Amazon Kinesis Data Streams Application",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-additional-considerations",
"text": "Handling Startup, Shutdown, and Throttling"
},
"h2": {
"urllink": "#developing-consumers-with-kcl-shutdown",
"text": "Shutting Down an Amazon Kinesis Data Streams Application"
},
"links": [],
"text": "After shutting down your Amazon Kinesis Data Streams application, you should delete the Amazon DynamoDB table that the KCL used to track the application's state.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#developing-consumers-with-kcl-shutdown",
"main_header": "Shutting Down an Amazon Kinesis Data Streams Application",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-additional-considerations",
"text": "Handling Startup, Shutdown, and Throttling"
},
"h2": {
"urllink": "#kinesis-record-processor-read-throttling",
"text": "Read Throttling"
},
"links": [],
"text": "The throughput of a stream is provisioned at the shard level. Each shard has a read throughput of up to 5 transactions per second for reads, up to a maximum total data read rate of 2 MB per second. If an application (or a group of applications operating on the same stream) attempts to get data from a shard at a faster rate, Kinesis Data Streams throttles the corresponding Get operations.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-read-throttling",
"main_header": "Read Throttling",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-additional-considerations",
"text": "Handling Startup, Shutdown, and Throttling"
},
"h2": {
"urllink": "#kinesis-record-processor-read-throttling",
"text": "Read Throttling"
},
"links": [],
"text": "In an Amazon Kinesis Data Streams application, if a record processor is processing data faster than the limit \u00e2\u0080\u0094 such as in the case of a failover \u00e2\u0080\u0094 throttling occurs. Because KCL manages the interactions between the application and Kinesis Data Streams, throttling exceptions occur in the KCL code rather than in the application code. However, because the KCL logs these exceptions, you see them in the logs.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-read-throttling",
"main_header": "Read Throttling",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#kinesis-record-processor-additional-considerations",
"text": "Handling Startup, Shutdown, and Throttling"
},
"h2": {
"urllink": "#kinesis-record-processor-read-throttling",
"text": "Read Throttling"
},
"links": [],
"text": "If you find that your application is throttled consistently, you should consider increasing the number of shards for the stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-read-throttling",
"main_header": "Read Throttling",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/building-consumers.html",
"title": "Reading Data from Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/advanced-consumers.html",
"title": "Advanced Topics for Amazon Kinesis Data Streams Consumers"
}
]
},
{
"h1": {
"urllink": "#monitoring",
"text": "Monitoring Amazon Kinesis Data Streams"
},
"links": [],
"text": "You can monitor your data streams in Amazon Kinesis Data Streams using the following features:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html#monitoring",
"main_header": "Monitoring Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring",
"text": "Monitoring Amazon Kinesis Data Streams"
},
"links": [],
"text": "For more information about common monitoring issues, questions, and troubleshooting, see the following:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html#monitoring",
"main_header": "Monitoring Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"links": [],
"text": "Amazon Kinesis Data Streams and Amazon CloudWatch are integrated so that you can collect, view, and analyze CloudWatch metrics for your Kinesis data streams. For example, to track shard usage, you can monitor the IncomingBytes and OutgoingBytes metrics and compare them to the number of shards in the stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#monitoring-with-cloudwatch",
"main_header": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"links": [],
"text": "The metrics that you configure for your streams are automatically collected and pushed to CloudWatch every minute. Metrics are archived for two weeks; after that period, the data is discarded.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#monitoring-with-cloudwatch",
"main_header": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"links": [],
"text": "The following table describes basic stream-level and enhanced shard-level monitoring for Kinesis data streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#monitoring-with-cloudwatch",
"main_header": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_EnableEnhancedMonitoring.html",
"title": "EnableEnhancedMonitoring"
}
],
"text": "Kinesis Data Streams sends metrics to CloudWatch at two levels: the stream level and, optionally, the shard level. Stream-level metrics are for most common monitoring use cases in normal conditions. Shard-level metrics are for specific monitoring tasks, usually related to troubleshooting, and are enabled using the EnableEnhancedMonitoring operation.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics",
"main_header": "Amazon Kinesis Data Streams Dimensions and Metrics",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"links": [
{
"url": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Statistic",
"title": "CloudWatch Statistics"
}
],
"text": "For an explanation of the statistics gathered from CloudWatch metrics, see CloudWatch Statistics in the Amazon CloudWatch User Guide.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics",
"main_header": "Amazon Kinesis Data Streams Dimensions and Metrics",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"h3": {
"urllink": "#kinesis-metrics-stream",
"text": "Basic Stream-level Metrics"
},
"links": [],
"text": "The AWS/Kinesis namespace includes the following stream-level metrics.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics-stream",
"main_header": "Basic Stream-level Metrics",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"h3": {
"urllink": "#kinesis-metrics-stream",
"text": "Basic Stream-level Metrics"
},
"links": [],
"text": "Kinesis Data Streams sends these stream-level metrics to CloudWatch every minute. These metrics are always available.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics-stream",
"main_header": "Basic Stream-level Metrics",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"h3": {
"urllink": "#kinesis-metrics-shard",
"text": "Enhanced Shard-level Metrics"
},
"links": [],
"text": "The AWS/Kinesis namespace includes the following shard-level metrics.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics-shard",
"main_header": "Enhanced Shard-level Metrics",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"h3": {
"urllink": "#kinesis-metrics-shard",
"text": "Enhanced Shard-level Metrics"
},
"links": [
{
"url": "https://aws.amazon.com/cloudwatch/pricing/",
"title": "Amazon CloudWatch Pricing"
}
],
"text": "Kinesis sends the following shard-level metrics to CloudWatch every minute. Each metric dimension creates 1 CloudWatch metric and makes approximately 43,200 PutMetricData API calls per month. These metrics are not enabled by default. There is a charge for enhanced metrics emitted from Kinesis. For more information, see Amazon CloudWatch Pricing under the heading Amazon CloudWatch Custom Metrics. The charges are given per shard per metric per month.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metrics-shard",
"main_header": "Enhanced Shard-level Metrics",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#kinesis-metrics",
"text": "Amazon Kinesis Data Streams Dimensions and Metrics"
},
"h3": {
"urllink": "#kinesis-metric-use",
"text": "Recommended Amazon Kinesis Data Streams Metrics"
},
"links": [],
"text": "Several Amazon Kinesis Data Streams metrics might be of particular interest to Kinesis Data Streams customers. The following list provides recommended metrics and their uses.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#kinesis-metric-use",
"main_header": "Recommended Amazon Kinesis Data Streams Metrics",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#cloudwatch-metrics",
"text": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams"
},
"links": [],
"text": "You can monitor metrics for Kinesis Data Streams using the CloudWatch console, the command line, or the CloudWatch API. The following procedures show you how to access metrics using these different methods.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#cloudwatch-metrics",
"main_header": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#cloudwatch-metrics",
"text": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams"
},
"links": [],
"text": "To access metrics using the AWS CLI",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#cloudwatch-metrics",
"main_header": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#cloudwatch-metrics",
"text": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/cli/latest/reference/cloudwatch/list-metrics.html",
"title": "list-metrics"
},
{
"url": "https://docs.aws.amazon.com/cli/latest/reference/cloudwatch/get-metric-statistics.html",
"title": "get-metric-statistics"
}
],
"text": "Use the list-metrics and get-metric-statistics commands.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#cloudwatch-metrics",
"main_header": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#cloudwatch-metrics",
"text": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams"
},
"links": [],
"text": "To access metrics using the CloudWatch CLI",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#cloudwatch-metrics",
"main_header": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#cloudwatch-metrics",
"text": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/cli/cli-mon-list-metrics.html",
"title": "mon-list-metrics"
},
{
"url": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/cli/cli-mon-get-stats.html",
"title": "mon-get-stats"
}
],
"text": "Use the mon-list-metrics and mon-get-stats commands.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#cloudwatch-metrics",
"main_header": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#cloudwatch-metrics",
"text": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams"
},
"links": [],
"text": "To access metrics using the CloudWatch API",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#cloudwatch-metrics",
"main_header": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-cloudwatch",
"text": "Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch"
},
"h2": {
"urllink": "#cloudwatch-metrics",
"text": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html",
"title": "ListMetrics"
},
{
"url": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html",
"title": "GetMetricStatistics"
}
],
"text": "Use the ListMetrics and GetMetricStatistics operations.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html#cloudwatch-metrics",
"main_header": "Accessing Amazon CloudWatch Metrics for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#agent-health",
"text": "Monitoring Kinesis Data Streams Agent Health with Amazon CloudWatch"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/writing-with-agents.html#agent-config-settings",
"title": "Agent Configuration Settings"
}
],
"text": "The agent publishes custom CloudWatch metrics with a namespace of AWSKinesisAgent. These metrics help you assess whether the agent is submitting data into Kinesis Data Streams as specified, and whether it is healthy and consuming the appropriate amount of CPU and memory resources on the data producer. Metrics such as number of records and bytes sent are useful to understand the rate at which the agent is submitting data to the stream. When these metrics fall below expected thresholds by some percentage or drop to zero, it could indicate configuration issues, network errors, or agent health issues. Metrics such as on-host CPU and memory consumption and agent error counters indicate data producer resource usage, and provide insights into potential configuration or host errors. Finally, the agent also logs service exceptions to help investigate agent issues. These metrics are reported in the Region specified in the agent configuration setting cloudwatch.endpoint. Cloudwatch metrics published from multiple Kinesis agents are aggregated or combined. For more information about agent configuration, see Agent Configuration Settings.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/agent-health.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/agent-health.html#agent-health",
"main_header": "Monitoring Kinesis Data Streams Agent Health with Amazon CloudWatch",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"b",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#agent-health",
"text": "Monitoring Kinesis Data Streams Agent Health with Amazon CloudWatch"
},
"h2": {
"urllink": "#agent-metrics",
"text": "Monitoring with CloudWatch"
},
"links": [],
"text": "The Kinesis Data Streams agent sends the following metrics to CloudWatch.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/agent-health.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/agent-health.html#agent-metrics",
"main_header": "Monitoring with CloudWatch",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#logging-using-cloudtrail",
"text": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail"
},
"links": [],
"text": "Amazon Kinesis Data Streams is integrated with AWS CloudTrail, a service that provides a record of actions taken by a user, role, or an AWS service in Kinesis Data Streams. CloudTrail captures all API calls for Kinesis Data Streams as events. The calls captured include calls from the Kinesis Data Streams console and code calls to the Kinesis Data Streams API operations. If you create a trail, you can enable continuous delivery of CloudTrail events to an Amazon S3 bucket, including events for Kinesis Data Streams. If you don't configure a trail, you can still view the most recent events in the CloudTrail console in Event history. Using the information collected by CloudTrail, you can determine the request that was made to Kinesis Data Streams, the IP address from which the request was made, who made the request, when it was made, and additional details.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html#logging-using-cloudtrail",
"main_header": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#logging-using-cloudtrail",
"text": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail"
},
"links": [
{
"url": "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/",
"title": "AWS CloudTrail User Guide"
}
],
"text": "To learn more about CloudTrail, including how to configure and enable it, see the AWS CloudTrail User Guide.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html#logging-using-cloudtrail",
"main_header": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#logging-using-cloudtrail",
"text": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail"
},
"h2": {
"urllink": "#service-name-info-in-cloudtrail",
"text": "Kinesis Data Streams Information in CloudTrail"
},
"links": [
{
"url": "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/view-cloudtrail-events.html",
"title": "Viewing Events with CloudTrail Event History"
}
],
"text": "CloudTrail is enabled on your AWS account when you create the account. When supported event activity occurs in Kinesis Data Streams, that activity is recorded in a CloudTrail event along with other AWS service events in Event history. You can view, search, and download recent events in your AWS account. For more information, see Viewing Events with CloudTrail Event History.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html#service-name-info-in-cloudtrail",
"main_header": "Kinesis Data Streams Information in CloudTrail",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#logging-using-cloudtrail",
"text": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail"
},
"h2": {
"urllink": "#service-name-info-in-cloudtrail",
"text": "Kinesis Data Streams Information in CloudTrail"
},
"links": [],
"text": "For an ongoing record of events in your AWS account, including events for Kinesis Data Streams, create a trail. A trail enables CloudTrail to deliver log files to an Amazon S3 bucket. By default, when you create a trail in the console, the trail applies to all AWS Regions. The trail logs events from all Regions in the AWS partition and delivers the log files to the Amazon S3 bucket that you specify. Additionally, you can configure other AWS services to further analyze and act upon the event data collected in CloudTrail logs. For more information, see the following:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html#service-name-info-in-cloudtrail",
"main_header": "Kinesis Data Streams Information in CloudTrail",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#logging-using-cloudtrail",
"text": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail"
},
"h2": {
"urllink": "#service-name-info-in-cloudtrail",
"text": "Kinesis Data Streams Information in CloudTrail"
},
"links": [],
"text": "Kinesis Data Streams supports logging the following actions as events in CloudTrail log files:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html#service-name-info-in-cloudtrail",
"main_header": "Kinesis Data Streams Information in CloudTrail",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#logging-using-cloudtrail",
"text": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail"
},
"h2": {
"urllink": "#service-name-info-in-cloudtrail",
"text": "Kinesis Data Streams Information in CloudTrail"
},
"links": [],
"text": "Every event or log entry contains information about who generated the request. The identity information helps you determine the following:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html#service-name-info-in-cloudtrail",
"main_header": "Kinesis Data Streams Information in CloudTrail",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#logging-using-cloudtrail",
"text": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail"
},
"h2": {
"urllink": "#service-name-info-in-cloudtrail",
"text": "Kinesis Data Streams Information in CloudTrail"
},
"links": [
{
"url": "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-user-identity.html",
"title": "CloudTrail userIdentity Element"
}
],
"text": "For more information, see the CloudTrail userIdentity Element.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html#service-name-info-in-cloudtrail",
"main_header": "Kinesis Data Streams Information in CloudTrail",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#logging-using-cloudtrail",
"text": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail"
},
"h2": {
"urllink": "#understanding-service-name-entries",
"text": "Example: Kinesis Data Streams Log File Entries"
},
"links": [],
"text": "A trail is a configuration that enables delivery of events as log files to an Amazon S3 bucket that you specify. CloudTrail log files contain one or more log entries. An event represents a single request from any source and includes information about the requested action, the date and time of the action, request parameters, and so on. CloudTrail log files aren't an ordered stack trace of the public API calls, so they don't appear in any specific order.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html#understanding-service-name-entries",
"main_header": "Example: Kinesis Data Streams Log File Entries",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#logging-using-cloudtrail",
"text": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail"
},
"h2": {
"urllink": "#understanding-service-name-entries",
"text": "Example: Kinesis Data Streams Log File Entries"
},
"links": [],
"text": "The following example shows a CloudTrail log entry that demonstrates the CreateStream, DescribeStream, ListStreams, DeleteStream, SplitShard, and MergeShards actions.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html#understanding-service-name-entries",
"main_header": "Example: Kinesis Data Streams Log File Entries",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/dev/developing-consumers-with-kcl.html",
"title": "Kinesis Client Library"
},
{
"url": "https://console.aws.amazon.com/cloudwatch/",
"title": "CloudWatch console"
},
{
"url": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/publishingMetrics.html",
"title": "Publish Custom Metrics"
}
],
"text": "The Kinesis Client Library (KCL) for Amazon Kinesis Data Streams publishes custom Amazon CloudWatch metrics on your behalf, using the name of your KCL application as the namespace. You can view these metrics by navigating to the CloudWatch console and choosing Custom Metrics. For more information about custom metrics, see Publish Custom Metrics in the Amazon CloudWatch User Guide.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#monitoring-with-kcl",
"main_header": "Monitoring the Kinesis Client Library with Amazon CloudWatch",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em",
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"links": [
{
"url": "https://aws.amazon.com/cloudwatch/pricing/",
"title": "Amazon CloudWatch Pricing"
}
],
"text": "There is a nominal charge for the metrics uploaded to CloudWatch by the KCL; specifically, Amazon CloudWatch Custom Metrics and Amazon CloudWatch API Requests charges apply. For more information, see Amazon CloudWatch Pricing.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#monitoring-with-kcl",
"main_header": "Monitoring the Kinesis Client Library with Amazon CloudWatch",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#metrics-namespace",
"text": "Metrics and Namespace"
},
"links": [],
"text": "The namespace that is used to upload metrics is the application name that you specify when you launch the KCL.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#metrics-namespace",
"main_header": "Metrics and Namespace",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#metric-levels",
"text": "Metric Levels and Dimensions"
},
"links": [],
"text": "There are two options to control which metrics are uploaded to CloudWatch:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#metric-levels",
"main_header": "Metric Levels and Dimensions",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#metrics-config",
"text": "Metric Configuration"
},
"links": [],
"text": "Metric levels and enabled dimensions can be configured using the KinesisClientLibConfiguration instance, which is passed to Worker when launching the KCL application. In the MultiLangDaemon case, the metricsLevel and metricsEnabledDimensions properties can be specified in the .properties file used to launch the MultiLangDaemon KCL application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#metrics-config",
"main_header": "Metric Configuration",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#metrics-config",
"text": "Metric Configuration"
},
"links": [],
"text": "Metric levels can be assigned one of three values: NONE, SUMMARY, or DETAILED. Enabled dimensions values must be comma-separated strings with the list of dimensions that are allowed for the CloudWatch metrics. The dimensions used by the KCL application are Operation, ShardId, and WorkerIdentifier.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#metrics-config",
"main_header": "Metric Configuration",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"links": [],
"text": "The following tables list the KCL metrics, grouped by scope and operation.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-list",
"main_header": "List of Metrics",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"links": [],
"text": "These metrics are aggregated across all KCL workers within the scope of the application, as defined by the Amazon CloudWatch namespace.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-per-app",
"main_header": "Per-KCL-Application Metrics",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#init-task",
"text": "InitializeTask"
},
"links": [],
"text": "The InitializeTask operation is responsible for initializing the record processor for the KCL application. The logic for this operation includes getting a shard iterator from Kinesis Data Streams and initializing the record processor.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#init-task",
"main_header": "InitializeTask",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#shutdown-task",
"text": "ShutdownTask"
},
"links": [],
"text": "The ShutdownTask operation initiates the shutdown sequence for shard processing. This can occur because a shard is split or merged, or when the shard lease is lost from the worker. In both cases, the record processor shutdown() function is invoked. New shards are also discovered in the case where a shard was split or merged, resulting in the creation of one or two new shards.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#shutdown-task",
"main_header": "ShutdownTask",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#shard-sync-task",
"text": "ShardSyncTask"
},
"links": [],
"text": "The ShardSyncTask operation discovers changes to shard information for the Kinesis data stream, so new shards can be processed by the KCL application.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#shard-sync-task",
"main_header": "ShardSyncTask",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#block-parent-task",
"text": "BlockOnParentTask"
},
"links": [],
"text": "If the shard is split or merged with other shards, then new child shards are created. The BlockOnParentTask operation ensures that record processing for the new shards does not start until the parent shards are completely processed by the KCL.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#block-parent-task",
"main_header": "BlockOnParentTask",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#periodic-task",
"text": "PeriodicShardSyncManager"
},
"links": [],
"text": "The PeriodicShardSyncManager is responsible for examining the data streams that are being processed by the KCL consumer application, identifying data streams with partial leases and handing them off for synchronization.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#periodic-task",
"main_header": "PeriodicShardSyncManager",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#periodic-task",
"text": "PeriodicShardSyncManager"
},
"links": [],
"text": "The following metrics are available when KCL is configured to process a single data stream (then the value of NumStreamsToSync and NumStreamsWithPartialLeases is set to 1) and also when KCL is configured to process multiple data streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#periodic-task",
"main_header": "PeriodicShardSyncManager",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-app",
"text": "Per-KCL-Application Metrics"
},
"h4": {
"urllink": "#multi-task",
"text": "MultistreamTracker"
},
"links": [],
"text": "The MultistreamTracker interface enables you to build KCL consumer applications that can process multiple data streams at the same time.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#multi-task",
"main_header": "MultistreamTracker",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-worker",
"text": "Per-Worker Metrics"
},
"links": [],
"text": "These metrics are aggregated across all record processors consuming data from a Kinesis data stream, such as an Amazon EC2 instance.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-per-worker",
"main_header": "Per-Worker Metrics",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-worker",
"text": "Per-Worker Metrics"
},
"h4": {
"urllink": "#renew-leases",
"text": "RenewAllLeases"
},
"links": [],
"text": "The RenewAllLeases operation periodically renews shard leases owned by a particular worker instance.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#renew-leases",
"main_header": "RenewAllLeases",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-worker",
"text": "Per-Worker Metrics"
},
"h4": {
"urllink": "#take-leases",
"text": "TakeLeases"
},
"links": [],
"text": "The TakeLeases operation balances record processing between all KCL workers. If the current KCL worker has fewer shard leases than required, it takes shard leases from another worker that is overloaded.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#take-leases",
"main_header": "TakeLeases",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-shard",
"text": "Per-Shard Metrics"
},
"links": [],
"text": "These metrics are aggregated across a single record processor.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#kcl-metrics-per-shard",
"main_header": "Per-Shard Metrics",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kcl",
"text": "Monitoring the Kinesis Client Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kcl-metrics-list",
"text": "List of Metrics"
},
"h3": {
"urllink": "#kcl-metrics-per-shard",
"text": "Per-Shard Metrics"
},
"h4": {
"urllink": "#process-task",
"text": "ProcessTask"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetRecords.html",
"title": "GetRecords"
}
],
"text": "The ProcessTask operation calls GetRecords with the current iterator position to retrieve records from the stream and invokes the record processor processRecords function.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kcl.html#process-task",
"main_header": "ProcessTask",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-kpl.html",
"title": "Kinesis Producer Library"
},
{
"url": "https://console.aws.amazon.com/cloudwatch/",
"title": "CloudWatch console"
},
{
"url": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/publishingMetrics.html",
"title": "Publish Custom Metrics"
}
],
"text": "The Kinesis Producer Library (KPL) for Amazon Kinesis Data Streams publishes custom Amazon CloudWatch metrics on your behalf. You can view these metrics by navigating to the CloudWatch console and choosing Custom Metrics. For more information about custom metrics, see Publish Custom Metrics in the Amazon CloudWatch User Guide.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#monitoring-with-kpl",
"main_header": "Monitoring the Kinesis Producer Library with Amazon CloudWatch",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em",
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"links": [
{
"url": "https://aws.amazon.com/cloudwatch/pricing/",
"title": "Amazon CloudWatch Pricing"
}
],
"text": "There is a nominal charge for the metrics uploaded to CloudWatch by the KPL; specifically, Amazon CloudWatch Custom Metrics and Amazon CloudWatch API Requests charges apply. For more information, see Amazon CloudWatch Pricing. Local metrics gathering does not incur CloudWatch charges.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#monitoring-with-kpl",
"main_header": "Monitoring the Kinesis Producer Library with Amazon CloudWatch",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kpl-metrics",
"text": "Metrics, Dimensions, and Namespaces"
},
"links": [],
"text": "You can specify an application name when launching the KPL, which is then used as part of the namespace when uploading metrics. This is optional; the KPL provides a default value if an application name is not set.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics",
"main_header": "Metrics, Dimensions, and Namespaces",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kpl-metrics",
"text": "Metrics, Dimensions, and Namespaces"
},
"links": [],
"text": "You can also configure the KPL to add arbitrary additional dimensions to the metrics. This is useful if you want finer-grained data in your CloudWatch metrics. For example, you can add the hostname as a dimension, which then allows you to identify uneven load distributions across your fleet. All KPL configuration settings are immutable, so you can't change these additional dimensions after the KPL instance is initialized.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics",
"main_header": "Metrics, Dimensions, and Namespaces",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kpl-metrics-granularity",
"text": "Metric Level and Granularity"
},
"links": [],
"text": "There are two options to control the number of metrics uploaded to CloudWatch:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics-granularity",
"main_header": "Metric Level and Granularity",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kpl-metrics-local-upload",
"text": "Local Access and Amazon CloudWatch Upload"
},
"links": [],
"text": "Metrics for the current KPL instance are available locally in real time; you can query the KPL at any time to get them. The KPL locally computes the sum, average, minimum, maximum, and count of every metric, as in CloudWatch.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics-local-upload",
"main_header": "Local Access and Amazon CloudWatch Upload",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kpl-metrics-local-upload",
"text": "Local Access and Amazon CloudWatch Upload"
},
"links": [],
"text": "You can get statistics that are cumulative from the start of the program to the present point in time, or using a rolling window over the past N seconds, where N is an integer between 1 and 60.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics-local-upload",
"main_header": "Local Access and Amazon CloudWatch Upload",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kpl-metrics-local-upload",
"text": "Local Access and Amazon CloudWatch Upload"
},
"links": [],
"text": "All metrics are available for upload to CloudWatch. This is especially useful for aggregating data across multiple hosts, monitoring, and alarming. This functionality is not available locally.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics-local-upload",
"main_header": "Local Access and Amazon CloudWatch Upload",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kpl-metrics-local-upload",
"text": "Local Access and Amazon CloudWatch Upload"
},
"links": [],
"text": "As described previously, you can select which metrics to upload with the metric level and granularity settings. Metrics that are not uploaded are available locally.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics-local-upload",
"main_header": "Local Access and Amazon CloudWatch Upload",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kpl-metrics-local-upload",
"text": "Local Access and Amazon CloudWatch Upload"
},
"links": [],
"text": "Uploading data points individually is untenable because it could produce millions of uploads per second, if traffic is high. For this reason, the KPL aggregates metrics locally into 1-minute buckets and uploads a statistics object to CloudWatch one time per minute, per enabled metric.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics-local-upload",
"main_header": "Local Access and Amazon CloudWatch Upload",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#monitoring-with-kpl",
"text": "Monitoring the Kinesis Producer Library with Amazon CloudWatch"
},
"h2": {
"urllink": "#kpl-metrics-local-upload",
"text": "Local Access and Amazon CloudWatch Upload"
},
"links": [],
"text": "",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-kpl.html#kpl-metrics-local-upload",
"main_header": "Local Access and Amazon CloudWatch Upload",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#security",
"text": "Security in Amazon Kinesis Data Streams"
},
"links": [],
"text": "Cloud security at AWS is the highest priority. As an AWS customer, you will benefit from a data center and network architecture built to meet the requirements of the most security-sensitive organizations.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security.html#security",
"main_header": "Security in Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#security",
"text": "Security in Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://aws.amazon.com/compliance/shared-responsibility-model/",
"title": "shared responsibility model"
}
],
"text": "Security is a shared responsibility between AWS and you. The shared responsibility model describes this as security of the cloud and security in the cloud:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security.html#security",
"main_header": "Security in Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#security",
"text": "Security in Amazon Kinesis Data Streams"
},
"links": [],
"text": "This documentation helps you understand how to apply the shared responsibility model when using Kinesis Data Streams. The following topics show you how to configure Kinesis Data Streams to meet your security and compliance objectives. You'll also learn how to use other AWS services that can help you to monitor and secure your Kinesis Data Streams resources.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security.html#security",
"main_header": "Security in Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#server-side-encryption",
"text": "Data Protection in Amazon Kinesis Data Streams"
},
"links": [],
"text": "Server-side encryption using AWS Key Management Service (AWS KMS) keys makes it easy for you to meet strict data management requirements by encrypting your data at rest within Amazon Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html#server-side-encryption",
"main_header": "Data Protection in Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#what-is-sse",
"text": "What Is Server-Side Encryption for Kinesis Data Streams?"
},
"links": [],
"text": "Server-side encryption is a feature in Amazon Kinesis Data Streams that automatically encrypts data before it's at rest by using an AWS KMS customer master key (CMK) you specify. Data is encrypted before it's written to the Kinesis stream storage layer, and decrypted after it\u00e2\u0080\u0099s retrieved from storage. As a result, your data is encrypted at rest within the Kinesis Data Streams service. This allows you to meet strict regulatory requirements and enhance the security of your data.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html#what-is-sse",
"main_header": "What Is Server-Side Encryption for Kinesis Data Streams?",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#what-is-sse",
"text": "What Is Server-Side Encryption for Kinesis Data Streams?"
},
"links": [],
"text": "With server-side encryption, your Kinesis stream producers and consumers don't need to manage master keys or cryptographic operations. Your data is automatically encrypted as it enters and leaves the Kinesis Data Streams service, so your data at rest is encrypted. AWS KMS provides all the master keys that are used by the server-side encryption feature. AWS KMS makes it easy to use a CMK for Kinesis that is managed by AWS, a user-specified AWS KMS CMK, or a master key imported into the AWS KMS service.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/what-is-sse.html#what-is-sse",
"main_header": "What Is Server-Side Encryption for Kinesis Data Streams?",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#costs-performance",
"text": "Costs, Regions, and Performance Considerations"
},
"links": [],
"text": "When you apply server-side encryption, you are subject to AWS KMS API usage and key costs. Unlike custom KMS master keys, the (Default) aws/kinesis customer master key (CMK) is offered free of charge. However, you still must pay for the API usage costs that Amazon Kinesis Data Streams incurs on your behalf.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html#costs-performance",
"main_header": "Costs, Regions, and Performance Considerations",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#costs-performance",
"text": "Costs, Regions, and Performance Considerations"
},
"links": [],
"text": "API usage costs apply for every CMK, including custom ones. Kinesis Data Streams calls AWS KMS approximately every five minutes when it is rotating the data key. In a 30-day month, the total cost of AWS KMS API calls that are initiated by a Kinesis stream should be less than a few dollars. This cost scales with the number of user credentials that you use on your data producers and consumers because each user credential requires a unique API call to AWS KMS. When you use an IAM role for authentication, each assume role call results in unique user credentials. To save KMS costs, you might want to cache user credentials that are returned by the assume role call.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html#costs-performance",
"main_header": "Costs, Regions, and Performance Considerations",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#costs-performance",
"text": "Costs, Regions, and Performance Considerations"
},
"links": [],
"text": "The following describes the costs by resource:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html#costs-performance",
"main_header": "Costs, Regions, and Performance Considerations",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#costs-performance",
"text": "Costs, Regions, and Performance Considerations"
},
"links": [],
"text": "API usage costs apply for every CMK, including custom ones. Kinesis Data Streams calls KMS approximately every 5 minutes when it is rotating the data key. In a 30-day month, the total cost of KMS API calls initiated by a Kinesis data stream should be less than a few dollars. Please note that this cost scales with the number of user credentials you use on your data producers and consumers because each user credential requires a unique API call to AWS KMS. When you use IAM role for authentication, each assume-role-call will result in unique user credentials and you might want to cache user credentials returned by the assume-role-call to save KMS costs.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html#costs-performance",
"main_header": "Costs, Regions, and Performance Considerations",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#costs-performance",
"text": "Costs, Regions, and Performance Considerations"
},
"h2": {
"urllink": "#api-usage",
"text": "KMS API Usage"
},
"links": [
{
"url": "http://aws.amazon.com/kms/pricing/#Usage",
"title": "AWS Key Management Service Pricing: Usage"
}
],
"text": "For every encrypted stream, when reading from TIP and using a single IAM account/user access key across readers and writers, Kinesis service calls the AWS KMS service approximately 12 times every 5 minutes. Not reading from TIP could lead to higher calls to AWS KMS service. API requests to generate new data encryption keys are subject to AWS KMS usage costs. For more information, see AWS Key Management Service Pricing: Usage.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html#api-usage",
"main_header": "KMS API Usage",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#costs-performance",
"text": "Costs, Regions, and Performance Considerations"
},
"h2": {
"urllink": "#sse-regions",
"text": "Availability of Server-Side Encryption by Region"
},
"links": [
{
"url": "https://docs.aws.amazon.com/general/latest/gr/ak.html",
"title": "https://docs.aws.amazon.com/general/latest/gr/ak.html"
}
],
"text": "Currently, server-side encryption of Kinesis streams is available in all the regions supported for Kinesis Data Streams, including AWS GovCloud (US-West), and the China regions. For more information about supported regions for Kinesis Data Streams see https://docs.aws.amazon.com/general/latest/gr/ak.html.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html#sse-regions",
"main_header": "Availability of Server-Side Encryption by Region",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#costs-performance",
"text": "Costs, Regions, and Performance Considerations"
},
"h2": {
"urllink": "#performance-considerations",
"text": "Performance Considerations"
},
"links": [],
"text": "Due to the service overhead of applying encryption, applying server-side encryption increases the typical latency of PutRecord, PutRecords, and GetRecords by less than 100\u00ce\u00bcs.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/costs-performance.html#performance-considerations",
"main_header": "Performance Considerations",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#getting-started-with-sse",
"text": "How Do I Get Started with Server-Side Encryption?"
},
"links": [],
"text": "The easiest way to get started with server-side encryption is to use the AWS Management Console and the Amazon Kinesis KMS Service Key, aws/kinesis.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html#getting-started-with-sse",
"main_header": "How Do I Get Started with Server-Side Encryption?",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#getting-started-with-sse",
"text": "How Do I Get Started with Server-Side Encryption?"
},
"links": [],
"text": "The following procedure demonstrates how to enable server-side encryption for a Kinesis stream.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html#getting-started-with-sse",
"main_header": "How Do I Get Started with Server-Side Encryption?",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#creating-using-sse-master-keys",
"text": "Creating and Using User-Generated KMS Master Keys"
},
"links": [],
"text": "This section describes how to create and use your own KMS master keys, instead of using the master key administered by Amazon Kinesis.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/creating-using-sse-master-keys.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/creating-using-sse-master-keys.html#creating-using-sse-master-keys",
"main_header": "Creating and Using User-Generated KMS Master Keys",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#creating-using-sse-master-keys",
"text": "Creating and Using User-Generated KMS Master Keys"
},
"h2": {
"urllink": "#creating-sse-master-keys",
"text": "Creating User-Generated KMS Master Keys"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html",
"title": "Creating Keys"
}
],
"text": "For instructions on creating your own master keys, see Creating Keys in the AWS Key Management Service Developer Guide. After you create keys for your account, the Kinesis Data Streams service returns these keys in the KMS master key list.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/creating-using-sse-master-keys.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/creating-using-sse-master-keys.html#creating-sse-master-keys",
"main_header": "Creating User-Generated KMS Master Keys",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em",
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#creating-using-sse-master-keys",
"text": "Creating and Using User-Generated KMS Master Keys"
},
"h2": {
"urllink": "#using-sse-master-keys",
"text": "Using User-Generated KMS Master Keys"
},
"links": [],
"text": "After the correct permissions are applied to your consumers, producers, and administrators, you can use custom KMS master keys in your own AWS account or another AWS account. All KMS master keys in your account appear in the KMS Master Key list within the AWS Management Console.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/creating-using-sse-master-keys.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/creating-using-sse-master-keys.html#using-sse-master-keys",
"main_header": "Using User-Generated KMS Master Keys",
"images": [],
"container_type": "p",
"children_tags": [
"b"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#creating-using-sse-master-keys",
"text": "Creating and Using User-Generated KMS Master Keys"
},
"h2": {
"urllink": "#using-sse-master-keys",
"text": "Using User-Generated KMS Master Keys"
},
"links": [],
"text": "To use custom KMS master keys located in another account, you need permissions to use those keys. You must also specify the ARN of the KMS master key in the ARN input box in the AWS Management Console.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/creating-using-sse-master-keys.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/creating-using-sse-master-keys.html#using-sse-master-keys",
"main_header": "Using User-Generated KMS Master Keys",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#permissions-user-key-KMS",
"text": "Permissions to Use User-Generated KMS Master Keys"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html",
"title": "AWS KMS API Permissions: Actions and Resources Reference"
}
],
"text": "Before you can use server-side encryption with a user-generated KMS master key, you must configure AWS KMS key policies to allow encryption of streams and encryption and decryption of stream records. For examples and more information about AWS KMS permissions, see AWS KMS API Permissions: Actions and Resources Reference.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html#permissions-user-key-KMS",
"main_header": "Permissions to Use User-Generated KMS Master Keys",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#permissions-user-key-KMS",
"text": "Permissions to Use User-Generated KMS Master Keys"
},
"links": [
{
"url": "http://docs.aws.amazon.com/kms/latest/developerguide/iam-policies.html",
"title": "Using IAM Policies with AWS KMS"
}
],
"text": "Before you use user-generated KMS master keys, ensure that your Kinesis stream producers and consumers (IAM principals) are users in the KMS master key policy. Otherwise, writes and reads from a stream will fail, which could ultimately result in data loss, delayed processing, or hung applications. You can manage permissions for KMS keys using IAM policies. For more information, see Using IAM Policies with AWS KMS.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html#permissions-user-key-KMS",
"main_header": "Permissions to Use User-Generated KMS Master Keys",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#permissions-user-key-KMS",
"text": "Permissions to Use User-Generated KMS Master Keys"
},
"h2": {
"urllink": "#example-producer-permissions",
"text": "Example Producer Permissions"
},
"links": [],
"text": "Your Kinesis stream producers must have the kms:GenerateDataKey permission.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html#example-producer-permissions",
"main_header": "Example Producer Permissions",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#permissions-user-key-KMS",
"text": "Permissions to Use User-Generated KMS Master Keys"
},
"h2": {
"urllink": "#example-consumer-permissions",
"text": "Example Consumer Permissions"
},
"links": [],
"text": "Your Kinesis stream consumers must have the kms:Decrypt permission.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html#example-consumer-permissions",
"main_header": "Example Consumer Permissions",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#permissions-user-key-KMS",
"text": "Permissions to Use User-Generated KMS Master Keys"
},
"h2": {
"urllink": "#example-consumer-permissions",
"text": "Example Consumer Permissions"
},
"links": [],
"text": "Amazon Kinesis Data Analytics and AWS Lambda use roles to consume Kinesis streams. Make sure to add the kms:Decrypt permission to the roles that these consumers use.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html#example-consumer-permissions",
"main_header": "Example Consumer Permissions",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#permissions-user-key-KMS",
"text": "Permissions to Use User-Generated KMS Master Keys"
},
"h2": {
"urllink": "#stream-administrator-permissions",
"text": "Stream Administrator Permissions"
},
"links": [],
"text": "Kinesis stream administrators must have authorization to call kms:List* and kms:DescribeKey*.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/permissions-user-key-KMS.html#stream-administrator-permissions",
"main_header": "Stream Administrator Permissions",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#sse-troubleshooting",
"text": "Verifying and Troubleshooting KMS Key Permissions"
},
"links": [],
"text": "After enabling encryption on a Kinesis stream, we recommend that you monitor the success of your putRecord, putRecords, and getRecords calls using the following Amazon CloudWatch metrics:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/sse-troubleshooting.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/sse-troubleshooting.html#sse-troubleshooting",
"main_header": "Verifying and Troubleshooting KMS Key Permissions",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#sse-troubleshooting",
"text": "Verifying and Troubleshooting KMS Key Permissions"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/monitoring.html",
"title": "Monitoring Amazon Kinesis Data Streams"
}
],
"text": "For more information, see Monitoring Amazon Kinesis Data Streams",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/sse-troubleshooting.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/sse-troubleshooting.html#sse-troubleshooting",
"main_header": "Verifying and Troubleshooting KMS Key Permissions",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#vpc",
"text": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints"
},
"links": [
{
"url": "http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Introduction.html",
"title": "Amazon Virtual Private Cloud"
},
{
"url": "https://docs.aws.amazon.com/vpc/latest/userguide/vpce-interface.html#create-interface-endpoint",
"title": "Interface VPC Endpoints (AWS PrivateLink)"
}
],
"text": "You can use an interface VPC endpoint to keep traffic between your Amazon VPC and Kinesis Data Streams from leaving the Amazon network. Interface VPC endpoints don't require an internet gateway, NAT device, VPN connection, or AWS Direct Connect connection. Interface VPC endpoints are powered by AWS PrivateLink, an AWS technology that enables private communication between AWS services using an elastic network interface with private IPs in your Amazon VPC. For more information, see Amazon Virtual Private Cloud and Interface VPC Endpoints (AWS PrivateLink).",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html#vpc",
"main_header": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#vpc",
"text": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints"
},
"h2": {
"urllink": "#using-interface-vpc-endpoints",
"text": "Using Interface VPC Endpoints for Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/vpc/latest/userguide/vpce-interface.html#create-interface-endpoint",
"title": "Creating an Interface Endpoint"
}
],
"text": "To get started you do not need to change the settings for your streams, producers, or consumers. Simply create an interface VPC endpoint in order for your Kinesis Data Streams traffic from and to your Amazon VPC resources to start flowing through the interface VPC endpoint. For more information, see Creating an Interface Endpoint.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html#using-interface-vpc-endpoints",
"main_header": "Using Interface VPC Endpoints for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#vpc",
"text": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints"
},
"h2": {
"urllink": "#using-interface-vpc-endpoints",
"text": "Using Interface VPC Endpoints for Kinesis Data Streams"
},
"links": [],
"text": "The Kinesis Producer Library (KPL) and Kinesis Consumer Library (KCL) call AWS services like Amazon CloudWatch and Amazon DynamoDB using either public endpoints or private interface VPC endpoints, whichever are in use. For example, if your KCL application is running in a VPC with DynamoDB interface with VPC endpoints enabled, calls between DynamoDB and your KCL application are flowing through the interface VPC endpoint.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html#using-interface-vpc-endpoints",
"main_header": "Using Interface VPC Endpoints for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#vpc",
"text": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints"
},
"h2": {
"urllink": "#interface-vpc-endpoints-policies",
"text": "Controlling Access to VPCE Endpoints for Kinesis Data Streams"
},
"links": [],
"text": "VPC endpoint policies enable you to control access by either attaching a policy to a VPC endpoint or by using additional fields in a policy that is attached to an IAM user, group, or role to restrict access to only occur via the specified VPC endpoint. These policies can be used to restrict access to specific streams to a specified VPC endpoint when used in conjunction with the IAM policies to only grant access to Kinesis data stream actions via the specified VPC endpoint.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html#interface-vpc-endpoints-policies",
"main_header": "Controlling Access to VPCE Endpoints for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#vpc",
"text": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints"
},
"h2": {
"urllink": "#interface-vpc-endpoints-policies",
"text": "Controlling Access to VPCE Endpoints for Kinesis Data Streams"
},
"links": [],
"text": "The following are example endpoint policies for accessing Kinesis data streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html#interface-vpc-endpoints-policies",
"main_header": "Controlling Access to VPCE Endpoints for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#vpc",
"text": "Using Amazon Kinesis Data Streams with Interface VPC Endpoints"
},
"h2": {
"urllink": "#availability",
"text": "Availability of VPC Endpoint Policies for Kinesis Data Streams"
},
"links": [],
"text": "Kinesis Data Streams interface VPC endpoints with policies are supported in the following regions:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/vpc.html#availability",
"main_header": "Availability of VPC Endpoint Policies for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"links": [],
"text": "AWS Identity and Access Management (IAM) enables you to do the following:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#controlling-access",
"main_header": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"links": [],
"text": "By using IAM with Kinesis Data Streams, you can control whether users in your organization can perform a task using specific Kinesis Data Streams API actions and whether they can use specific AWS resources.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#controlling-access",
"main_header": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/developing-consumers-with-kcl.html",
"title": "Developing KCL 1.x Consumers"
}
],
"text": "If you are developing an application using the Kinesis Client Library (KCL), your policy must include permissions for Amazon DynamoDB and Amazon CloudWatch; the KCL uses DynamoDB to track state information for the application, and CloudWatch to send KCL metrics to CloudWatch on your behalf. For more information about the KCL, see Developing KCL 1.x Consumers.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#controlling-access",
"main_header": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"links": [],
"text": "For more information about IAM, see the following:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#controlling-access",
"main_header": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"links": [
{
"url": "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/UsingIAMWithDDB.html",
"title": "Using IAM to Control Access to Amazon DynamoDB Resources"
}
],
"text": "For more information about IAM and Amazon DynamoDB, see Using IAM to Control Access to Amazon DynamoDB Resources in the Amazon DynamoDB Developer Guide.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#controlling-access",
"main_header": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"links": [
{
"url": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/UsingIAM.html",
"title": "Controlling User Access to Your AWS Account"
}
],
"text": "For more information about IAM and Amazon CloudWatch, see Controlling User Access to Your AWS Account in the Amazon CloudWatch User Guide.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#controlling-access",
"main_header": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#policy-syntax",
"text": "Policy Syntax"
},
"links": [],
"text": "An IAM policy is a JSON document that consists of one or more statements. Each statement is structured as follows:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#policy-syntax",
"main_header": "Policy Syntax",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#policy-syntax",
"text": "Policy Syntax"
},
"links": [],
"text": "There are various elements that make up a statement:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#policy-syntax",
"main_header": "Policy Syntax",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#policy-syntax",
"text": "Policy Syntax"
},
"links": [
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_create.html#access_policies_create-generator",
"title": "IAM Policy Generator"
},
{
"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html",
"title": "IAM Policy Simulator"
}
],
"text": "As you create and manage IAM policies, you might want to use the IAM Policy Generator and the IAM Policy Simulator.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#policy-syntax",
"main_header": "Policy Syntax",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-actions",
"text": "Actions for Kinesis Data Streams"
},
"links": [],
"text": "In an IAM policy statement, you can specify any API action from any service that supports IAM. For Kinesis Data Streams, use the following prefix with the name of the API action: kinesis:. For example: kinesis:CreateStream, kinesis:ListStreams, and kinesis:DescribeStreamSummary.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-actions",
"main_header": "Actions for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-actions",
"text": "Actions for Kinesis Data Streams"
},
"links": [],
"text": "To specify multiple actions in a single statement, separate them with commas as follows:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-actions",
"main_header": "Actions for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-actions",
"text": "Actions for Kinesis Data Streams"
},
"links": [],
"text": "You can also specify multiple actions using wildcards. For example, you can specify all actions whose name begins with the word \"Get\" as follows:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-actions",
"main_header": "Actions for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-actions",
"text": "Actions for Kinesis Data Streams"
},
"links": [],
"text": "To specify all Kinesis Data Streams operations, use the * wildcard as follows:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-actions",
"main_header": "Actions for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-actions",
"text": "Actions for Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/kinesis/latest/APIReference/",
"title": "Amazon Kinesis API Reference"
}
],
"text": "For the complete list of Kinesis Data Streams API actions, see the Amazon Kinesis API Reference.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-actions",
"main_header": "Actions for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-arn-format",
"text": "Amazon Resource Names (ARNs) for Kinesis Data Streams"
},
"links": [],
"text": "Each IAM policy statement applies to the resources that you specify using their ARNs.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-arn-format",
"main_header": "Amazon Resource Names (ARNs) for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-arn-format",
"text": "Amazon Resource Names (ARNs) for Kinesis Data Streams"
},
"links": [],
"text": "Use the following ARN resource format for Kinesis data streams:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-arn-format",
"main_header": "Amazon Resource Names (ARNs) for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-arn-format",
"text": "Amazon Resource Names (ARNs) for Kinesis Data Streams"
},
"links": [],
"text": "For example:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-arn-format",
"main_header": "Amazon Resource Names (ARNs) for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#controlling-access",
"text": "Controlling Access to Amazon Kinesis Data Streams Resources Using IAM"
},
"h2": {
"urllink": "#kinesis-using-iam-examples",
"text": "Example Policies for Kinesis Data Streams"
},
"links": [],
"text": "The following example policies demonstrate how you could control user access to your Kinesis data streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html#kinesis-using-iam-examples",
"main_header": "Example Policies for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#akda-java-compliance",
"text": "Compliance Validation for Amazon Kinesis Data Streams"
},
"links": [],
"text": "Third-party auditors assess the security and compliance of Amazon Kinesis Data Streams as part of multiple AWS compliance programs. These include SOC, PCI, FedRAMP, HIPAA, and others.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/akda-java-compliance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/akda-java-compliance.html#akda-java-compliance",
"main_header": "Compliance Validation for Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#akda-java-compliance",
"text": "Compliance Validation for Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://aws.amazon.com/compliance/services-in-scope/",
"title": "AWS Services in Scope by Compliance Program"
},
{
"url": "https://aws.amazon.com/compliance/programs/",
"title": "AWS Compliance Programs"
}
],
"text": "For a list of AWS services in scope of specific compliance programs, see AWS Services in Scope by Compliance Program. For general information, see AWS Compliance Programs.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/akda-java-compliance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/akda-java-compliance.html#akda-java-compliance",
"main_header": "Compliance Validation for Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#akda-java-compliance",
"text": "Compliance Validation for Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/artifact/latest/ug/downloading-documents.html",
"title": "Downloading Reports in AWS Artifact"
}
],
"text": "You can download third-party audit reports using AWS Artifact. For more information, see Downloading Reports in AWS Artifact.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/akda-java-compliance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/akda-java-compliance.html#akda-java-compliance",
"main_header": "Compliance Validation for Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#akda-java-compliance",
"text": "Compliance Validation for Amazon Kinesis Data Streams"
},
"links": [],
"text": "Your compliance responsibility when using Kinesis Data Streams is determined by the sensitivity of your data, your company's compliance objectives, and applicable laws and regulations. If your use of Kinesis Data Streams is subject to compliance with standards such as HIPAA, PCI, or FedRAMP, AWS provides resources to help:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/akda-java-compliance.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/akda-java-compliance.html#akda-java-compliance",
"main_header": "Compliance Validation for Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#disaster-recovery-resiliency",
"text": "Resilience in Amazon Kinesis Data Streams"
},
"links": [],
"text": "The AWS global infrastructure is built around AWS Regions and Availability Zones. AWS Regions provide multiple physically separated and isolated Availability Zones, which are connected with low-latency, high-throughput, and highly redundant networking. With Availability Zones, you can design and operate applications and databases that automatically fail over between Availability Zones without interruption. Availability Zones are more highly available, fault tolerant, and scalable than traditional single or multiple data center infrastructures.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html#disaster-recovery-resiliency",
"main_header": "Resilience in Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#disaster-recovery-resiliency",
"text": "Resilience in Amazon Kinesis Data Streams"
},
"links": [
{
"url": "https://aws.amazon.com/about-aws/global-infrastructure/",
"title": "AWS Global Infrastructure"
}
],
"text": "For more information about AWS Regions and Availability Zones, see AWS Global Infrastructure.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html#disaster-recovery-resiliency",
"main_header": "Resilience in Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#disaster-recovery-resiliency",
"text": "Resilience in Amazon Kinesis Data Streams"
},
"links": [],
"text": "In addition to the AWS global infrastructure, Kinesis Data Streams offers several features to help support your data resiliency and backup needs.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html#disaster-recovery-resiliency",
"main_header": "Resilience in Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#disaster-recovery-resiliency",
"text": "Resilience in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#disaster-recovery",
"text": "Disaster Recovery in Amazon Kinesis Data Streams"
},
"links": [],
"text": "Failure can occur at the following levels when you use an Amazon Kinesis Data Streams application to process data from a stream:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html#disaster-recovery",
"main_header": "Disaster Recovery in Amazon Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#disaster-recovery-resiliency",
"text": "Resilience in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#disaster-recovery",
"text": "Disaster Recovery in Amazon Kinesis Data Streams"
},
"h3": {
"urllink": "#kinesis-record-processor-failure-processor",
"text": "Record Processor Failure"
},
"links": [
{
"url": "http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ExecutorService.html",
"title": "ExecutorService"
},
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/kinesis-record-processor-additional-considerations.html#kinesis-record-processor-read-throttling",
"title": "Read Throttling"
}
],
"text": "The worker invokes record processor methods using Java ExecutorService tasks. If a task fails, the worker retains control of the shard that the record processor was processing. The worker starts a new record processor task to process that shard. For more information, see Read Throttling.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html#kinesis-record-processor-failure-processor",
"main_header": "Record Processor Failure",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#disaster-recovery-resiliency",
"text": "Resilience in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#disaster-recovery",
"text": "Disaster Recovery in Amazon Kinesis Data Streams"
},
"h3": {
"urllink": "#kinesis-record-processor-failure-worker",
"text": "Worker or Application Failure"
},
"links": [],
"text": "If a worker\u00e2\u0080\u0094or an instance of the Amazon Kinesis Data Streams application\u00e2\u0080\u0094fails, you should detect and handle the situation. For example, if the Worker.run method throws an exception, you should catch and handle it.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html#kinesis-record-processor-failure-worker",
"main_header": "Worker or Application Failure",
"images": [],
"container_type": "p",
"children_tags": [
"code"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#disaster-recovery-resiliency",
"text": "Resilience in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#disaster-recovery",
"text": "Disaster Recovery in Amazon Kinesis Data Streams"
},
"h3": {
"urllink": "#kinesis-record-processor-failure-worker",
"text": "Worker or Application Failure"
},
"links": [],
"text": "If the application itself fails, you should detect this and restart it. When the application starts up, it instantiates a new worker, which in turn instantiates new record processors that are automatically assigned shards to process. These could be the same shards that these record processors were processing before the failure, or shards that are new to these processors.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html#kinesis-record-processor-failure-worker",
"main_header": "Worker or Application Failure",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#disaster-recovery-resiliency",
"text": "Resilience in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#disaster-recovery",
"text": "Disaster Recovery in Amazon Kinesis Data Streams"
},
"h3": {
"urllink": "#kinesis-record-processor-failure-worker",
"text": "Worker or Application Failure"
},
"links": [],
"text": "In a situation where the worker or application fails, the failure isn't detected, and there are other instances of the application running on other EC2 instances, workers on these other instances handle the failure. They create additional record processors to process the shards that are no longer being processed by the failed worker. The load on these other EC2 instances increases accordingly.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html#kinesis-record-processor-failure-worker",
"main_header": "Worker or Application Failure",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#disaster-recovery-resiliency",
"text": "Resilience in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#disaster-recovery",
"text": "Disaster Recovery in Amazon Kinesis Data Streams"
},
"h3": {
"urllink": "#kinesis-record-processor-failure-worker",
"text": "Worker or Application Failure"
},
"links": [],
"text": "The scenario described here assumes that although the worker or application has failed, the hosting EC2 instance is still running and is therefore not restarted by an Auto Scaling group.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html#kinesis-record-processor-failure-worker",
"main_header": "Worker or Application Failure",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#disaster-recovery-resiliency",
"text": "Resilience in Amazon Kinesis Data Streams"
},
"h2": {
"urllink": "#disaster-recovery",
"text": "Disaster Recovery in Amazon Kinesis Data Streams"
},
"h3": {
"urllink": "#kinesis-record-processor-failure-instance",
"text": "Amazon EC2 Instance Failure"
},
"links": [],
"text": "We recommend that you run the EC2 instances for your application in an Auto Scaling group. This way, if one of the EC2 instances fails, the Auto Scaling group automatically launches a new instance to replace it. You should configure the instances to launch your Amazon Kinesis Data Streams application at startup.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/disaster-recovery-resiliency.html#kinesis-record-processor-failure-instance",
"main_header": "Amazon EC2 Instance Failure",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#infrastructure-security",
"text": "Infrastructure Security in Kinesis Data Streams"
},
"links": [
{
"url": "https://d0.awsstatic.com/whitepapers/Security/AWS_Security_Whitepaper.pdf",
"title": "Amazon Web Services: Overview of Security Processes"
}
],
"text": "As a managed service, Amazon Kinesis Data Streams is protected by the AWS global network security procedures that are described in the Amazon Web Services: Overview of Security Processes whitepaper.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/infrastructure-security.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/infrastructure-security.html#infrastructure-security",
"main_header": "Infrastructure Security in Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#infrastructure-security",
"text": "Infrastructure Security in Kinesis Data Streams"
},
"links": [],
"text": "You use AWS published API calls to access Kinesis Data Streams through the network. Clients must support Transport Layer Security (TLS) 1.0 or later. We recommend TLS 1.2 or later. Clients must also support cipher suites with perfect forward secrecy (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic Curve Ephemeral Diffie-Hellman (ECDHE). Most modern systems such as Java 7 and later support these modes.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/infrastructure-security.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/infrastructure-security.html#infrastructure-security",
"main_header": "Infrastructure Security in Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#infrastructure-security",
"text": "Infrastructure Security in Kinesis Data Streams"
},
"links": [
{
"url": "https://docs.aws.amazon.com/STS/latest/APIReference/Welcome.html",
"title": "AWS Security Token Service"
}
],
"text": "Additionally, requests must be signed by using an access key ID and a secret access key that is associated with an IAM principal. Or you can use the AWS Security Token Service (AWS STS) to generate temporary security credentials to sign requests.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/infrastructure-security.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/infrastructure-security.html#infrastructure-security",
"main_header": "Infrastructure Security in Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#security-best-practices",
"text": "Security Best Practices for Kinesis Data Streams"
},
"links": [],
"text": "Amazon Kinesis Data Streams provides a number of security features to consider as you develop and implement your own security policies. The following best practices are general guidelines and don\u00e2\u0080\u0099t represent a complete security solution. Because these best practices might not be appropriate or sufficient for your environment, treat them as helpful considerations rather than prescriptions.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html#security-best-practices",
"main_header": "Security Best Practices for Kinesis Data Streams",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#security-best-practices",
"text": "Security Best Practices for Kinesis Data Streams"
},
"h2": {
"urllink": "#security-best-practices-privileges",
"text": "Implement least privilege access"
},
"links": [],
"text": "When granting permissions, you decide who is getting what permissions to which Kinesis Data Streams resources. You enable specific actions that you want to allow on those resources. Therefore you should grant only the permissions that are required to perform a task. Implementing least privilege access is fundamental in reducing security risk and the impact that could result from errors or malicious intent.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html#security-best-practices-privileges",
"main_header": "Implement least privilege access",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#security-best-practices",
"text": "Security Best Practices for Kinesis Data Streams"
},
"h2": {
"urllink": "#security-best-practices-roles",
"text": "Use IAM roles"
},
"links": [],
"text": "Producer and client applications must have valid credentials to access Kinesis data streams. You should not store AWS credentials directly in a client application or in an Amazon S3 bucket. These are long-term credentials that are not automatically rotated and could have a significant business impact if they are compromised.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html#security-best-practices-roles",
"main_header": "Use IAM roles",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#security-best-practices",
"text": "Security Best Practices for Kinesis Data Streams"
},
"h2": {
"urllink": "#security-best-practices-roles",
"text": "Use IAM roles"
},
"links": [],
"text": "Instead, you should use an IAM role to manage temporary credentials for your producer and client applications to access Kinesis data streams. When you use a role, you don't have to use long-term credentials (such as a user name and password or access keys) to access other resources.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html#security-best-practices-roles",
"main_header": "Use IAM roles",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#security-best-practices",
"text": "Security Best Practices for Kinesis Data Streams"
},
"h2": {
"urllink": "#security-best-practices-roles",
"text": "Use IAM roles"
},
"links": [],
"text": "For more information, see the following topics in the IAM User Guide:",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html#security-best-practices-roles",
"main_header": "Use IAM roles",
"images": [],
"container_type": "p",
"children_tags": [
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#security-best-practices",
"text": "Security Best Practices for Kinesis Data Streams"
},
"h2": {
"urllink": "#security-best-practices-sse",
"text": "Implement Server-Side Encryption in Dependent Resources"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html",
"title": "Data Protection in Amazon Kinesis Data Streams"
}
],
"text": "Data at rest and data in transit can be encrypted in Kinesis Data Streams. For more information, see Data Protection in Amazon Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html#security-best-practices-sse",
"main_header": "Implement Server-Side Encryption in Dependent Resources",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#security-best-practices",
"text": "Security Best Practices for Kinesis Data Streams"
},
"h2": {
"urllink": "#security-best-practices-cloudtrail",
"text": "Use CloudTrail to Monitor API Calls"
},
"links": [],
"text": "Kinesis Data Streams is integrated with AWS CloudTrail, a service that provides a record of actions taken by a user, role, or an AWS service in Kinesis Data Streams.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html#security-best-practices-cloudtrail",
"main_header": "Use CloudTrail to Monitor API Calls",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#security-best-practices",
"text": "Security Best Practices for Kinesis Data Streams"
},
"h2": {
"urllink": "#security-best-practices-cloudtrail",
"text": "Use CloudTrail to Monitor API Calls"
},
"links": [],
"text": "Using the information collected by CloudTrail, you can determine the request that was made to Kinesis Data Streams, the IP address from which the request was made, who made the request, when it was made, and additional details.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html#security-best-practices-cloudtrail",
"main_header": "Use CloudTrail to Monitor API Calls",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#security-best-practices",
"text": "Security Best Practices for Kinesis Data Streams"
},
"h2": {
"urllink": "#security-best-practices-cloudtrail",
"text": "Use CloudTrail to Monitor API Calls"
},
"links": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/logging-using-cloudtrail.html",
"title": "Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail"
}
],
"text": "For more information, see Logging Amazon Kinesis Data Streams API Calls with AWS CloudTrail.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/security-best-practices.html#security-best-practices-cloudtrail",
"main_header": "Use CloudTrail to Monitor API Calls",
"images": [],
"container_type": "p",
"children_tags": [
"a"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": [
{
"url": "https://docs.aws.amazon.com/streams/latest/dev/security.html",
"title": "Security in Amazon Kinesis Data Streams"
}
]
},
{
"h1": {
"urllink": "#history",
"text": "Document History"
},
"links": [],
"text": "The following table describes the important changes to the Amazon Kinesis Data Streams documentation.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/history.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/history.html#history",
"main_header": "Document History",
"images": [],
"container_type": "p",
"children_tags": [],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
},
{
"h1": {
"urllink": "#glossary",
"text": "AWS glossary"
},
"links": [
{
"url": "https://docs.aws.amazon.com/general/latest/gr/glos-chap.html",
"title": "AWS glossary"
}
],
"text": "For the latest AWS terminology, see the AWS glossary in the AWS General Reference.",
"base_url": "https://docs.aws.amazon.com/streams/latest/dev/glossary.html",
"main_url": "https://docs.aws.amazon.com/streams/latest/dev/glossary.html#glossary",
"main_header": "AWS glossary",
"images": [],
"container_type": "p",
"children_tags": [
"a",
"em"
],
"aws_service": "streams",
"aws_guide": "developer",
"headers": []
}
]